{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "MINI PROJECT 288_293.ipynb",
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "import tensorflow as tf\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sb"
      ],
      "metadata": {
        "id": "fZsdnhx0wnCK"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fashion_mnist = tf.keras.datasets.fashion_mnist\n",
        "(train_images, train_labels),(test_images,test_labels) = fashion_mnist.load_data()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "56XCevcxw14j",
        "outputId": "af80c3de-b4b8-4374-b408-9a3bd1df9f73"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/train-labels-idx1-ubyte.gz\n",
            "32768/29515 [=================================] - 0s 0us/step\n",
            "40960/29515 [=========================================] - 0s 0us/step\n",
            "Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/train-images-idx3-ubyte.gz\n",
            "26427392/26421880 [==============================] - 0s 0us/step\n",
            "26435584/26421880 [==============================] - 0s 0us/step\n",
            "Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/t10k-labels-idx1-ubyte.gz\n",
            "16384/5148 [===============================================================================================] - 0s 0us/step\n",
            "Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/t10k-images-idx3-ubyte.gz\n",
            "4423680/4422102 [==============================] - 0s 0us/step\n",
            "4431872/4422102 [==============================] - 0s 0us/step\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "train_images.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "d5J5vKC0w6lv",
        "outputId": "9f1a9fe7-270b-461b-85d7-aa028fbd6f60"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(60000, 28, 28)"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "test_images.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VMCO-A3tw-1x",
        "outputId": "3c4d3a9f-2df4-466c-fbee-c041d9153285"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(10000, 28, 28)"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "class_names = ['T-shirt/top', 'Trouser', 'Pullover', 'Dress', 'Coat', 'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']\n",
        "plt.figure(figsize=(10,10)) \n",
        "for i in range(36):\n",
        "  plt.subplot(6,6,i+1)\n",
        "  plt.xticks([])\n",
        "  plt.yticks([])\n",
        "  plt.grid(False)\n",
        "  plt.imshow(train_images[i], cmap=plt.cm.binary) \n",
        "  plt.xlabel(class_names[train_labels[i]])\n",
        "  plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "BOJBa9b6xEko",
        "outputId": "b58b426d-3f7b-4598-9e37-013fbb6fd8ff"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x720 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAADYAAAA7CAYAAAAw23kDAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAGhUlEQVRoge2aQWgb6RXHf29GoxnJsuw4MnhT0pokTrZJod00ZXEumxxyaqCHFnpp2Ib4VFh6yLGXXQotvQVCN5CEBVHwJeS2hrj0kBBQoPHablIHNnGMGsd2pciWLCuyRpqZrwePZuVNsrazlhe5+oPg6Zv3ffN+M+89fTNIlFLsRmnfdQDNUhus1dQGazXtWrDQVickEgnV39/fhFA2VjqdJpfLyWZ8twzW39/P2NjY1qPaBp04cWLTvrs2FdtgraY2WKupDfZt5XleYLuu+8rx1z0+eZ73Wt/NaMfAGgPXdT2wZ2ZmuHLlCufOnXtljqZp63y3oi3/QL+tNO2razg+Ps7c3BxPnjxhenqadDrNwsIC169fZ2hoKPDzPI9nz54xPz/PyZMnt3S+HQFzXZfl5WXS6TSZTIaRkRGWlpaYnZ2lVCoRCoVwXZdkMsmFCxcQWds1ZTIZxsbGmJ2d/e7AlFJBQHV5nkexWGR2dpapqSlSqRSPHz9mYmKC7u5u4vE4PT09GIbB8+fPKRQKADiOQ6FQ4M6dO0xOTpJIJCiXyzsH1lg3juNgGAYAtVqNarXK8vIyqVSK4eFhUqkUkUiE3t5eDh48iOd5eJ6HruvE43FisRhnz54ll8uRz+e5e/cuN27c4MCBAwwNDTEzM7OzYCKCiGAYBkoplFKkUilGR0e5desW8/Pz7Nmzh8OHD6PrOsVikZWVFSzLwrIsisUihUKBrq4ubt68yeXLl4lGoxw6dIiLFy9y+vRpKpUK1Wp158AaG8Lq6irXrl3j6tWrZLNZ9u7dSzweZ2BgAMdxePHiBUBwIertPxqNArCysgLA4OAgyWSSeDzOyMgI58+f5969exw5cgTbtpsL9ujRI+7fv8/09DT5fJ5yuUwulyOXyxGLxUgkElQqFVzXpVQq4TgOAJFIJLA1TUMpheM46LpOJBLBNE0mJiYYHBzEtm1M06Sjo4O+vj6KxSKLi4vNA8vn81y6dIlMJkO5XA5+QFdXV9F1HU3TgrSpB6aUwnVddF3Htu0AyPO8oB6r1Squ62KaJp7nrQMHAv+mgZmmyfHjx3n69CkLCwssLS1RKpWCwOonr9dfrVYLUkgptQ5MRNB1HcMw0HU9SFOAUCiEiAQNyjCMIG2bBnbmzBmOHTtGNptlaWmJxcVFstks+Xye5eVlVldXcRwH13UDME3TCIfDiAihUIhwOIxhGFiWRTQaDVKxfqfq9WuaJrFYjHA4TDKZbB6YiNDX18f+/fsREVzXpVKpkM1myWQyzM3Nkc/nsW0bz/OCTqlpGp2dnViWRWdnJ9FoNOiMlmVhGAahUChIW9d1UUphmmYwb3h4uHlgmqahaRrFYnHdBrWnp4d9+/Zx9OjRYH9XB6vbtm0Hd9FxHKrVKrVajZcvX2LbNqVSKahFz/OoVquICKZpYlnWllr+W3XFSCRCJBIJvteDrne4crlMtVoNCl4pFezUQ6FQMEdECIfDxGIxotFoUHu1Wi1ISVirt46ODizLai7Y16Vp2jrQ7u7u7Vj2W6n9oNlqaoO1mtpgraZdCyZb/deAiLwA/tOccDbUD5RSvZtx3DJYq2jXpuL/N5iI/EFEpkTkgYhMisj72xWAiJwSkc+3a726NtwEi8ggcBY4rpSyRSQBhLc7kLeRiISUUs7rjm3mjr0D5JRSNoBSKqeUmheRtIh8IiLjIvJQRN71T9YhIp+JyD9FZEJEfuGP94vIXd9/XEReebUrIj/z5xwUkZ+KyB0R+UJERkXkHd/ntohcEpEx4PdvjLr+hPumDxADJoHHwKfAB/54GvjIt38HXPftPwG/8e1uf14HEAUsf3wAGPPtU8DnwEngC+D7gAGkgF7f59fAZ759G/h0w7g3cvAX0/0APgH+C/zWB/uef/x94B++PQb8278Yk8Az4IdAF/A34KE/Xm4Ae+rP2eeP/QgoNqzxEPh7A9gHG8W8qQdNpZTrL3hbRB4CH/qH6m8wXb6qVwF+qZT6snENEfkYyAA/Zq0EKg2HFwALeA+Y99eYUkoNviGklxvFvGGNicgRERloGPoJ37zzGAU+Ev89moi85493AQtKKQ84x1oW1FUAfg78WUROAV8CvX7jQkQMETm2UayN2kzziAFJEXkkIg+Ao8DH3+D/R9Zq5IGITPnfYa0+PxSRfwHv8rWrrpTKsNZ9/8ranfsV8Bfff5K1Gty02luqVlMbrNXUBms1tcFaTbsW7H9XOG90gdyL/gAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAEMAAAA7CAYAAAAguzffAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAIJ0lEQVRoge2ZX2gU2x3HP2dmdndmN+66JWkwNTEohqJUC92HPPTPJWq46ItQQXptxT80+HTry8W3C+1LoVzaPtwiLWgDwT4VrBhtYmuqorlejCW9ptIrCdWAJObfxuwms7vz5/Rhd6aTexOTkNHYsl8Ycjh75szvfDi/P+dESCmpqixlow14m1SFEVAVRkBVGAFVYQRUhRGQFtZEtbW1srm5Oazp1qSnT58yNTUl1jtPaDCam5sZGBgIa7o1KZPJhDJP1U0CqsIIKDQ3Wa+mp6eZmJggGo2SSCRIJpPE4/E3asNbA+PGjRt0dXVRX1/Prl27aG1tJZPJYBjGl8YWi0Usy0JRlFCBvRUwpJQMDAwwOzvLzMwM169fp76+nlOnTnH27NlFYxcWFrh69Sr9/f3U1dVx7ty50OzYMBhSSqSUKIqClJL+/n7i8TimadLS0sLExASdnZ20tbWxZ88eAObm5jhz5gwPHjwgn8+zY8cO9u3bF5pNGwZDiHJZIKVkdnaWZ8+esX37dizLQtM0Nm/ezNjYGO3t7Rw8eJDGxkYuXryIqqps2rQJXddJp9Ok0+nQbNpQNxFCUCwW6e3txTAMXNdFCEGhUMC2bRKJBEIIenp6kFKi6zqGYeA4DsVikfn5eaampkKzZ8NjhmmadHV1EYlEKBQKCCGQUuI4DgCxWAwpJZZlkUqlgHIAdV2XXC7H8PBwaLZsaJ3hOA7ZbJZ79+6haRqWZeG6rg/DdV0/YySTSWKxGIqiEI1GURSFfD7P48ePQ7PnjcPwAifA/Pw8jx49wjRNfwdAGZJt20DZlVzXxbZtFEUhEomgqqq/k4aGhkKz7Y3DsCwLx3FwHIfR0VE6OztJp9PE43E0rey1rusCZXAeiEQigW3bWJaFZVn+uMHBQcK6x33jMKLRKJqmMTo6yrVr17hy5QrJZJJ8Po+iKAghUBQFRVFQVRVFUdB1nVgsRqFQYGFhgVKpRCQS8VNxLpcLxbbXEkCDrgCgKIuZ9/T0cOHCBW7evElLSwu2beM4DoZhYNu2/74XOzRNw3VdVFX1+zxYmqaxsLAQit2vBYYQwq8jgurr6+P8+fN8+umnWJbF1q1bUVWVQqFAIpHAcRxKpRJSSt9lhBCoqur/FovFiEQiPpRIJOJnnvXqtaXWUqnE5OQkQ0NDjIyMcPfuXQYHB3Ech0QigaZpKIqCZVlEIhH/PW+RnruoqurvGM99NE1DSkmpVPIzThgKFcbIyAi3b9/m+fPnZLNZXr58iWmajI2NMT4+7oOIRqOLFu0FVS9teukV8OMIgGEYqKq66JulUsmvP9ar0GC4rsvly5fp6+tjbGwM0zSxLItkMolpmhiG4adFb7wXID0Yqqr6oKSUCCGIxWK4rkupVPKhePWIbdtomhbayVWElZZ2794tE4kExWKRaDSKqqp+7JBSoqoqc3NzPgBP3g7xCinAdw8hhB8g5+bm0HUdXdeB8o4oFosIIYhGozx8+PDtuQPNZrO4rouu64uKJkVRqKmpYWFhASHEon7vicVifiB1XdePJ975I5/Pk0ql/EufmpoaP8MoisKTJ09CWUNoMLwDlneg8s4TUL6D8LZ9NBr1aw3AP8Z75xLHccjlcpimia7rtLa2cujQIXp7e/0s4wXP+fn50DIJhAhjy5YtHDhwgFu3bjE+Po6U0g94hmGgaRqFQsF3BS94em7jui4zMzMA7N+/n2PHjtHW1gaUgV26dIm6ujrf5WKxGKZpUiwWw1pCeDEjk8nIO3fuYJomfX19dHd3c//+fSYnJ8nlcsTjceLxuL8zFEXBtm2KxSIvXrxA13U6Ojo4ffo0TU1Nfj0B5WDb3NxMKpValI69IkxRlLcrZkA59RmGQXt7O5lMhrm5OUzTZGBggOHhYUZHR5mamiKfz2PbNrquU1tby+HDhzl+/DgNDQ3U19f7EDzXEkLQ0dFBPB4nEokQjUaJx+Ok02m2bdvGyZMnQ7E/VBhe6kulUn7ud12XpqYmpqenyWazzM/PUyqVfDeJRCI0Njayd+/eZecTQnD06FFUVfUfTdMwDCO0GgPewOWOoig0NDTQ0NCwrnl27twZkkXLq/pPpICqMAKqwggotNQqhJgEnoUy2dq1TUpZt95JQoPx/6CqmwRUhRHQqmAIIQ4LIaQQ4uurHP9UCFG7RH9+Lcatdfwr5jkhhFix0FntzvgBcLfy939RJ4CVq77gTfRSD1ADPAdagM8D/e8At4A/Av8CLvHfgPwUqAUM4M/Ajyv9+cD7HwAPgM+Any7z7TzwK+CfwE2grtL/TeB+5d3LQHq5fuBIZZ7PgUHAWHatq4BxDLhQafcD3wrAeAlspbzDPgG+HYDRDPwVOB5cXOVvO/A7QFTe7Qa+u8S3JXCs0v4Q+LjS/gz4XqX9M+DXK/TfAjIrrnUVMLqBA5X2+8BHARh/CYw7D/wwAOMf3kKWgPFRZcxg5RkGTi/xbQfQKu3tlbEpYDQwZgfw9+X61wLjlQc1IcRXgDbgG0IICaiAFEJ8UBkSvFlxWHzwuwe8K4T4g/xyMSOAn0spf/uq7y+h11oUrRRAjwBdUsptUspmKWUj8G/gO6uY+0MgC/xmid96gVNCiBoAIcTXhBBfXca+I5X2e8BdKeVLICuE8Gz4EXB7uf5KOwdsWtHiFVzkb8C7X+h7n7JLvAN0B/o/Bk58IYAK4PfAL5YIoD8BHlWeT4AdywTQXwJDQB9LB9A/sXQADfZ/n1UE0Go5HlC1Ag2oCiOgKoyAqjACqsIIqAojoCqMgKowAvoPZ2oLaTa8OXAAAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAADAAAAA7CAYAAAA9xQlEAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAIFUlEQVRoge2Zz28dVxXHP2fmzryZ98M/YsdtKhws2QSJJFIpkVAiIbrooooACSRWRSorVlTqggUqG/6ASOyAXWCJkFiUHZs0IkJdNAlqBEFpmwbJpIkz9nvxvHnzey4L+16cNHFsv1omko90NZq5d86c773f8+PeEa01z7M4B23AuHII4KDlEMBBy3MPQO1m8OzsrF5YWHhq//LyMk3TICLUdU3TNJgwrbUmDEPbX5YldV3jui6+71PXNZOTk0xMTCAin9N9584doij6XMeuACwsLPDBBx9YgwBEhDRNuXjxIleuXGFqagqApmnI85z19XXSNOXcuXO88cYbvP322ziOg+M4hGFIt9vFcRwL5uzZs5w/f54jR45Y/QBnzpx5ok1jU6iqKu7du8f7779PEAT2uVKKXq/H7OwsYRgCEEURRVGglLKz7XkejuPgeR51XXP9+nWGw6HV86xEOzaA0WjErVu3GAwGKKVomsY2x3EIgoDJyUmiKOLSpUtMT0/T7XYJggDXddFaIyI4jkO73WYwGPDZZ58xGo32F4CIICIkScKNGzcslbTWlv9FUdA0Dd1ulyRJuHnzJnNzc9YXqqoCwHVde19VFR999BFra2s7smPsFciyjNu3b6O1ZjQaUVUVTdNYw0SEqqrwPI+JiQmqqsJ1XRzHQURwXRfP86iqys768vIyDx8+tCuznezKiZ8keZ6zvLyMUoq6rsnzHN/3UUqhlLJOWFUVSim01jiOY/tEhKIocByHqqrQWjMYDMjzfEffH2sFTJjsdDrWiLt375KmKWVZUlWVvQIURYHWmqIobBg1q5VlGWtra7Tbbe7fv08cx/sPIE1ToigiTVMcxyFJEgaDAa7r4roudV1bXjdNY8EYJ9+6Gp9++qkFvL6+TlEU+w+g3+/bD1dVRZqmVFVleWsiiOG7odPjV6U2mDwcDqnrmk6nw2g0Yn19fX8BjEYjoiiiaRqUUmRZRqvVsv3GQK31I1lZRFBK4TiO7fM8jyiKqOsax3GIooiVlZX9B7C2tobWGtd1ieOYIAgeiRxaa9sMiMfvzeqMRiPrEysrK0RRtL8AhsMhKysrFEWBiDAcDvE8DxF5hOemGf7XdW2bqY1MOQFQ1zVRFO0oF4wVRvM8J4oiyrJERMiyDN/37eyKiE1sRrb6gnH2qqpsjtBak6Ypg8HgkZJi3wAMh0PKstxQphRhGFpu13VtZx826GTAhmFo75VSdDodYCPUmoS4EyceC0BVVTbhmJBqCrrHZ90AarValmLmeVmWBEGA7/uUZUme53bMs2TPPmBifNM0pGlKv9/n1KlTTE9P2z4jhvdKKRvrTUltaqCpqSna7Tb9ft/2Pz4RXyiANE3Jssw6Z5Ikj2xitsb+rQ02uG+MM2PzPCcMQ5aXlwFsVHoWjfYMIMsyRqORjSZJkhCGoeU4/C+EGjo8ng+2jtFaMz8/T57ntggsioI0TfcHQFmWlGVpKVAUBYuLizaSbHVeM6aua1tOmPutq7awsGDpZnQ+q6TYMwDjYGam6rrm9OnTNiJtpcxWZzQ1kXkHNkqNLMs4fvw4WmuyLLO+kmXZtnbsOQoZjltFSuH7vi0rfN8HsBQKw9CCNQ6ulKLVaqG15t69e8zPz9Nut61+EyD2BYAxxPM8Wq0WZVnaa7/fp9vt4rouaZoSxzEzMzOsrq7SarXodDqkacra2pot3pIkQURYXV1lbm6OIAgs4G0ncq8ATORZXV1lfX2dsiyJ49jGda213bBnWUYURdy8eRPHcZiZmWF6epper4dSiiRJcByHF154gWPHjrG4uEir1SJJEkvJLxxAURQkSWL3wWVZcu3aNSYnJ21tY6KP2a0Zo4uiIM9zPM8jDEMGgwFlWXL58mWSJCGOY+v4g8FgWzv2TCGz5PPz88RxTJqm9Hq9DaWbpxPmrMdEFUMr4wOm9DZF4Gg0wvd97t+/TxAETExM7N+phAmjpv4xBnmeZ8sC07TWxHFMu922zmn2zKYOEhF836fT6TySrZ90SveFADB1jDk2MdWoOVkws258wWRck31NHWU2Qa7rkmUZSilLrW63S7fb3daOPVOo3W7TarUoioJ2u83S0hJBEDAcDq1zbi0rJiYmAIjj2J5ImOOVqakpG/87nY5d2ZmZGV566aX9ATA3N8fx48cJgoB+v88777yDUorBYECv10NrTb/f5+OPP+bBgwcsLS3hui537961lJmbm+PEiRPUdc1wOGR6epqiKLh69SpVVXH06FGWlpb2B8CLL77Ia6+9RqfT4ZNPPuH111/H87y9qrMSxzEXLlzA8zxOnjz5zIMt2c1fShF5APx7TBv3Kl/WWh99/OGuAPw/ynP/h+YQgIj8QkT+ISIfisjfReSbInJHRGafMPZ7IvLzp+h5VUTO7fb7Y23qReQs8B3gFa11vmm0/7TxWut3gXefoEcBrwJD4G+7sWHc4/VjQKS1zjcNjDYNAnhLRL4LeMAPtdb/EpEfA2e01j8Vkd8BGfB14D/AOaAWkR8Bb2mt/7oTA8al0F+AeRG5JSK/FpFvb+mLtNavAL8BfvaU978EnNNa/wD4LfArrfXLOzUexgSgtR4C3wB+AjwA/rA5ywB/2rxeBRaeouKPWuvtz02eIWP/odk04D3gPRG5Aby52WV+sdTbfCcZ9/tjrYCIfFVEvrLl0cvsPVPHQG+3L43rA13g9yLyTxH5EPga8Ms96voz8P3NUPytnb50WEoctBwCOGg5BHDQcgjgoOW5B/BfTHRYAcfbCnYAAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAADIAAAA7CAYAAAA5MNl5AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAEwElEQVRoge2ZT2gcVRzHP9+dPzu73S0m3RCEQiI0NagNVmODhxjiTdFLKxY85aSnXqw9CaJHD54ECx5iQA96MdfSeiiCB5OY1rghsWxDJcXa7p8km3XZTWb3ecg0bArd7rZbXeJ+YZjHvDe/9/2832/YeTsyxrAfFPqvDbRKHZB2Uwek3bRvQOxmBicSCdPf3/+YrNTXjRs3yGQyul9/UyD9/f3Mzc09uquH0PDwcN3+fVNaHZB2Uwek3dQBaTd1QNpNTf2yN6JcLkc+n8dxHKLRKJ7nEQqFCIfDrZ5qj1oC4vs+i4uLSCKfz5NKpbBtm56eHrq6urAsi1gsRiwWo6uri0gkgnTf16aHUtMgxpg9JowxZDIZJiYmSCQSnDp1ipWVFTKZDADhcJhyucz29jbHjh1jfHycgYEB4vE4odBOZbcCqmmQeyfN5XJcuHAB13W5ePHinv7bt2+ztLTErVu3OHDgAOl0munpafr6+hgdHeXo0aPY9oMtNPIHSVMgxWKRZDLJwYMHsW0bYwxzc3OcO3eO2dlZJFGpVLAsC4De3l4OHTpEOp1mamqKI0eOcObMGVZXV5mfn+f69eucOHGC3t7euvM2krGmQNbX1zl79ixDQ0McPnyYeDxOqVTi9OnTpFIplpeX8X2farWKMYZyuUw+n2dzc5O1tTVmZmZYWVnh5s2bZLNZ4vE4qVSK48ePs7W1heM4rK2tUSqVqFQqSNrNWLFYbB1IIpFgbGyMZDLJ4uLinudlcnISz/PIZrN0d3dj2zaVSgXf9/F9n1KpxNbWFpZlUSwW2d7exrIs7ty5w8LCAr7vEwqFqFQqVKtVLMvCcRzC4TDRaBTf91sH4rouJ0+eZGRkhM3NTTY2NsjlcpTLZQqFAr7vE41GcV0X27b3lEQ0GsVxHDzPw3Xd3TGWZREKhbAsazcDlmXhui6O4+A4Dq7rcunSpdaBAAwODjI4OIgxhkKhQDabpVgsUigUKBaLVKtVqtUqknZBJBGLxfA8D8/ziEQiOI6za94Yg23bu0B3j9rFcF23tSB3JYl4PE48Hn/YEC3VvnlF6YC0mzog7aYOSLupA9Ju2jcgauarrqQ08Mfjs1NXfcaYnvt1NgXSzto3pfX/BJH0oaRFSQuSrkoaeVQDki5Lqvs5qpExDe9HJL0MvAG8YIwpS0oA9Xc7/6KayciTQMYYUwYwxmSMMX9K+kjSrKSkpC8VbOmCVfxU0oyka5JGg+sRSd9KWpI0DUTuTiDpvKS5IOufNEVijGnoAGLAVeAa8AUwFlzvrhnzNfBm0L4MfBa0Xwd+CNrvA5NBewjwgeHaWIAV3D9UE2u4nr+GM2KMKQAvAu8CaeA7SRPAuKSfJf0GvAo8W3Pb98H5F6A/aL8CfBPEXAAWasa/LWkeuBLEeaZRf03t2Y0xFXZW53Jg/D12VnXYGLMq6WPAq7mlHJwrD5pL0lPAB8BLxpg1SVP3xKqrhjMi6WlJAzWXngd+D9oZSTHgrQZC/Qi8E8R8jp2FADgI/A1sSOoFXmvUGzSXkRjwuaQn2KnrFDtltg4kgb+A2QbinAe+krQELLFTdhhjfpV0BVgGVoGfmvDWeUVpO3VA2k0dkHZTB6TdtG9A/gHYId7qtSieeAAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#splitting of data into 5 workers(12000 training each) \n",
        "train1 = train_images[:12000]\n",
        "train2 = train_images[12000:24000] \n",
        "train3 = train_images[24000:36000] \n",
        "train4 = train_images[36000:48000] \n",
        "train5 = train_images[48000:60000]"
      ],
      "metadata": {
        "id": "J9YczkNuxUY8"
      },
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "len1 = len(train1) \n",
        "len2 = len(train2) \n",
        "len3 = len(train3) \n",
        "len4 = len(train4) \n",
        "len5 = len(train5)\n",
        "len_test = len(test_images)"
      ],
      "metadata": {
        "id": "smIE0tc0xqV6"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "y1 = train_labels[:12000]\n",
        "y2 = train_labels[12000:24000] \n",
        "y3 = train_labels[24000:36000] \n",
        "y4 = train_labels[36000:48000] \n",
        "y5 = train_labels[48000:60000]"
      ],
      "metadata": {
        "id": "yDOPWIuFxw5i"
      },
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.Series(data=[len1, len2, len3, len4,len5], index=['Client1', 'Client2', 'Client3', 'Client4','Client5'], name=\"DATA\").rename_axis(\"Data set length\", axis=0)\n",
        "x = df.index \n",
        "y = df.values\n",
        "plt.bar(x, y)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 283
        },
        "id": "wAhu14ZMyBsx",
        "outputId": "c050a0ea-2a5f-41af-ac51-d444a8353719"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<BarContainer object of 5 artists>"
            ]
          },
          "metadata": {},
          "execution_count": 14
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# normalizing the input \n",
        "train1 = train1/255.0 \n",
        "train2 = train2/255.0 \n",
        "train3 = train3/255.0 \n",
        "train4 = train4/255.0 \n",
        "train5 = train5/255.0"
      ],
      "metadata": {
        "id": "zCjMUSIsyD-1"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# reshaping images in 3 dimensions \n",
        "train1 = train1.reshape(-1,28,28,1) \n",
        "train2 = train2.reshape(-1,28,28,1) \n",
        "train3 = train3.reshape(-1,28,28,1) \n",
        "train4 = train4.reshape(-1,28,28,1) \n",
        "train5 = train5.reshape(-1,28,28,1)"
      ],
      "metadata": {
        "id": "9K_XmirmyOXR"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def MODEL1():\n",
        "  model = tf.keras.Sequential([ \n",
        "      tf.keras.layers.Flatten(input_shape=(28, 28)), \n",
        "      tf.keras.layers.Dense(128, activation='relu'), \n",
        "      tf.keras.layers.Dense(10)\n",
        "    ])\n",
        "  model.compile(optimizer='adam',loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True), metrics=['accuracy']) \n",
        "  return model"
      ],
      "metadata": {
        "id": "2tip14vzyWWW"
      },
      "execution_count": 19,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#5 models for 5 clients \n",
        "model1 = MODEL1() \n",
        "model2 = MODEL1() \n",
        "model3 = MODEL1() \n",
        "model4 = MODEL1() \n",
        "model5 = MODEL1()"
      ],
      "metadata": {
        "id": "bKZSgivPyoIK"
      },
      "execution_count": 20,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#training 5 models for 5 clients \n",
        "for i in range(1):\n",
        "  h1 = model1.fit(train1, y1, validation_split=0.2, epochs=3, verbose=1) \n",
        "  h2 = model2.fit(train2, y2, validation_split=0.2, epochs=3, verbose=1) \n",
        "  h3 = model3.fit(train3, y3, validation_split=0.2, epochs=3, verbose=1) \n",
        "  h4 = model4.fit(train4, y4, validation_split=0.2, epochs=3, verbose=1) \n",
        "  h5 = model5.fit(train5, y5, validation_split=0.2, epochs=3, verbose=1)\n",
        "  \n",
        "  plt.plot(h1.history['accuracy'])\n",
        "  plt.plot(h1.history['val_accuracy']) \n",
        "  plt.title('Model Accuracy') \n",
        "  plt.ylabel('Accuracy')\n",
        "  plt.xlabel('Epoch')\n",
        "  plt.legend(['train', 'test'], loc='upper left') \n",
        "  plt.show()\n",
        "  model1.evaluate(test_images, test_labels, verbose=2)\n",
        "  \n",
        "  plt.plot(h2.history['accuracy']) \n",
        "  plt.plot(h2.history['val_accuracy']) \n",
        "  plt.title('Model Accuracy')\n",
        "  plt.ylabel('Accuracy')\n",
        "  plt.xlabel('Epoch')\n",
        "  plt.legend(['train', 'test'], loc='upper left') \n",
        "  plt.show()\n",
        "  model2.evaluate(test_images, test_labels, verbose=2)\n",
        "  \n",
        "  plt.plot(h3.history['accuracy']) \n",
        "  plt.plot(h3.history['val_accuracy']) \n",
        "  plt.title('Model Accuracy') \n",
        "  plt.ylabel('Accuracy')\n",
        "  plt.xlabel('Epoch')\n",
        "  plt.legend(['train', 'test'], loc='upper left') \n",
        "  plt.show()\n",
        "  model3.evaluate(test_images, test_labels, verbose=2)\n",
        "  \n",
        "  plt.plot(h4.history['accuracy']) \n",
        "  plt.plot(h4.history['val_accuracy']) \n",
        "  plt.title('Model Accuracy') \n",
        "  plt.ylabel('Accuracy')\n",
        "  plt.xlabel('Epoch')\n",
        "  plt.legend(['train', 'test'], loc='upper left') \n",
        "  plt.show()\n",
        "  model4.evaluate(test_images, test_labels, verbose=2)\n",
        "\n",
        "  plt.plot(h5.history['accuracy'])\n",
        "  plt.plot(h5.history['val_accuracy']) \n",
        "  plt.title('Model Accuracy') \n",
        "  plt.ylabel('Accuracy')\n",
        "  plt.xlabel('Epoch')\n",
        "  plt.legend(['train', 'test'], loc='upper left') \n",
        "  plt.show()\n",
        "  model5.evaluate(test_images, test_labels, verbose=2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "Q-KOs4gZy8ea",
        "outputId": "2e09d72c-4e1a-4b08-da6f-c141e407acc3"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/3\n",
            "300/300 [==============================] - 2s 3ms/step - loss: 0.7175 - accuracy: 0.7538 - val_loss: 0.5545 - val_accuracy: 0.8033\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4845 - accuracy: 0.8281 - val_loss: 0.5248 - val_accuracy: 0.8075\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4356 - accuracy: 0.8449 - val_loss: 0.4496 - val_accuracy: 0.8500\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.7113 - accuracy: 0.7507 - val_loss: 0.5972 - val_accuracy: 0.7883\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.5060 - accuracy: 0.8151 - val_loss: 0.4672 - val_accuracy: 0.8383\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4497 - accuracy: 0.8371 - val_loss: 0.4694 - val_accuracy: 0.8288\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.7118 - accuracy: 0.7558 - val_loss: 0.5482 - val_accuracy: 0.8200\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4837 - accuracy: 0.8322 - val_loss: 0.4801 - val_accuracy: 0.8388\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4352 - accuracy: 0.8455 - val_loss: 0.5312 - val_accuracy: 0.8142\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.7055 - accuracy: 0.7618 - val_loss: 0.5108 - val_accuracy: 0.8254\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 2ms/step - loss: 0.5069 - accuracy: 0.8250 - val_loss: 0.4788 - val_accuracy: 0.8267\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4568 - accuracy: 0.8414 - val_loss: 0.4490 - val_accuracy: 0.8375\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.7257 - accuracy: 0.7477 - val_loss: 0.5166 - val_accuracy: 0.8146\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.5062 - accuracy: 0.8249 - val_loss: 0.4724 - val_accuracy: 0.8192\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4429 - accuracy: 0.8473 - val_loss: 0.4549 - val_accuracy: 0.8358\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYgAAAEWCAYAAAB8LwAVAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nO3dd3wUdf7H8dcnhYQQUgidkFBERRApodjOiiD28vNAUVEEr+id/jx/6tm9s5x3lrMfIFaKiOednkgVLEcPvTcpoZckEGrK5/fHTMISFthAtn+ej8c+mJ2y+9lhM++d+c58R1QVY4wxprKYYBdgjDEmNFlAGGOM8coCwhhjjFcWEMYYY7yygDDGGOOVBYQxxhivLCBM1BORZiKiIhLnw7z9ROSnQNRlTLBZQJiwIiJrReSQiNStNH6uu5FvFpzKjqglWUSKROTbYNdizKmwgDDh6GegT/kTETkbSApeOUe5CTgIdBeRhoF8Y1/2gozxlQWECUefAHd4PL8T+NhzBhFJFZGPRWS7iKwTkSdEJMadFisifxORHSKyBrjKy7Lvi8hmEdkoIn8Wkdgq1Hcn8B6wAOhb6bUvEJGpIlIgIhtEpJ87vqaIvOLWWigiP7njLhaRvEqvsVZELneHnxGR0SLyqYjsBvqJSBcRmea+x2YReUtEangs30ZEJojILhHZKiJ/FJGGIrJPRDI85uvorr/4Knx2E0EsIEw4mg6kiEhrd8PdG/i00jxvAqlAC+AinEC5y502ALga6ADkADdXWvZDoAQ4zZ3nCuAeXwoTkWzgYmCY+7ij0rRv3drqAe2Bee7kvwGdgPOAOsD/AWW+vCdwHTAaSHPfsxR4EKgLnAtcBvzGraE2MBEYCzR2P+MkVd0CTAFu8Xjd24GRqlrsYx0mwlhAmHBVvhfRHVgKbCyf4BEaj6nqHlVdC7yCs8EDZyP4uqpuUNVdwIseyzYAegEPqOpeVd0GvOa+ni9uBxao6hJgJNBGRDq4024FJqrqCFUtVtWdqjrP3bO5G/i9qm5U1VJVnaqqB318z2mq+i9VLVPV/aqaq6rTVbXE/ez/wAlJcIJxi6q+oqoH3PUzw532Ee4ej7sO++CsZxOl7HilCVefAD8Azal0eAnnl3M8sM5j3DqgiTvcGNhQaVq5bHfZzSJSPi6m0vzHcwcwGEBVN4rI9ziHnOYCTYHVXpapCyQeY5ovjqhNRE4HXsXZO0rC+TvPdScfqwaAfwPviUhz4AygUFVnnmRNJgLYHoQJS6q6Dqexuhfwz0qTdwDFOBv7clkc3svYjLOh9JxWbgNOA3NdVU1zHymq2uZENYnIeUAr4DER2SIiW4CuwK1u4/EGoKWXRXcAB44xbS8eDfDuL/t6leap3CXzu8AyoJWqpgB/BMrTbgPOYbejqOoBYBTOXsTt2N5D1LOAMOGsP3Cpqu71HKmqpTgbuudFpLZ77P9/OdxOMQr4nYhkikg68KjHspuB8cArIpIiIjEi0lJELuLE7gQmAGfhtC+0B9oCNYErcdoHLheRW0QkTkQyRKS9qpYBQ4FXRaSx24h+rogkACuARBG5ym0sfgJIOEEdtYHdQJGInAn82mPaf4BGIvKAiCS466erx/SPgX7AtVhARD0LCBO2VHW1qs4+xuT7cX59rwF+AobjbITBOQQ0DpgPzOHoPZA7gBrAEiAfpwG40fFqEZFEnLaNN1V1i8fjZ5wN7Z2quh5nj+chYBdOA/U57kv8AVgIzHKn/QWIUdVCnAbmITh7QHuBI85q8uIPOO0de9zP+ln5BFXdg9Nucw2wBVgJXOIx/b84jeNz3L00E8XEbhhkjPEkIt8Bw1V1SLBrMcFlAWGMqSAinXEOkzV19zZMFLNDTMYYAETkI5xrJB6wcDBgexDGGGOOwfYgjDHGeBUxF8rVrVtXmzVrFuwyjDEmrOTm5u5Q1crX1gARFBDNmjVj9uxjnfFojDHGGxE55unMdojJGGOMVxYQxhhjvLKAMMYY41XEtEF4U1xcTF5eHgcOHAh2KX6XmJhIZmYm8fF2bxdjTPWI6IDIy8ujdu3aNGvWDI+umyOOqrJz507y8vJo3rx5sMsxxkSIiD7EdODAATIyMiI6HABEhIyMjKjYUzLGBE5EBwQQ8eFQLlo+pzEmcCI+IIwxJmKpwpKvIPcjv7y8BYSfFRQU8M4771R5uV69elFQUOCHiowxEWHzAvjoGhh1O8z91AmLamYB4WfHCoiSkpLjLjdmzBjS0tL8VZYxJlwVbYevfgf/+AVsXQxXvQJ3fQt+OMwc0WcxhYJHH32U1atX0759e+Lj40lMTCQ9PZ1ly5axYsUKrr/+ejZs2MCBAwf4/e9/z8CBA4HDXYcUFRVx5ZVXcsEFFzB16lSaNGnCv//9b2rWrBnkT2aMCaiSQzDjPfjhr1C8D7r9Bi56GGqm++0toyYgnv16MUs27a7W1zyrcQpPX3P8e9m/9NJLLFq0iHnz5jFlyhSuuuoqFi1aVHE66tChQ6lTpw779++nc+fO3HTTTWRkZBzxGitXrmTEiBEMHjyYW265hS+++IK+fftW62cxxoQoVVg+BsY/AbvWQKse0ON5qNvK728dNQERKrp06XLEtQpvvPEGX375JQAbNmxg5cqVRwVE8+bNad++PQCdOnVi7dq1AavXGBNEWxfD2Mfg5++h7hnQ9ws47fKAvX3UBMSJfukHSq1atSqGp0yZwsSJE5k2bRpJSUlcfPHFXq9lSEhIqBiOjY1l//79AanVGBMke3fC5Och9wNISIErX4acuyE2sD0lRE1ABEvt2rXZs8f73RsLCwtJT08nKSmJZcuWMX369ABXZ4wJKSWHYNYQ+P4lOFgEnQfAxY9CUp2glGMB4WcZGRmcf/75tG3blpo1a9KgQYOKaT179uS9996jdevWnHHGGXTr1i2IlRpjgkYVVo6HcX+Enaug5WXQ4wWof2ZQy4qYe1Ln5ORo5RsGLV26lNatWweposCLts9rTETYtswJhtWTIOM0JxhaXeGX01a9EZFcVc3xNs32IIwxJhj27YIpLzmHlGokQ48XofM9EFejSi+jquzeX0JqUvW3T1hAGGNMIJUWw+yhMPkFOLgbOt0FlzwOtTJOvCyw/1Ap8/MKyF2Xz5x1+cxZn8/pDWrz2b3nVnupFhDGGBMoqybC2D/CjuXQ/CLo+SI0OP4ZlpsK9pO7Lt8JhPX5LNm0m5Iyp2mgZb1adD+rAee29C1cqsoCwhhj/G3HShj3OKwcB+nNofdwOKPXUe0Mh0rKWLJ5d8XeQe66fLbsdk59rxkfyzlNU7n3ohZ0yk6nQ9N00mtV7XBUVVlAGGOMv+zPh+9fhpmDID4Juv8Jut4Lcc61TTuLDjJn/eHDRfPzCjhYUgZAk7SadG5eh05ZaXTKrsOZjWoTHxvY7vMsIIwxprqVlsCcD+G7552Q6HgHZRc/zsp9SeTmbq04XPTzjr0AxMcKbRqn0rdbNp2y0+mYlU7D1MTgfgYsIPyuoKCA4cOH85vf/KbKy77++usMHDiQpKQkP1RmjPGLNVOc7jG2LaGwflf+c8bvGLejPnNfnceeA04vzhm1atAxO51fdm5Kp+x0zm6SSmJ8bHDr9sICws/Ku/s+2YDo27evBYQxIU5V2bRmMTLhCRpvmcyWmPo8V/wAY9Z3RjYIZzQ4wDXnNKZTVjqdstPJzkgKi7tAWkD4mWd33927d6d+/fqMGjWKgwcPcsMNN/Dss8+yd+9ebrnlFvLy8igtLeXJJ59k69atbNq0iUsuuYS6desyefLkYH8UY4zrQHEpizYWkrsunyU/b6DTuvfpXfYNh4jndfqwoPFtnJ3dgI+z02mflUZKYmD7UKoufg0IEekJ/B2IBYao6kuVpmcBHwFp7jyPquqYStOXAM+o6t9OqZhvH4UtC0/pJY7S8Gy48qXjzuLZ3ff48eMZPXo0M2fORFW59tpr+eGHH9i+fTuNGzfmm2++AZw+mlJTU3n11VeZPHkydevWrd66jTFVsnX3gYqzinLX57NoYyGlpaXcEjuFp+M/J43d/Jx5HWWXPsH9zU8jNib09w584beAEJFY4G2gO5AHzBKRr1R1icdsTwCjVPVdETkLGAM085j+KvCtv2oMtPHjxzN+/Hg6dOgAQFFREStXruTCCy/koYce4pFHHuHqq6/mwgsvDHKlxkSvktIylm3Zc8S1B3n5Tg/KNeJiOCczlWfa7eKaTW+SUrgMmnaDK1+iZeMOQa68+vlzD6ILsEpV1wCIyEjgOpw9gnIKpLjDqcCm8gkicj3wM7C3Wqo5wS/9QFBVHnvsMe69996jps2ZM4cxY8bwxBNPcNlll/HUU08FoUJjok/BvkPMdU81zXVPNd13qBSABikJdMpOp995zeiUnU6bmvnU+O4pWPo1pDaFm4dCmxsD1m9SoPkzIJoAGzye5wFdK83zDDBeRO4HagGXA4hIMvAIzt7HH471BiIyEBgIkJWVVV11VyvP7r579OjBk08+yW233UZycjIbN24kPj6ekpIS6tSpQ9++fUlLS2PIkCFHLGuHmIypHmVlypode484XLRqWxEAsTHCWY1SuCWnKR2z0+mYlUaTtJpOY/LBPfDjKzDtbYiJg0uegPPug/jIvvVvsBup+wAfquorInIu8ImItMUJjtdUteh4Lf2qOggYBE5vrgGot8o8u/u+8sorufXWWzn3XKfPlOTkZD799FNWrVrFww8/TExMDPHx8bz77rsADBw4kJ49e9K4cWNrpDbmJOw7VML8DYXMWX/4cFHBvmIAUmvG0yk7nRs6NKFjVjrnNE0lqUalTWJZGcwbBpOeg6Kt0K43XP40pDQOwqcJPL919+1u8J9R1R7u88cAVPVFj3kWAz1VdYP7fA3QDfgCaOrOlgaUAU+p6lvHej/r7jv6Pq8xnlSVjW6/RU4ndgUs2bybUrffotPqJ1ecZtoxO50WdWsRc7zG5HXTYOwjsHk+ZHaGni9BptdescNasLr7ngW0EpHmwEagN3BrpXnWA5cBH4pIayAR2K6qFa20IvIMUHS8cDDGRJ9DJWUs3lRYsWeQuy6frbsPApBUI5ZzMtP49UUtnX6LstJIS/Kx36KC9TDhKVj8JaQ0gRuHwNk3R2w7w/H4LSBUtURE7gPG4ZzCOlRVF4vIc8BsVf0KeAgYLCIP4jRY99NIuYORMaZa7Sg66LQdrHf2EBbkFVb0W5SZXpNuLTIquqk4s2Ft4qrab9HBIvjv6zD1TUDgokfh/N9BjVonXDRS+bUNwr2mYUylcU95DC8Bzj/BazxzijWExRWLp8py1USS0jJl5TaPU03X5bN25z7A6beobZNUbi/vtyg7nQYpp9BvUVkZLBwFE5+BPZuh7c3Q/VlIzayeDxPGgt1I7VeJiYns3LmTjIyMiA4JVWXnzp0kJga/cy9jTsbuA8XMK+/VdH0+89YXsOeg029R3eQadMxKp0+XLDplp9O2Ovst2jATxj4KG3OhcUf4n48gq/LJltErogMiMzOTvLw8tm/fHuxS/C4xMZHMTPvFY0KfqrJu576K00znrMtn+dY9qDqH+c9smMK17RvTKdtpUM6q44d+iwrznD2GhZ9DckO4/j1o90uICWx32qEuogMiPj6e5s2bB7sMY6LageJSFrr9FpUfLtq59xAAtRPi6JCdzpVtG9Ep2znVtLY/+y06tA+mvgE/vQ5aBhf+AS54EBKS/feeYSyiA8IYE3hbCg8ccWbR4k2FFJc6bWTN69bi4jPqV+wdtKqffPxTTauLKiwcDROfht0boc0NcPmzkJ7t//cOYxYQxpiTVlxaxrLNe8hdt4vc9QXMWZfPxgKn36KEuBjOyUyj/wUt3LOL0shITgh8kRtznc4682ZCo3PgpiGQfV7g6whDFhDGGJ/l7z3E3A35h/st2lDI/mKn36KGKYl0apZO/wua0yk7ndaNUqgRF8Rj+rs3w6RnYf4IqFUfrn0L2t8KMaF3Y55QZQFhjPHK6beoqCIMctfls3q703dmbIzQpnFKxR3ROmWn0zgtRPolKt4P096CH1+DsmI4/wG48CFITDnxsuYIFhDGGAD2Hixhfl5BRUd2c9YXULjf6bcoLSmeTlnp3Ngxk07Z6bTL9NJvUbCpOlc/T3gaCtdD62ug+5+gjp2ocrJC7H/YGBMIqkpe/v6KhuTcdfks3bwbt9siTm+QTK+zG9LB7buoRd1aoX0t0aZ5zn2g10+FBm3h+q+h+S+CXVXYs4AwJgocLCll8abdh7u5XpfPtj2H+y3qkJXGfZecRsfsdDo0TSc1KUxukblnK3z3HMwdBkkZcPXr0PEOa2eoJhYQxkSg7XsOMse9CC13XT4LNhZyyO23qGmdmpzXMqOim4ozGpxEv0XBVnwApr/j3KOh5KBzb4ZfPAyJqcGuLKJYQBgT5krLlBVb91RchJa7Pp91br9FNWJjaNskhTvPza7oyK7+qfRbFGyqzt3cxj8BBevgjF5wxZ8ho2WwK4tIFhDGhJndB4orbpE5Z10+8zYUUFTRb1ECOdnp9O2aTcfsdNo2SSEhLkIOt2xZ6LQzrP0R6rWG27+ElpcGu6qIZgFhTAhTVdaW91vkBsKKbU6/RTFuv0U3dGhScappZnrN0G5MPhlF2+G7P8Gcj6FmOvT6G3S6C2Jt8+VvtoaNCSEHiktZkOfRb9H6fHaV91uUGEfHrHSualfeb1EayQkR/CdccghmvAc//BWK90G3X8NF/+eEhAmICP52GRP6NheW3yKzgNz1+SzeWEiJe65pi3q1uOzM+hWNyafVC1C/RcGmCsu/hfGPw6410OoKuOJ5qHd6sCuLOhYQxgRIcWkZSzfvPuJw0abCAwAkxjv9Fg38RQv3Fpnp1Knl4y0yI8nWJTDuMVgzBeqeDrd9Aa0uD3ZVUcsCwhg/UlU+nraOMQs3Mz+vgAPFzqmmjVMT6ZidzgC37aB1oxTiw+1U0+q0dydMfh5yP4CEFOj5F+jcH2LD5HqMCGUBYYyfqCovfbuMf/ywhrMapVTcEa1jVgj1WxRspcUwczB8/5JzT+jO98DFj0FSnWBXZrCAMMYvVJWXxjrhcMe52Tx7bZvIO7voVK0YD+P+CDtXOqer9ngB6rcOdlXGgwWEMdVMVfnL2OX84/s13N7NwuEo25c7wbBqItRpCX0+g9N7OPcbNSHFAsKYaqSqvDxuOe99v5q+3bJ47joLhwr7dsGUl2DWEKiR7OwxdB4AcVHYGB8mLCCMqSaqyl/HLefdKW44XNvWwgGgtARmD4UpL8CBQujUDy55HGrVDXZl5gQsIIypBqrK38Yv550pq7mtqxMOUXHNwomsmuQcTtq+zOl+u8eL0LBtsKsyPrKAMOYUqSqvjF/B25NXc2vXLP50nYUDO1Y6HeqtGAvpzaH3cKdjPdujCisWEMacgvJweGvyKvp0yeLP0R4O+wvg+5dh5j8griZ0fw66/griEoJdmTkJFhDGnCRV5dUJ5eHQlOevj+JwKC2BOR85F7vt2wUdb4dLn4Tk+sGuzJwCCwhjToKq8tqEFbz53Sp6d27K89efHb3hsGYKjP0jbFsM2edDzxeh0TnBrspUAwsIY07CaxNX8oYbDi/cEKXhsHM1jH8Sln8DaVlwy8fQ+lprZ4ggFhDGVNFrE1bwxqSV/DInSsPhwG6nC+7p70JsDbjsKej2W4gP4zvVGa8sIIypgtcnruDvk1ZyS04mL94YZeFQVgpzP3Vu3rN3B7S/DS57Emo3DHZlxk8sIIzx0d8nruT1iSv5n06ZvHRju+gKh7U/wdhHndt+Nu0Gt30OjTsEuyrjZ37tX1hEeorIchFZJSKPepmeJSKTRWSuiCwQkV7u+O4ikisiC91/7cazJqjemLSS1yau4OZOmfzlpigKh/y18Nnt8OFVzimsNw+Fu8daOEQJv+1BiEgs8DbQHcgDZonIV6q6xGO2J4BRqvquiJwFjAGaATuAa1R1k4i0BcYBTfxVqzHH8+aklbw6YQU3dYyicDi4B358Baa9DTFxTtcY590P8dZNeTTx5yGmLsAqVV0DICIjgesAz4BQIMUdTgU2AajqXI95FgM1RSRBVQ/6sV5jjvLWdyt5ZcIKbuzYhJdvbkdspIdDWRnMHw6TnoOirdCuN1z+NKQ0DnZlJgj8GRBNgA0ez/OArpXmeQYYLyL3A7UAb/cWvAmY4y0cRGQgMBAgKyurGko25rC3J6/ib+NXcGOHJvz15nMiPxzWTXPaGTbPg8zOTvcYmTnBrsoEUbDvcdgH+FBVM4FewCciUlGTiLQB/gLc621hVR2kqjmqmlOvXr2AFGyiw9uTV/HXccudcPifCA+HgvXweT/4oCcUbYMbB8Pd4y0cjF/3IDYCTT2eZ7rjPPUHegKo6jQRSQTqAttEJBP4ErhDVVf7sU5jjvDOFCccboj0cDi0F356Daa+6Ty/6BE4//dQo1Zw6zIhw58BMQtoJSLNcYKhN3BrpXnWA5cBH4pIayAR2C4iacA3wKOq+l8/1mjMEd6dspqXxy7n+vaN+VukhkNZGSwcBROfgT2boe3NcPkzkNb0BAuaaOO3gFDVEhG5D+cMpFhgqKouFpHngNmq+hXwEDBYRB7EabDup6rqLnca8JSIPOW+5BWqus1f9Rrz3ver+cvYZVzXvjGv3NI+MsNhwywY+whszHVOVf2fjyCrctOgMQ5R1WDXUC1ycnJ09uzZwS7DhKl/fL+aF79dxrXnNObVW84hLjbYzXPVrHAjTHwaFn4OyQ2dM5Pa9YaYCPucpspEJFdVvTY42ZXUJuoN+sEJh2siMRwO7YOpb8BPr4OWwYUPwQX/CwnJwa7MhAELCBPVBv2wmhfGOOHwWiSFgyos+gImPA278+Cs66H7s5DeLNiVmTBiAWGi1uAf1vDCmGVc3a5RZIXDxlwY+xhsmAEN28GNg6DZ+cGuyoQhCwgTlYb8uIbnxyzl6naNeP2X7SMjHHZvhknPwvwRUKseXPum0+NqTGywKzNhygLCRJ0hP67hz98s5apICYfi/TDtLfjxNSgrdq5luPAPkJhy4mWNOQ4LCBNVKsLh7Eb8PdzDQRWW/AvGPwWF6+HMq+GKP0GdFsGuzEQICwgTNd7/6Wf+/M1Sep3dkNd7h3k4bJrntDOsnwoN2sL1X0PzXwS7KhNhLCBMVBj608/86T9LuLJtQ/7euwPx4RoOe7bCd8/B3GGQVAeufg063mntDMYvLCBMxPvgvz/znBsOb/QJ03AoOQjT34EfXoGSA3Dub+EXD0PNtGBXZiKYBYSJaB/+92ee/XoJPduEaTiowtKvYcKTzt3dTr8SejwPGS2DXZmJAhYQJmJ9NHUtz3y9hB5tGvDmrWEYDlsWOu0Ma3+Eeq3h9i+hpd191wTOCQNCRK4BvlHVsgDUY0y1+HjaWp7+ajFXnNWAN/t0DK9wKNoOk/8Mcz6GxDTo9TfodBfE2u85E1i+fON+CbwuIl/g9Mi6zM81GXNKPpm2lqf+vZjuZzXgrVs7UiMuTMKh5BDM/Ad8/zIU74Mu98LFj0DN9GBXZqLUCQNCVfuKSAru3d9ERIEPgBGqusffBRpTFZ9MX8eTbji8HS7hoArLv4Xxj8OuNXBad+jxAtQ7PdiVmSjn01+Pqu4GRgMjgUbADcAc917SxoSET6ev48l/LeLy1mEUDluXwCfXw8g+EBMHt42GvqMtHExI8KUN4lrgLpwb+HwMdFHVbSKSBCwB3vRvicac2LAZ63jiX4u4vHV93rktDMJh706Y8gLMHgoJtaHnX6Bzf4iND3ZlxlTwpQ3iJuA1Vf3Bc6Sq7hOR/v4pyxjfDZ+xnse/XMRlZ9bn7VAPh9JimDkYvn8JDhZBTn+45I/ORW/GhBhfAuIZYHP5ExGpCTRQ1bWqOslfhRnji+Ez1vPHLxdy6Zn1eadvRxLiQviK4hXjYdwfYedKaHEJ9HwR6rcOdlXGHJMvAfE5cJ7H81J3XGe/VGSMj0bMPBwO74ZSOKg6Pawe3OM8irbCT6/CqolQpyX0+QxO7wESgfe8NhHFl4CIU9VD5U9U9ZCI1PBjTcac0MiZ63nsnwu55Ix61RsOJQfdDftuOLD78HD5xv5AoZdx5cOFh8eVlRz5ugmpcMXz0GUgxNmfjwkPvgTEdhG5VlW/AhCR64Ad/i3LmGP7bNZ6Hv3nQi4+ox7v9u3khENpicdGu/LGe/cxNuge48vHlR48cQEx8c69FhJSnAbmxFRIawoJZ3mMc/9NcOfL7Ay1Mvy/coypRr4ExK+AYSLyFiDABuAOv1ZlokdZGRzac/xf4x4b9A1bttJ44xa+SymmWVEZMX93pxXvO/F7SazHxtt9JDeEjFYeG/Tazq/9IzbyHhv6xBSIS/D/ejEmBPhyodxqoJuIJLvPi/xelQl9qnBo7+GNePmv8QO7K43zPCyz5+hf7Id8udZSIKE2eyWJffviaFgzhezMTGJqevyKL994V2zMvYyLr2nH/Y2pAp86dxGRq4A2QKK4f2Cq+pwf6zL+ouoeZz/Rxnu39w265697X7rniq919C/x2o2OPERzrMMy5cvUSGbUnI088sUCLmxVj0G3dyI2PkQapI2JYL5cKPcekARcAgwBbgZm+rku401p8XGOqfuwQS8fV1Z84veKSzxyI52YArWan3iD7hkGNWpXSwdzn8/ecEQ4JFo4GBMQvvz1nqeq7URkgao+KyKvAN/6u7CIUlbqeyOp54a+8riSAyd+r5i4SodWUiEl08sG/TiHZRJqh8yZNqNz8/i/LxZwwWl1LRyMCTBfAqJ8q7RPRBoDO3H6Y4p8ZWVQvPfkN+jl8xXvPfF7SczRDaTJ9Z0bwxzx69zbYRmPcXEJEXOcfXRuHg+Pns8Fp9Vl8B05Fg7GBJgvAfG1iKQBfwXmAAoM9mtVgbQ/H/7z4DF+3e/B+bgnUKPSr/PENEhteuTZMp6HarwdlolPipgNe3X4wsLBmKA7bkCISAwwSVULgC9E5D9AoqoWBqS6QJAY2LLoyF/t5b/iT3icPQVqJENMCPf9E4b+OSePP4yez/ktLRyMCabjBoSqlonI20AH9/lBwIcricJIYircPzvYVRjXl3PzeOjz+ZzXMidv+AkAABR6SURBVMPCwZgg8+Wn7yQRuUnEjn8Y//rX3I08NGo+57bIYMgdnalZw8LBmGDyJSDuxemc76CI7BaRPSKy2891mSjz73kb+d9R8+jWIoP377RwMCYUnDAgVLW2qsaoag1VTXGfp/jy4iLSU0SWi8gqEXnUy/QsEZksInNFZIGI9PKY9pi73HIR6VG1j2XCyb/nbeTBz+bRtbmFgzGhxJcL5X7hbXzlGwh5WS4WeBvoDuQBs0TkK1Vd4jHbE8AoVX1XRM4CxgDN3OHeOFdvNwYmisjpqlrqy4cy4aM8HLo0r8P7/XIsHIwJIb6c5vqwx3Ai0AXIBS49wXJdgFWqugZAREYC1+HcprScAuV7I6nAJnf4OmCk2yj+s4iscl9vmg/1mjDx1fxNFeEwtF9nkmqc+lXXxpjq40tnfdd4PheRpsDrPrx2E5yeX8vlAV0rzfMMMF5E7gdqAZd7LDu90rJNKr+BiAwEBgJkZWX5UJIJFV/P38QDI+fSuZmFgzGh6mRO4M8Dqus+iX2AD1U1E+gFfOJee+ETVR2kqjmqmlOvXr1qKsn4238WbOKBz+aR06wOH9xl4WBMqPKlDeJNDl9OHAO0x7mi+kQ2Ak09nme64zz1B3oCqOo0EUkE6vq4rAlD3yzYzO9HzqNTVjof2J6DMSHNl1/rs3HaHHJx2gAeUdW+Piw3C2glIs3dW5T2Br6qNM964DIAEWmN08ax3Z2vt4gkiEhzoBXWg2zY+2bBZn43cq4TDnd1plaChYMxocyXv9DRwIHyM4hEJFZEklT1uLfwUtUSEbkPGAfEAkNVdbGIPAfMdm9h+hAwWEQexNlL6aeqCiwWkVE4DdolwG/tDKbwVh4OHbPSLByMCRPibI+PM4PIdODy8jvJuXeWG6+q5wWgPp/l5OTo7NnWZUYoGrNwM/ePmEuHpml8eHcXki0cjAkZIpKrqjnepvlyiCnR8zaj7nBSdRVnItu3Fg7GhC1fAmKviHQsfyIinYD9/ivJRIqxi5xwaG/hYExY8uUv9gHgcxHZBAjQEPilX6syYW/soi3cN3wu7TJT+fCuzhYOxoQhXy6UmyUiZwJnuKOWq6oPNzU20coJhzm0y0zlo7u7UDsxPtglGWNOwgkPMYnIb4FaqrpIVRcBySLyG/+XZsLRuMVOOJxt4WBM2POlDWKAe0c5AFQ1Hxjgv5JMuBq/eAu/HeaEw8cWDsaEPV8CItbzZkFuL601/FeSCUcTlmzlt8Pn0LaJ7TkYEyl8aTkcC3wmIv9wn98LfOu/kky4mbhkK78Zlkubxql83L8LKRYOxkQEXwLiEZweU3/lPl+AcyaTMUxcspVfD8vlLAsHYyKOL3eUKwNmAGtx7slwKbDUv2WZcDBpqRsOjVL4+G4LB2MizTH3IETkdJzuuPsAO4DPAFT1ksCUZkLZd8u28utP5zjh0L8rqTUtHIyJNMc7xLQM+BG4WlVXAbid6pkoN3nZNn71yRzObFTbwsGYCHa8Q0w3ApuBySIyWEQuw7mS2kSxycu2ce8nuZzRsDaf3G3hYEwkO2ZAqOq/VLU3cCYwGafLjfoi8q6IXBGoAk3omLz8cDh82r8rqUkWDsZEMl8aqfeq6nD33tSZwFycM5tMFJnihsPpDZMtHIyJElW6J7Wq5rv3gb7MXwWZ0PP9iu0M/CSXVvUtHIyJJlUKCBN9vl+xnQEfz6ZV/WSG3dOVtCS7iN6YaGEBYY6pPBxOq2fhYEw0soAwXv1g4WBM1LOAMEf5caUTDi3dcEivZeFgTDSygDBH+GnlDu75aDbN69aycDAmyllAmAo/rdxB/49m0bxuLYYP6EYdCwdjopoFhAHgv6ssHIwxR7KAMEz1CIdh93S1cDDGABYQUW/qqh3c/dEssus44ZCRnBDskowxIcICIopNXe2EQ1adJIYNsHAwxhzJAiJKTVu9k7s/dMJh+IBu1LVwMMZUYgERhaavsXAwxpyYBUSUmb5mJ3d9MIvM9JoWDsaY47KAiCIzLByMMVVgARElZv68i7s+nEUTNxzq1bZwMMYcnwVEFJj58y76fTCTRqmJDB/Q1cLBGOMTvwaEiPQUkeUiskpEHvUy/TURmec+VohIgce0l0VksYgsFZE3RMTuh30SZq09HA4jBnajfu3EYJdkjAkTcf56YRGJBd4GugN5wCwR+UpVl5TPo6oPesx/P9DBHT4POB9o507+CbgImOKveiPR7LW76Dd0Jg1TExkxwMLBGFM1/tyD6AKsUtU1qnoIGAlcd5z5+wAj3GEFEoEaQAIQD2z1Y60RZ/baXdw5dCYNUhMZOaAb9VMsHIwxVePPgGgCbPB4nueOO4qIZAPNge8AVHUaMBnY7D7GqepSL8sNFJHZIjJ7+/bt1Vx++KoIhxQLB2PMyQuVRurewGhVLQUQkdOA1kAmTqhcKiIXVl5IVQepao6q5tSrVy+gBYeq3HWHw2HEQAsHY8zJ82dAbASaejzPdMd505vDh5cAbgCmq2qRqhYB3wLn+qXKCJK7Lp87h86ivhsODSwcjDGnwJ8BMQtoJSLNRaQGTgh8VXkmETkTSAemeYxeD1wkInEiEo/TQH3UISZzmBMOM6lXO4ERAywcjDGnzm8BoaolwH3AOJyN+yhVXSwiz4nItR6z9gZGqqp6jBsNrAYWAvOB+ar6tb9qDXdz1jvhUDe5BiMGdKNhqoWDMebUyZHb5fCVk5Ojs2fPDnYZATd3fT53vD+TOsk1GDmwG41Sawa7JGNMGBGRXFXN8TYtVBqpzUmwcDDG+JMFRJiat6GAO96fSXot57CShYMxprpZQISh+RsKuP39GaTXcvYcGqdZOBhjqp8FRJiZv6GAvu/PIC0pnhEWDsYYP7KACCML8g6Hw8iB59LEwsEY40cWEGFiYV4hfYfMILVmPCMGdLNwMMb4nQVEGFiYV8htQ6aTUjOekQO7kZmeFOySjDFRwAIixC3aWEjf92dYOBhjAs4CIoQt2ljIbUNmkJwQx4gBFg7GmMCygAhRnuEwcmA3mtaxcDDGBJYFRAhavMk5rGThYIwJJguIELN4k7PnUKuGhYMxJrgsIELIkk27uW3IDJLiYxkxwMLBGBNcFhAhYsmm3dw6ZDpJ8bGMHHguWRkWDsaY4LKACAHOnsN0asbHMmJgNwsHY0xIsIAIsqWbnXBIjI9l5MBuZGfUCnZJxhgDWEAE1bItTptDQpzT5mDhYIwJJRYQQbJsy25uHTyDGrExjBzYjWZ1LRyMMaHFAiIIlm/Zw62DZxAfK4ywcDDGhCgLiABzwmE68bHCyIHn0tzCwRgToiwgAmjFViccYmOEEQO6WTgYY0KaBUSArPQIh5EDu9GiXnKwSzLGmOOygAiAlVv30GfwdGLEaXOwcDDGhAMLCD9btW0PfQbPQNxwaGnhYIwJExYQfrRq2x56D5qBCIwYYOFgjAkvFhB+smpbEb0HzQCccDitvoWDMSa8WED4waptRfQZPB2AkQO7WjgYY8KSBUQ1W73dCQdVGDGgK6fVrx3skowx5qRYQFSj1duL6DNoOqrKiAFdadXAwsEYE74sIKrJGjccylQZMaCbhYMxJuxZQFSDNe5hpdIyZbiFgzEmQlhAnKKfd+ylz+DplJQqIwZ243QLB2NMhPBrQIhITxFZLiKrRORRL9NfE5F57mOFiBR4TMsSkfEislRElohIM3/WejJ+3rGX3oOmUVLq7DlYOBhjIkmcv15YRGKBt4HuQB4wS0S+UtUl5fOo6oMe898PdPB4iY+B51V1gogkA2X+qvVkrN2xlz6DplNc6rQ5nNHQwsEYE1n8uQfRBVilqmtU9RAwErjuOPP3AUYAiMhZQJyqTgBQ1SJV3efHWqtk7Y699B40nUOlZQwf0NXCwRgTkfwZEE2ADR7P89xxRxGRbKA58J076nSgQET+KSJzReSv7h5J5eUGishsEZm9ffv2ai7fu3U7nTaHgyWlDLunK2c2TAnI+xpjTKCFSiN1b2C0qpa6z+OAC4E/AJ2BFkC/ygup6iBVzVHVnHr16vm9yHU7nT2HA8WlDB/QjdaNLByMMZHLnwGxEWjq8TzTHedNb9zDS648YJ57eKoE+BfQ0S9V+mj9zn30ccNh2D0WDsaYyOfPgJgFtBKR5iJSAycEvqo8k4icCaQD0yotmyYi5bsFlwJLKi8bKOt37qP3oGnsc8PhrMYWDsaYyOe3gHB/+d8HjAOWAqNUdbGIPCci13rM2hsYqarqsWwpzuGlSSKyEBBgsL9qPZ4Nu/bRZ/B0Nxy6WjgYY6KGeGyXw1pOTo7Onj27Wl9zw6599B40naKDJQy7pyttm6RW6+sbY0ywiUiuquZ4mxYqjdQhx8LBGBPtLCC8sHAwxhgLiKPk5TttDnsOFFs4GGOimgWEh7x8Z89h9/5iht3TzcLBGBPVLCBcGwv202ewEw6f3tOVszMtHIwx0c1vnfWFk40F++k9aBoF+5zDSu0y04JdkjHGBF3U70FsLtxPn0HTKdhXzKf9LRyMMaZc1O9B1E6Mp1X9ZO6/rBXnNLVwMMaYclEfEMkJcbzfr3OwyzDGmJAT9YeYjDHGeGcBYYwxxisLCGOMMV5ZQBhjjPHKAsIYY4xXFhDGGGO8soAwxhjjlQWEMcYYryLmjnIish1YdwovURfYUU3lVCerq2qsrqqxuqomEuvKVtV63iZETECcKhGZfazb7gWT1VU1VlfVWF1VE2112SEmY4wxXllAGGOM8coC4rBBwS7gGKyuqrG6qsbqqpqoqsvaIIwxxnhlexDGGGO8soAwxhjjVcQHhIj0FJHlIrJKRB71Mj1BRD5zp88QkWYe0x5zxy8XkR4Brut/RWSJiCwQkUkiku0xrVRE5rmPrwJcVz8R2e7x/vd4TLtTRFa6jzsDXNdrHjWtEJECj2n+XF9DRWSbiCw6xnQRkTfcuheISEePaf5cXyeq6za3noUiMlVEzvGYttYdP09EZge4rotFpNDj/+spj2nH/Q74ua6HPWpa5H6n6rjT/Lm+morIZHdbsFhEfu9lHv99x1Q1Yh9ALLAaaAHUAOYDZ1Wa5zfAe+5wb+Azd/gsd/4EoLn7OrEBrOsSIMkd/nV5Xe7zoiCur37AW16WrQOscf9Nd4fTA1VXpfnvB4b6e325r/0LoCOw6BjTewHfAgJ0A2b4e335WNd55e8HXFlel/t8LVA3SOvrYuA/p/odqO66Ks17DfBdgNZXI6CjO1wbWOHlb9Jv37FI34PoAqxS1TWqeggYCVxXaZ7rgI/c4dHAZSIi7viRqnpQVX8GVrmvF5C6VHWyqu5zn04HMqvpvU+pruPoAUxQ1V2qmg9MAHoGqa4+wIhqeu/jUtUfgF3HmeU64GN1TAfSRKQR/l1fJ6xLVae67wuB+375sr6O5VS+m9VdVyC/X5tVdY47vAdYCjSpNJvfvmORHhBNgA0ez/M4euVWzKOqJUAhkOHjsv6sy1N/nF8I5RJFZLaITBeR66uppqrUdZO7KztaRJpWcVl/1oV7KK458J3HaH+tL18cq3Z/rq+qqvz9UmC8iOSKyMAg1HOuiMwXkW9FpI07LiTWl4gk4Wxkv/AYHZD1Jc7h7w7AjEqT/PYdi6tqkSawRKQvkANc5DE6W1U3ikgL4DsRWaiqqwNU0tfACFU9KCL34ux9XRqg9/ZFb2C0qpZ6jAvm+gppInIJTkBc4DH6And91QcmiMgy9xd2IMzB+f8qEpFewL+AVgF6b19cA/xXVT33Nvy+vkQkGSeUHlDV3dX52scT6XsQG4GmHs8z3XFe5xGROCAV2Onjsv6sCxG5HHgcuFZVD5aPV9WN7r9rgCk4vyoCUpeq7vSoZQjQyddl/VmXh95U2v334/ryxbFq9+f68omItMP5P7xOVXeWj/dYX9uAL6m+Q6snpKq7VbXIHR4DxItIXUJgfbmO9/3yy/oSkXiccBimqv/0Mov/vmP+aFgJlQfOHtIanEMO5Q1bbSrN81uObKQe5Q634chG6jVUXyO1L3V1wGmUa1VpfDqQ4A7XBVZSTY11PtbVyGP4BmC6Hm4Q+9mtL90drhOoutz5zsRpMJRArC+P92jGsRtdr+LIBsSZ/l5fPtaVhdOudl6l8bWA2h7DU4GeAayrYfn/H86Gdr277nz6DvirLnd6Kk47Ra1ArS/3s38MvH6cefz2Hau2lRuqD5wW/hU4G9vH3XHP4fwqB0gEPnf/WGYCLTyWfdxdbjlwZYDrmghsBea5j6/c8ecBC90/kIVA/wDX9SKw2H3/ycCZHsve7a7HVcBdgazLff4M8FKl5fy9vkYAm4FinGO8/YFfAb9ypwvwtlv3QiAnQOvrRHUNAfI9vl+z3fEt3HU13/1/fjzAdd3n8f2ajkeAefsOBKoud55+OCeueC7n7/V1AU4bxwKP/6tegfqOWVcbxhhjvIr0NghjjDEnyQLCGGOMVxYQxhhjvLKAMMYY45UFhDHGGK8sIIypgko9w86rzl5FRaTZsXoTNSYYrKsNY6pmv6q2D3YRxgSC7UEYUw3cewK87N4XYKaInOaObyYi38nh+3pkueMbiMiXbqd080XkPPelYkVksNv3/3gRqRm0D2WingWEMVVTs9Ihpl96TCtU1bOBt4DX3XFvAh+pajtgGPCGO/4N4HtVPQfnPgSL3fGtgLdVtQ1QANzk589jzDHZldTGVIGIFKlqspfxa4FLVXWN27naFlXNEJEdOP1XFbvjN6tqXRHZDmSqRyeMbnfOE1S1lfv8ESBeVf/s/09mzNFsD8KY6qPHGK6Kgx7DpVg7oQkiCwhjqs8vPf6d5g5PxeklGOA24Ed3eBLOrWQRkVgRSQ1Ukcb4yn6dGFM1NUVknsfzsapafqpruogswNkL6OOOux/4QEQeBrYDd7njfw8MEpH+OHsKv8bpTdSYkGFtEMZUA7cNIkdVdwS7FmOqix1iMsYY45XtQRhjjPHK9iCMMcZ4ZQFhjDHGKwsIY4wxXllAGGOM8coCwhhjjFf/D5C2QbHsCMs+AAAAAElFTkSuQmCC\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "313/313 - 1s - loss: 75.5845 - accuracy: 0.8175 - 1s/epoch - 3ms/step\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "313/313 - 1s - loss: 69.8951 - accuracy: 0.8201 - 675ms/epoch - 2ms/step\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "313/313 - 1s - loss: 74.2506 - accuracy: 0.8106 - 628ms/epoch - 2ms/step\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "313/313 - 1s - loss: 63.8994 - accuracy: 0.8245 - 691ms/epoch - 2ms/step\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "313/313 - 1s - loss: 76.0185 - accuracy: 0.8139 - 809ms/epoch - 3ms/step\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model1 = MODEL1() \n",
        "model2 = MODEL1() \n",
        "model3 = MODEL1() \n",
        "model4 = MODEL1() \n",
        "model5 = MODEL1()\n",
        "\n",
        "for i in range(50):\n",
        "  h1 = model1.fit(train1, y1,validation_split = 0.2, epochs=3, verbose=1) \n",
        "  h2 = model2.fit(train2, y2,validation_split = 0.2, epochs=3, verbose=1) \n",
        "  h3 = model3.fit(train3, y3,validation_split = 0.2, epochs=3, verbose=1) \n",
        "  h4 = model4.fit(train4, y4,validation_split = 0.2, epochs=3, verbose=1) \n",
        "  h5 = model5.fit(train5, y5,validation_split = 0.2, epochs=3, verbose=1)\n",
        "\n",
        "  w1 = model1.get_weights() \n",
        "  w2 = model2.get_weights() \n",
        "  w3 = model3.get_weights() \n",
        "  w4 = model4.get_weights() \n",
        "  w5 = model5.get_weights()\n",
        "\n",
        "  a = np.array(w1) \n",
        "  b = np.array(w2)\n",
        "  c = np.array(w3) \n",
        "  d = np.array(w4) \n",
        "  e = np.array(w5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "184GYAvH0Dzd",
        "outputId": "4ef74a45-b1ae-4a65-a892-4a6ee1c28176"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.7234 - accuracy: 0.7490 - val_loss: 0.5729 - val_accuracy: 0.8008\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4929 - accuracy: 0.8288 - val_loss: 0.5007 - val_accuracy: 0.8208\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4332 - accuracy: 0.8484 - val_loss: 0.4484 - val_accuracy: 0.8479\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.7058 - accuracy: 0.7525 - val_loss: 0.5577 - val_accuracy: 0.8046\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4979 - accuracy: 0.8205 - val_loss: 0.5166 - val_accuracy: 0.8188\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4469 - accuracy: 0.8371 - val_loss: 0.4564 - val_accuracy: 0.8400\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.7035 - accuracy: 0.7581 - val_loss: 0.5497 - val_accuracy: 0.8213\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4831 - accuracy: 0.8283 - val_loss: 0.5283 - val_accuracy: 0.8304\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 2ms/step - loss: 0.4297 - accuracy: 0.8509 - val_loss: 0.4593 - val_accuracy: 0.8429\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 2s 3ms/step - loss: 0.6996 - accuracy: 0.7632 - val_loss: 0.5337 - val_accuracy: 0.8083\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.5039 - accuracy: 0.8277 - val_loss: 0.4766 - val_accuracy: 0.8263\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4456 - accuracy: 0.8447 - val_loss: 0.4659 - val_accuracy: 0.8304\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.7097 - accuracy: 0.7561 - val_loss: 0.5220 - val_accuracy: 0.8096\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4939 - accuracy: 0.8257 - val_loss: 0.5053 - val_accuracy: 0.8196\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4446 - accuracy: 0.8439 - val_loss: 0.4292 - val_accuracy: 0.8467\n",
            "Epoch 1/3\n",
            " 41/300 [===>..........................] - ETA: 0s - loss: 0.3560 - accuracy: 0.8796"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:20: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.\n",
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:21: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.\n",
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:22: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.\n",
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:23: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.\n",
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:24: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3953 - accuracy: 0.8609 - val_loss: 0.4203 - val_accuracy: 0.8567\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3711 - accuracy: 0.8659 - val_loss: 0.4007 - val_accuracy: 0.8604\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3442 - accuracy: 0.8750 - val_loss: 0.4182 - val_accuracy: 0.8675\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4088 - accuracy: 0.8531 - val_loss: 0.4736 - val_accuracy: 0.8421\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3854 - accuracy: 0.8573 - val_loss: 0.4064 - val_accuracy: 0.8596\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3549 - accuracy: 0.8708 - val_loss: 0.4485 - val_accuracy: 0.8446\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3919 - accuracy: 0.8589 - val_loss: 0.4590 - val_accuracy: 0.8512\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3700 - accuracy: 0.8681 - val_loss: 0.4468 - val_accuracy: 0.8458\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3480 - accuracy: 0.8753 - val_loss: 0.4398 - val_accuracy: 0.8604\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4089 - accuracy: 0.8574 - val_loss: 0.4323 - val_accuracy: 0.8417\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3785 - accuracy: 0.8653 - val_loss: 0.4304 - val_accuracy: 0.8371\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3550 - accuracy: 0.8728 - val_loss: 0.4363 - val_accuracy: 0.8438\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4146 - accuracy: 0.8518 - val_loss: 0.4256 - val_accuracy: 0.8429\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3847 - accuracy: 0.8612 - val_loss: 0.4434 - val_accuracy: 0.8338\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3587 - accuracy: 0.8694 - val_loss: 0.4242 - val_accuracy: 0.8421\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 2s 5ms/step - loss: 0.3281 - accuracy: 0.8798 - val_loss: 0.4216 - val_accuracy: 0.8496\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3136 - accuracy: 0.8894 - val_loss: 0.4140 - val_accuracy: 0.8575\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2911 - accuracy: 0.8921 - val_loss: 0.3820 - val_accuracy: 0.8646\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3423 - accuracy: 0.8726 - val_loss: 0.4122 - val_accuracy: 0.8533\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3261 - accuracy: 0.8784 - val_loss: 0.4008 - val_accuracy: 0.8600\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3116 - accuracy: 0.8863 - val_loss: 0.4054 - val_accuracy: 0.8575\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3277 - accuracy: 0.8809 - val_loss: 0.4412 - val_accuracy: 0.8496\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3116 - accuracy: 0.8893 - val_loss: 0.4319 - val_accuracy: 0.8546\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2969 - accuracy: 0.8940 - val_loss: 0.4194 - val_accuracy: 0.8600\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3318 - accuracy: 0.8816 - val_loss: 0.4259 - val_accuracy: 0.8508\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3119 - accuracy: 0.8894 - val_loss: 0.4124 - val_accuracy: 0.8533\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 2ms/step - loss: 0.3010 - accuracy: 0.8907 - val_loss: 0.4010 - val_accuracy: 0.8558\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3427 - accuracy: 0.8768 - val_loss: 0.4238 - val_accuracy: 0.8438\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3237 - accuracy: 0.8808 - val_loss: 0.3986 - val_accuracy: 0.8562\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3010 - accuracy: 0.8886 - val_loss: 0.4134 - val_accuracy: 0.8508\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2800 - accuracy: 0.8992 - val_loss: 0.3865 - val_accuracy: 0.8604\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2637 - accuracy: 0.9069 - val_loss: 0.3753 - val_accuracy: 0.8654\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2523 - accuracy: 0.9103 - val_loss: 0.4052 - val_accuracy: 0.8646\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2936 - accuracy: 0.8925 - val_loss: 0.3831 - val_accuracy: 0.8667\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2806 - accuracy: 0.9000 - val_loss: 0.4202 - val_accuracy: 0.8587\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2690 - accuracy: 0.8959 - val_loss: 0.4006 - val_accuracy: 0.8667\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2979 - accuracy: 0.8933 - val_loss: 0.4229 - val_accuracy: 0.8637\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2692 - accuracy: 0.9030 - val_loss: 0.4233 - val_accuracy: 0.8596\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2572 - accuracy: 0.9098 - val_loss: 0.4382 - val_accuracy: 0.8571\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2838 - accuracy: 0.9013 - val_loss: 0.4121 - val_accuracy: 0.8562\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2698 - accuracy: 0.9043 - val_loss: 0.4145 - val_accuracy: 0.8554\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2665 - accuracy: 0.9027 - val_loss: 0.4482 - val_accuracy: 0.8413\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2856 - accuracy: 0.8932 - val_loss: 0.3953 - val_accuracy: 0.8596\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2793 - accuracy: 0.8989 - val_loss: 0.3917 - val_accuracy: 0.8625\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2582 - accuracy: 0.9059 - val_loss: 0.3958 - val_accuracy: 0.8579\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2447 - accuracy: 0.9092 - val_loss: 0.4044 - val_accuracy: 0.8671\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2279 - accuracy: 0.9196 - val_loss: 0.3632 - val_accuracy: 0.8767\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2166 - accuracy: 0.9219 - val_loss: 0.3920 - val_accuracy: 0.8708\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2659 - accuracy: 0.9025 - val_loss: 0.3959 - val_accuracy: 0.8687\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2451 - accuracy: 0.9102 - val_loss: 0.4238 - val_accuracy: 0.8554\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2339 - accuracy: 0.9153 - val_loss: 0.4106 - val_accuracy: 0.8608\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2441 - accuracy: 0.9121 - val_loss: 0.4399 - val_accuracy: 0.8621\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2419 - accuracy: 0.9121 - val_loss: 0.5162 - val_accuracy: 0.8367\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.2374 - accuracy: 0.9152 - val_loss: 0.4919 - val_accuracy: 0.8438\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 5ms/step - loss: 0.2537 - accuracy: 0.9075 - val_loss: 0.4207 - val_accuracy: 0.8450\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2438 - accuracy: 0.9144 - val_loss: 0.4037 - val_accuracy: 0.8600\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2273 - accuracy: 0.9180 - val_loss: 0.4132 - val_accuracy: 0.8587\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2576 - accuracy: 0.9099 - val_loss: 0.3939 - val_accuracy: 0.8633\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2403 - accuracy: 0.9124 - val_loss: 0.4207 - val_accuracy: 0.8621\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2359 - accuracy: 0.9129 - val_loss: 0.3985 - val_accuracy: 0.8625\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2078 - accuracy: 0.9251 - val_loss: 0.4714 - val_accuracy: 0.8450\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2017 - accuracy: 0.9272 - val_loss: 0.3868 - val_accuracy: 0.8683\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1946 - accuracy: 0.9281 - val_loss: 0.4209 - val_accuracy: 0.8683\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2286 - accuracy: 0.9147 - val_loss: 0.3894 - val_accuracy: 0.8637\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2221 - accuracy: 0.9192 - val_loss: 0.4227 - val_accuracy: 0.8617\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2141 - accuracy: 0.9198 - val_loss: 0.3846 - val_accuracy: 0.8721\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2228 - accuracy: 0.9196 - val_loss: 0.4516 - val_accuracy: 0.8587\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2040 - accuracy: 0.9275 - val_loss: 0.4502 - val_accuracy: 0.8612\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2022 - accuracy: 0.9271 - val_loss: 0.4500 - val_accuracy: 0.8575\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2217 - accuracy: 0.9216 - val_loss: 0.4516 - val_accuracy: 0.8487\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2083 - accuracy: 0.9275 - val_loss: 0.4415 - val_accuracy: 0.8596\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2008 - accuracy: 0.9258 - val_loss: 0.4084 - val_accuracy: 0.8667\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2189 - accuracy: 0.9203 - val_loss: 0.3760 - val_accuracy: 0.8717\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2129 - accuracy: 0.9215 - val_loss: 0.3923 - val_accuracy: 0.8646\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1983 - accuracy: 0.9268 - val_loss: 0.4003 - val_accuracy: 0.8579\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1916 - accuracy: 0.9293 - val_loss: 0.4185 - val_accuracy: 0.8675\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1765 - accuracy: 0.9353 - val_loss: 0.5010 - val_accuracy: 0.8446\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1758 - accuracy: 0.9356 - val_loss: 0.3899 - val_accuracy: 0.8808\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2033 - accuracy: 0.9246 - val_loss: 0.4332 - val_accuracy: 0.8525\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1938 - accuracy: 0.9278 - val_loss: 0.3856 - val_accuracy: 0.8796\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1882 - accuracy: 0.9298 - val_loss: 0.4101 - val_accuracy: 0.8683\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1892 - accuracy: 0.9326 - val_loss: 0.4646 - val_accuracy: 0.8600\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1902 - accuracy: 0.9333 - val_loss: 0.4679 - val_accuracy: 0.8617\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1807 - accuracy: 0.9346 - val_loss: 0.4667 - val_accuracy: 0.8587\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2026 - accuracy: 0.9261 - val_loss: 0.4334 - val_accuracy: 0.8596\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1806 - accuracy: 0.9373 - val_loss: 0.4333 - val_accuracy: 0.8600\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1831 - accuracy: 0.9340 - val_loss: 0.4158 - val_accuracy: 0.8617\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1996 - accuracy: 0.9266 - val_loss: 0.4323 - val_accuracy: 0.8571\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1884 - accuracy: 0.9319 - val_loss: 0.4163 - val_accuracy: 0.8679\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1857 - accuracy: 0.9320 - val_loss: 0.4396 - val_accuracy: 0.8475\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1622 - accuracy: 0.9413 - val_loss: 0.4000 - val_accuracy: 0.8721\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1596 - accuracy: 0.9419 - val_loss: 0.3916 - val_accuracy: 0.8717\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1515 - accuracy: 0.9455 - val_loss: 0.3885 - val_accuracy: 0.8833\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1806 - accuracy: 0.9349 - val_loss: 0.4368 - val_accuracy: 0.8596\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1781 - accuracy: 0.9370 - val_loss: 0.4220 - val_accuracy: 0.8562\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1649 - accuracy: 0.9413 - val_loss: 0.4385 - val_accuracy: 0.8608\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1718 - accuracy: 0.9407 - val_loss: 0.4752 - val_accuracy: 0.8529\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1729 - accuracy: 0.9364 - val_loss: 0.4717 - val_accuracy: 0.8654\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1649 - accuracy: 0.9386 - val_loss: 0.4716 - val_accuracy: 0.8671\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1797 - accuracy: 0.9372 - val_loss: 0.4590 - val_accuracy: 0.8533\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1651 - accuracy: 0.9439 - val_loss: 0.4808 - val_accuracy: 0.8442\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1656 - accuracy: 0.9415 - val_loss: 0.4279 - val_accuracy: 0.8637\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1683 - accuracy: 0.9395 - val_loss: 0.4243 - val_accuracy: 0.8646\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1652 - accuracy: 0.9405 - val_loss: 0.4067 - val_accuracy: 0.8633\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1536 - accuracy: 0.9438 - val_loss: 0.3932 - val_accuracy: 0.8671\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1493 - accuracy: 0.9478 - val_loss: 0.4164 - val_accuracy: 0.8717\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1452 - accuracy: 0.9461 - val_loss: 0.4116 - val_accuracy: 0.8775\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1399 - accuracy: 0.9502 - val_loss: 0.4072 - val_accuracy: 0.8675\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1588 - accuracy: 0.9422 - val_loss: 0.4262 - val_accuracy: 0.8679\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1504 - accuracy: 0.9454 - val_loss: 0.4684 - val_accuracy: 0.8650\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1486 - accuracy: 0.9489 - val_loss: 0.4206 - val_accuracy: 0.8729\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1505 - accuracy: 0.9465 - val_loss: 0.4914 - val_accuracy: 0.8600\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 2s 5ms/step - loss: 0.1530 - accuracy: 0.9450 - val_loss: 0.4756 - val_accuracy: 0.8667\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 5ms/step - loss: 0.1424 - accuracy: 0.9474 - val_loss: 0.5058 - val_accuracy: 0.8604\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1551 - accuracy: 0.9445 - val_loss: 0.4379 - val_accuracy: 0.8704\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1499 - accuracy: 0.9446 - val_loss: 0.4375 - val_accuracy: 0.8675\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1413 - accuracy: 0.9504 - val_loss: 0.4455 - val_accuracy: 0.8667\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1519 - accuracy: 0.9456 - val_loss: 0.4390 - val_accuracy: 0.8654\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1479 - accuracy: 0.9472 - val_loss: 0.4616 - val_accuracy: 0.8558\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1410 - accuracy: 0.9495 - val_loss: 0.4569 - val_accuracy: 0.8621\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1311 - accuracy: 0.9524 - val_loss: 0.4145 - val_accuracy: 0.8775\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1320 - accuracy: 0.9536 - val_loss: 0.4199 - val_accuracy: 0.8700\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1187 - accuracy: 0.9565 - val_loss: 0.4350 - val_accuracy: 0.8712\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1429 - accuracy: 0.9480 - val_loss: 0.4481 - val_accuracy: 0.8658\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1438 - accuracy: 0.9472 - val_loss: 0.4387 - val_accuracy: 0.8717\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1356 - accuracy: 0.9510 - val_loss: 0.4503 - val_accuracy: 0.8658\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1352 - accuracy: 0.9523 - val_loss: 0.4872 - val_accuracy: 0.8642\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1304 - accuracy: 0.9552 - val_loss: 0.5599 - val_accuracy: 0.8554\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1284 - accuracy: 0.9518 - val_loss: 0.5472 - val_accuracy: 0.8617\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1345 - accuracy: 0.9543 - val_loss: 0.4794 - val_accuracy: 0.8512\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1274 - accuracy: 0.9551 - val_loss: 0.4417 - val_accuracy: 0.8654\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1285 - accuracy: 0.9565 - val_loss: 0.4556 - val_accuracy: 0.8621\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1340 - accuracy: 0.9517 - val_loss: 0.4361 - val_accuracy: 0.8637\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1296 - accuracy: 0.9543 - val_loss: 0.4290 - val_accuracy: 0.8654\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1257 - accuracy: 0.9568 - val_loss: 0.4394 - val_accuracy: 0.8667\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1193 - accuracy: 0.9566 - val_loss: 0.4415 - val_accuracy: 0.8658\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1112 - accuracy: 0.9610 - val_loss: 0.4870 - val_accuracy: 0.8700\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1015 - accuracy: 0.9654 - val_loss: 0.4344 - val_accuracy: 0.8775\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1347 - accuracy: 0.9499 - val_loss: 0.4311 - val_accuracy: 0.8750\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1184 - accuracy: 0.9568 - val_loss: 0.4303 - val_accuracy: 0.8746\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1119 - accuracy: 0.9602 - val_loss: 0.4691 - val_accuracy: 0.8679\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1191 - accuracy: 0.9583 - val_loss: 0.5376 - val_accuracy: 0.8625\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1146 - accuracy: 0.9573 - val_loss: 0.5372 - val_accuracy: 0.8575\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1112 - accuracy: 0.9609 - val_loss: 0.5616 - val_accuracy: 0.8508\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1263 - accuracy: 0.9549 - val_loss: 0.5143 - val_accuracy: 0.8550\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1271 - accuracy: 0.9529 - val_loss: 0.5204 - val_accuracy: 0.8533\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1095 - accuracy: 0.9629 - val_loss: 0.4937 - val_accuracy: 0.8583\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1218 - accuracy: 0.9581 - val_loss: 0.5182 - val_accuracy: 0.8458\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1196 - accuracy: 0.9569 - val_loss: 0.4726 - val_accuracy: 0.8637\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1119 - accuracy: 0.9600 - val_loss: 0.5037 - val_accuracy: 0.8592\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0957 - accuracy: 0.9658 - val_loss: 0.4491 - val_accuracy: 0.8754\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1040 - accuracy: 0.9645 - val_loss: 0.4347 - val_accuracy: 0.8754\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0927 - accuracy: 0.9681 - val_loss: 0.4709 - val_accuracy: 0.8675\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1124 - accuracy: 0.9591 - val_loss: 0.4657 - val_accuracy: 0.8717\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1116 - accuracy: 0.9593 - val_loss: 0.5192 - val_accuracy: 0.8558\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1178 - accuracy: 0.9569 - val_loss: 0.4942 - val_accuracy: 0.8683\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1106 - accuracy: 0.9614 - val_loss: 0.5294 - val_accuracy: 0.8637\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1026 - accuracy: 0.9636 - val_loss: 0.5595 - val_accuracy: 0.8604\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1038 - accuracy: 0.9652 - val_loss: 0.5487 - val_accuracy: 0.8612\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1043 - accuracy: 0.9641 - val_loss: 0.5256 - val_accuracy: 0.8596\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1123 - accuracy: 0.9608 - val_loss: 0.5094 - val_accuracy: 0.8592\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1023 - accuracy: 0.9649 - val_loss: 0.4970 - val_accuracy: 0.8596\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1110 - accuracy: 0.9601 - val_loss: 0.5051 - val_accuracy: 0.8592\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1032 - accuracy: 0.9633 - val_loss: 0.4924 - val_accuracy: 0.8650\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1039 - accuracy: 0.9639 - val_loss: 0.4836 - val_accuracy: 0.8737\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0918 - accuracy: 0.9697 - val_loss: 0.4657 - val_accuracy: 0.8717\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0892 - accuracy: 0.9681 - val_loss: 0.4923 - val_accuracy: 0.8617\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0927 - accuracy: 0.9670 - val_loss: 0.4864 - val_accuracy: 0.8662\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.1054 - accuracy: 0.9639 - val_loss: 0.4901 - val_accuracy: 0.8742\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0936 - accuracy: 0.9686 - val_loss: 0.4898 - val_accuracy: 0.8608\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0926 - accuracy: 0.9673 - val_loss: 0.4908 - val_accuracy: 0.8696\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0956 - accuracy: 0.9665 - val_loss: 0.5776 - val_accuracy: 0.8600\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0857 - accuracy: 0.9707 - val_loss: 0.5699 - val_accuracy: 0.8608\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0925 - accuracy: 0.9666 - val_loss: 0.6011 - val_accuracy: 0.8625\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1038 - accuracy: 0.9644 - val_loss: 0.5290 - val_accuracy: 0.8575\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0960 - accuracy: 0.9667 - val_loss: 0.5473 - val_accuracy: 0.8567\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0912 - accuracy: 0.9690 - val_loss: 0.5303 - val_accuracy: 0.8608\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0954 - accuracy: 0.9660 - val_loss: 0.5042 - val_accuracy: 0.8650\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0868 - accuracy: 0.9700 - val_loss: 0.5239 - val_accuracy: 0.8558\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0954 - accuracy: 0.9660 - val_loss: 0.5027 - val_accuracy: 0.8696\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0797 - accuracy: 0.9736 - val_loss: 0.5539 - val_accuracy: 0.8600\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0801 - accuracy: 0.9716 - val_loss: 0.4697 - val_accuracy: 0.8788\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0717 - accuracy: 0.9754 - val_loss: 0.4879 - val_accuracy: 0.8733\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0907 - accuracy: 0.9684 - val_loss: 0.5296 - val_accuracy: 0.8583\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0904 - accuracy: 0.9673 - val_loss: 0.5161 - val_accuracy: 0.8704\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0874 - accuracy: 0.9686 - val_loss: 0.5191 - val_accuracy: 0.8696\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0852 - accuracy: 0.9709 - val_loss: 0.5962 - val_accuracy: 0.8612\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0863 - accuracy: 0.9701 - val_loss: 0.6027 - val_accuracy: 0.8687\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0772 - accuracy: 0.9740 - val_loss: 0.6382 - val_accuracy: 0.8512\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0840 - accuracy: 0.9716 - val_loss: 0.5605 - val_accuracy: 0.8533\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0842 - accuracy: 0.9710 - val_loss: 0.5638 - val_accuracy: 0.8571\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0841 - accuracy: 0.9689 - val_loss: 0.5141 - val_accuracy: 0.8662\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0838 - accuracy: 0.9710 - val_loss: 0.5578 - val_accuracy: 0.8458\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0866 - accuracy: 0.9668 - val_loss: 0.4980 - val_accuracy: 0.8562\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0810 - accuracy: 0.9721 - val_loss: 0.5626 - val_accuracy: 0.8600\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0774 - accuracy: 0.9728 - val_loss: 0.4868 - val_accuracy: 0.8758\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0705 - accuracy: 0.9767 - val_loss: 0.5001 - val_accuracy: 0.8750\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0691 - accuracy: 0.9754 - val_loss: 0.4965 - val_accuracy: 0.8725\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0891 - accuracy: 0.9673 - val_loss: 0.5023 - val_accuracy: 0.8725\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0769 - accuracy: 0.9722 - val_loss: 0.5204 - val_accuracy: 0.8675\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0805 - accuracy: 0.9704 - val_loss: 0.5177 - val_accuracy: 0.8733\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0863 - accuracy: 0.9678 - val_loss: 0.5988 - val_accuracy: 0.8592\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0802 - accuracy: 0.9719 - val_loss: 0.6345 - val_accuracy: 0.8650\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0753 - accuracy: 0.9739 - val_loss: 0.6609 - val_accuracy: 0.8554\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0773 - accuracy: 0.9746 - val_loss: 0.5453 - val_accuracy: 0.8575\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0780 - accuracy: 0.9728 - val_loss: 0.5820 - val_accuracy: 0.8604\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0822 - accuracy: 0.9712 - val_loss: 0.5738 - val_accuracy: 0.8562\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0823 - accuracy: 0.9705 - val_loss: 0.5280 - val_accuracy: 0.8612\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0718 - accuracy: 0.9751 - val_loss: 0.5544 - val_accuracy: 0.8592\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0839 - accuracy: 0.9698 - val_loss: 0.5509 - val_accuracy: 0.8592\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0736 - accuracy: 0.9727 - val_loss: 0.5292 - val_accuracy: 0.8687\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0671 - accuracy: 0.9761 - val_loss: 0.4995 - val_accuracy: 0.8813\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0666 - accuracy: 0.9780 - val_loss: 0.5380 - val_accuracy: 0.8708\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0769 - accuracy: 0.9752 - val_loss: 0.5313 - val_accuracy: 0.8750\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0767 - accuracy: 0.9730 - val_loss: 0.5409 - val_accuracy: 0.8679\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0660 - accuracy: 0.9785 - val_loss: 0.5759 - val_accuracy: 0.8608\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 2s 5ms/step - loss: 0.0726 - accuracy: 0.9741 - val_loss: 0.6914 - val_accuracy: 0.8629\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0796 - accuracy: 0.9697 - val_loss: 0.6602 - val_accuracy: 0.8633\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0691 - accuracy: 0.9784 - val_loss: 0.6401 - val_accuracy: 0.8625\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0679 - accuracy: 0.9779 - val_loss: 0.5708 - val_accuracy: 0.8642\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0703 - accuracy: 0.9770 - val_loss: 0.5808 - val_accuracy: 0.8662\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0641 - accuracy: 0.9799 - val_loss: 0.5966 - val_accuracy: 0.8533\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0623 - accuracy: 0.9791 - val_loss: 0.5964 - val_accuracy: 0.8642\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0629 - accuracy: 0.9793 - val_loss: 0.5343 - val_accuracy: 0.8600\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0662 - accuracy: 0.9768 - val_loss: 0.5773 - val_accuracy: 0.8592\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0634 - accuracy: 0.9777 - val_loss: 0.5232 - val_accuracy: 0.8729\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0540 - accuracy: 0.9815 - val_loss: 0.5305 - val_accuracy: 0.8750\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0580 - accuracy: 0.9782 - val_loss: 0.5414 - val_accuracy: 0.8733\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0728 - accuracy: 0.9741 - val_loss: 0.5682 - val_accuracy: 0.8700\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0659 - accuracy: 0.9790 - val_loss: 0.5659 - val_accuracy: 0.8750\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0647 - accuracy: 0.9784 - val_loss: 0.6461 - val_accuracy: 0.8625\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0597 - accuracy: 0.9807 - val_loss: 0.6674 - val_accuracy: 0.8625\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0590 - accuracy: 0.9796 - val_loss: 0.6614 - val_accuracy: 0.8646\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0600 - accuracy: 0.9798 - val_loss: 0.7147 - val_accuracy: 0.8617\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0623 - accuracy: 0.9803 - val_loss: 0.5915 - val_accuracy: 0.8592\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0704 - accuracy: 0.9758 - val_loss: 0.5911 - val_accuracy: 0.8604\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0643 - accuracy: 0.9779 - val_loss: 0.6061 - val_accuracy: 0.8621\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0677 - accuracy: 0.9772 - val_loss: 0.5429 - val_accuracy: 0.8604\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0641 - accuracy: 0.9774 - val_loss: 0.5787 - val_accuracy: 0.8587\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0556 - accuracy: 0.9808 - val_loss: 0.5994 - val_accuracy: 0.8554\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0580 - accuracy: 0.9812 - val_loss: 0.5315 - val_accuracy: 0.8746\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0451 - accuracy: 0.9851 - val_loss: 0.5321 - val_accuracy: 0.8804\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0514 - accuracy: 0.9819 - val_loss: 0.5488 - val_accuracy: 0.8646\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0632 - accuracy: 0.9791 - val_loss: 0.5544 - val_accuracy: 0.8687\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0547 - accuracy: 0.9799 - val_loss: 0.5688 - val_accuracy: 0.8708\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0538 - accuracy: 0.9819 - val_loss: 0.5847 - val_accuracy: 0.8625\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0594 - accuracy: 0.9791 - val_loss: 0.7059 - val_accuracy: 0.8579\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0638 - accuracy: 0.9758 - val_loss: 0.6833 - val_accuracy: 0.8629\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0552 - accuracy: 0.9811 - val_loss: 0.7140 - val_accuracy: 0.8642\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0631 - accuracy: 0.9787 - val_loss: 0.6219 - val_accuracy: 0.8550\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0542 - accuracy: 0.9826 - val_loss: 0.7396 - val_accuracy: 0.8375\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0590 - accuracy: 0.9807 - val_loss: 0.6270 - val_accuracy: 0.8621\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0544 - accuracy: 0.9810 - val_loss: 0.5868 - val_accuracy: 0.8633\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0573 - accuracy: 0.9810 - val_loss: 0.6368 - val_accuracy: 0.8542\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0586 - accuracy: 0.9797 - val_loss: 0.5913 - val_accuracy: 0.8562\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0502 - accuracy: 0.9828 - val_loss: 0.6234 - val_accuracy: 0.8646\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0587 - accuracy: 0.9804 - val_loss: 0.5925 - val_accuracy: 0.8687\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0461 - accuracy: 0.9834 - val_loss: 0.5544 - val_accuracy: 0.8804\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0663 - accuracy: 0.9751 - val_loss: 0.6683 - val_accuracy: 0.8500\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0606 - accuracy: 0.9789 - val_loss: 0.5867 - val_accuracy: 0.8612\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0687 - accuracy: 0.9756 - val_loss: 0.6228 - val_accuracy: 0.8658\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0498 - accuracy: 0.9846 - val_loss: 0.6952 - val_accuracy: 0.8629\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0539 - accuracy: 0.9812 - val_loss: 0.7261 - val_accuracy: 0.8629\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0558 - accuracy: 0.9821 - val_loss: 0.8396 - val_accuracy: 0.8517\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0575 - accuracy: 0.9810 - val_loss: 0.6359 - val_accuracy: 0.8629\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0499 - accuracy: 0.9846 - val_loss: 0.6265 - val_accuracy: 0.8683\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0493 - accuracy: 0.9827 - val_loss: 0.6267 - val_accuracy: 0.8600\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0521 - accuracy: 0.9830 - val_loss: 0.6048 - val_accuracy: 0.8646\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0491 - accuracy: 0.9821 - val_loss: 0.6172 - val_accuracy: 0.8583\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0471 - accuracy: 0.9843 - val_loss: 0.6206 - val_accuracy: 0.8633\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0418 - accuracy: 0.9854 - val_loss: 0.5624 - val_accuracy: 0.8725\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0419 - accuracy: 0.9865 - val_loss: 0.5662 - val_accuracy: 0.8792\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0423 - accuracy: 0.9859 - val_loss: 0.5620 - val_accuracy: 0.8775\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0478 - accuracy: 0.9848 - val_loss: 0.6258 - val_accuracy: 0.8708\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0411 - accuracy: 0.9871 - val_loss: 0.6323 - val_accuracy: 0.8737\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0464 - accuracy: 0.9848 - val_loss: 0.6249 - val_accuracy: 0.8633\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0604 - accuracy: 0.9782 - val_loss: 0.7031 - val_accuracy: 0.8629\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0480 - accuracy: 0.9822 - val_loss: 0.7319 - val_accuracy: 0.8667\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0507 - accuracy: 0.9851 - val_loss: 0.7138 - val_accuracy: 0.8671\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0553 - accuracy: 0.9784 - val_loss: 0.7416 - val_accuracy: 0.8483\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0619 - accuracy: 0.9781 - val_loss: 0.6723 - val_accuracy: 0.8542\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0373 - accuracy: 0.9895 - val_loss: 0.6636 - val_accuracy: 0.8608\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0555 - accuracy: 0.9827 - val_loss: 0.6154 - val_accuracy: 0.8625\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0470 - accuracy: 0.9837 - val_loss: 0.6441 - val_accuracy: 0.8604\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0500 - accuracy: 0.9816 - val_loss: 0.6889 - val_accuracy: 0.8533\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0345 - accuracy: 0.9897 - val_loss: 0.5796 - val_accuracy: 0.8767\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0646 - accuracy: 0.9782 - val_loss: 0.6710 - val_accuracy: 0.8654\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0534 - accuracy: 0.9823 - val_loss: 0.6325 - val_accuracy: 0.8696\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0546 - accuracy: 0.9803 - val_loss: 0.6589 - val_accuracy: 0.8608\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0458 - accuracy: 0.9836 - val_loss: 0.6181 - val_accuracy: 0.8625\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0434 - accuracy: 0.9859 - val_loss: 0.6019 - val_accuracy: 0.8704\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0400 - accuracy: 0.9858 - val_loss: 0.7335 - val_accuracy: 0.8671\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0497 - accuracy: 0.9830 - val_loss: 0.7823 - val_accuracy: 0.8554\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0418 - accuracy: 0.9853 - val_loss: 0.7607 - val_accuracy: 0.8675\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0471 - accuracy: 0.9836 - val_loss: 0.7234 - val_accuracy: 0.8554\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0557 - accuracy: 0.9804 - val_loss: 0.6873 - val_accuracy: 0.8533\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0390 - accuracy: 0.9877 - val_loss: 0.7203 - val_accuracy: 0.8575\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0461 - accuracy: 0.9850 - val_loss: 0.6782 - val_accuracy: 0.8546\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0463 - accuracy: 0.9847 - val_loss: 0.7030 - val_accuracy: 0.8533\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0469 - accuracy: 0.9848 - val_loss: 0.6651 - val_accuracy: 0.8604\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0345 - accuracy: 0.9880 - val_loss: 0.5853 - val_accuracy: 0.8746\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0295 - accuracy: 0.9911 - val_loss: 0.5793 - val_accuracy: 0.8792\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0321 - accuracy: 0.9901 - val_loss: 0.5925 - val_accuracy: 0.8779\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0372 - accuracy: 0.9886 - val_loss: 0.6281 - val_accuracy: 0.8675\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0417 - accuracy: 0.9848 - val_loss: 0.6444 - val_accuracy: 0.8675\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0522 - accuracy: 0.9819 - val_loss: 0.6229 - val_accuracy: 0.8637\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0394 - accuracy: 0.9872 - val_loss: 0.7481 - val_accuracy: 0.8642\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0429 - accuracy: 0.9848 - val_loss: 0.7544 - val_accuracy: 0.8604\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0323 - accuracy: 0.9896 - val_loss: 0.7881 - val_accuracy: 0.8687\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0461 - accuracy: 0.9845 - val_loss: 0.6871 - val_accuracy: 0.8600\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 2s 6ms/step - loss: 0.0390 - accuracy: 0.9872 - val_loss: 0.7008 - val_accuracy: 0.8637\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0537 - accuracy: 0.9809 - val_loss: 0.7928 - val_accuracy: 0.8475\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0347 - accuracy: 0.9886 - val_loss: 0.6663 - val_accuracy: 0.8621\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0361 - accuracy: 0.9878 - val_loss: 0.7335 - val_accuracy: 0.8587\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0551 - accuracy: 0.9799 - val_loss: 0.7034 - val_accuracy: 0.8512\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0411 - accuracy: 0.9864 - val_loss: 0.6837 - val_accuracy: 0.8533\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0348 - accuracy: 0.9885 - val_loss: 0.6882 - val_accuracy: 0.8654\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0328 - accuracy: 0.9892 - val_loss: 0.5899 - val_accuracy: 0.8754\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0570 - accuracy: 0.9825 - val_loss: 0.8896 - val_accuracy: 0.8354\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0561 - accuracy: 0.9825 - val_loss: 0.6787 - val_accuracy: 0.8700\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0412 - accuracy: 0.9869 - val_loss: 0.6852 - val_accuracy: 0.8671\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0345 - accuracy: 0.9881 - val_loss: 0.7740 - val_accuracy: 0.8708\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0343 - accuracy: 0.9883 - val_loss: 0.7711 - val_accuracy: 0.8637\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0405 - accuracy: 0.9858 - val_loss: 0.8086 - val_accuracy: 0.8558\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0542 - accuracy: 0.9805 - val_loss: 0.7284 - val_accuracy: 0.8562\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0369 - accuracy: 0.9872 - val_loss: 0.7095 - val_accuracy: 0.8629\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0378 - accuracy: 0.9870 - val_loss: 0.7240 - val_accuracy: 0.8621\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0349 - accuracy: 0.9883 - val_loss: 0.7402 - val_accuracy: 0.8642\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0428 - accuracy: 0.9861 - val_loss: 0.6997 - val_accuracy: 0.8612\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0426 - accuracy: 0.9871 - val_loss: 0.6986 - val_accuracy: 0.8596\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0236 - accuracy: 0.9922 - val_loss: 0.6317 - val_accuracy: 0.8750\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0392 - accuracy: 0.9871 - val_loss: 0.6155 - val_accuracy: 0.8733\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0386 - accuracy: 0.9871 - val_loss: 0.6441 - val_accuracy: 0.8737\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0429 - accuracy: 0.9854 - val_loss: 0.6717 - val_accuracy: 0.8662\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0385 - accuracy: 0.9868 - val_loss: 0.6596 - val_accuracy: 0.8708\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0313 - accuracy: 0.9904 - val_loss: 0.7111 - val_accuracy: 0.8633\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0540 - accuracy: 0.9816 - val_loss: 0.8475 - val_accuracy: 0.8696\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0441 - accuracy: 0.9847 - val_loss: 0.8206 - val_accuracy: 0.8612\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0303 - accuracy: 0.9904 - val_loss: 0.8072 - val_accuracy: 0.8600\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0309 - accuracy: 0.9898 - val_loss: 0.6995 - val_accuracy: 0.8617\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0290 - accuracy: 0.9911 - val_loss: 0.7239 - val_accuracy: 0.8637\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0269 - accuracy: 0.9923 - val_loss: 0.7139 - val_accuracy: 0.8575\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0318 - accuracy: 0.9898 - val_loss: 0.6805 - val_accuracy: 0.8608\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0306 - accuracy: 0.9899 - val_loss: 0.6902 - val_accuracy: 0.8675\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0277 - accuracy: 0.9911 - val_loss: 0.7352 - val_accuracy: 0.8642\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0283 - accuracy: 0.9910 - val_loss: 0.6416 - val_accuracy: 0.8788\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0324 - accuracy: 0.9894 - val_loss: 0.6220 - val_accuracy: 0.8792\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0251 - accuracy: 0.9933 - val_loss: 0.6889 - val_accuracy: 0.8721\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0374 - accuracy: 0.9868 - val_loss: 0.6799 - val_accuracy: 0.8696\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0220 - accuracy: 0.9941 - val_loss: 0.6879 - val_accuracy: 0.8675\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0396 - accuracy: 0.9859 - val_loss: 0.6932 - val_accuracy: 0.8721\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0378 - accuracy: 0.9866 - val_loss: 0.8488 - val_accuracy: 0.8629\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0328 - accuracy: 0.9885 - val_loss: 0.8651 - val_accuracy: 0.8579\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0274 - accuracy: 0.9918 - val_loss: 0.8467 - val_accuracy: 0.8671\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0385 - accuracy: 0.9866 - val_loss: 0.8064 - val_accuracy: 0.8554\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0503 - accuracy: 0.9823 - val_loss: 0.8575 - val_accuracy: 0.8529\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0394 - accuracy: 0.9877 - val_loss: 0.7840 - val_accuracy: 0.8517\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0399 - accuracy: 0.9853 - val_loss: 0.7057 - val_accuracy: 0.8650\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0295 - accuracy: 0.9894 - val_loss: 0.7462 - val_accuracy: 0.8567\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0384 - accuracy: 0.9873 - val_loss: 0.7741 - val_accuracy: 0.8583\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0368 - accuracy: 0.9876 - val_loss: 0.6507 - val_accuracy: 0.8750\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0306 - accuracy: 0.9897 - val_loss: 0.6365 - val_accuracy: 0.8763\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0359 - accuracy: 0.9884 - val_loss: 0.6373 - val_accuracy: 0.8779\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0329 - accuracy: 0.9896 - val_loss: 0.7131 - val_accuracy: 0.8725\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0299 - accuracy: 0.9908 - val_loss: 0.7802 - val_accuracy: 0.8571\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0499 - accuracy: 0.9847 - val_loss: 0.7124 - val_accuracy: 0.8662\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0393 - accuracy: 0.9858 - val_loss: 0.8957 - val_accuracy: 0.8596\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0297 - accuracy: 0.9905 - val_loss: 0.8244 - val_accuracy: 0.8646\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0187 - accuracy: 0.9948 - val_loss: 0.9594 - val_accuracy: 0.8517\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0360 - accuracy: 0.9871 - val_loss: 0.7517 - val_accuracy: 0.8650\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0318 - accuracy: 0.9896 - val_loss: 0.7400 - val_accuracy: 0.8629\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0276 - accuracy: 0.9908 - val_loss: 0.8403 - val_accuracy: 0.8450\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0396 - accuracy: 0.9870 - val_loss: 0.7366 - val_accuracy: 0.8608\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0245 - accuracy: 0.9928 - val_loss: 0.7691 - val_accuracy: 0.8625\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0401 - accuracy: 0.9879 - val_loss: 0.7280 - val_accuracy: 0.8633\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0232 - accuracy: 0.9928 - val_loss: 0.7516 - val_accuracy: 0.8725\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0315 - accuracy: 0.9906 - val_loss: 0.6401 - val_accuracy: 0.8779\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0339 - accuracy: 0.9879 - val_loss: 0.7172 - val_accuracy: 0.8708\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0294 - accuracy: 0.9908 - val_loss: 0.7329 - val_accuracy: 0.8637\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0270 - accuracy: 0.9912 - val_loss: 0.7713 - val_accuracy: 0.8671\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0215 - accuracy: 0.9937 - val_loss: 0.7845 - val_accuracy: 0.8617\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0506 - accuracy: 0.9818 - val_loss: 0.9234 - val_accuracy: 0.8583\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0289 - accuracy: 0.9910 - val_loss: 0.9086 - val_accuracy: 0.8596\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0225 - accuracy: 0.9919 - val_loss: 0.9181 - val_accuracy: 0.8650\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0266 - accuracy: 0.9912 - val_loss: 0.8000 - val_accuracy: 0.8567\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0382 - accuracy: 0.9866 - val_loss: 0.7359 - val_accuracy: 0.8600\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0387 - accuracy: 0.9874 - val_loss: 0.7403 - val_accuracy: 0.8654\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0272 - accuracy: 0.9910 - val_loss: 0.7654 - val_accuracy: 0.8692\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0432 - accuracy: 0.9848 - val_loss: 0.7478 - val_accuracy: 0.8604\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0210 - accuracy: 0.9935 - val_loss: 0.7851 - val_accuracy: 0.8587\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0282 - accuracy: 0.9906 - val_loss: 0.6765 - val_accuracy: 0.8654\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0314 - accuracy: 0.9880 - val_loss: 0.7105 - val_accuracy: 0.8721\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0203 - accuracy: 0.9926 - val_loss: 0.6823 - val_accuracy: 0.8813\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0308 - accuracy: 0.9906 - val_loss: 0.7176 - val_accuracy: 0.8700\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0472 - accuracy: 0.9851 - val_loss: 0.7493 - val_accuracy: 0.8608\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0275 - accuracy: 0.9912 - val_loss: 0.8004 - val_accuracy: 0.8658\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0299 - accuracy: 0.9895 - val_loss: 0.9205 - val_accuracy: 0.8662\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0230 - accuracy: 0.9923 - val_loss: 0.9409 - val_accuracy: 0.8587\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0275 - accuracy: 0.9906 - val_loss: 0.9322 - val_accuracy: 0.8617\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0197 - accuracy: 0.9952 - val_loss: 0.7741 - val_accuracy: 0.8662\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0344 - accuracy: 0.9878 - val_loss: 0.8075 - val_accuracy: 0.8562\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0275 - accuracy: 0.9917 - val_loss: 0.8076 - val_accuracy: 0.8612\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 2s 6ms/step - loss: 0.0341 - accuracy: 0.9882 - val_loss: 0.8365 - val_accuracy: 0.8537\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0182 - accuracy: 0.9952 - val_loss: 0.7834 - val_accuracy: 0.8658\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0266 - accuracy: 0.9911 - val_loss: 0.8705 - val_accuracy: 0.8617\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0185 - accuracy: 0.9945 - val_loss: 0.6972 - val_accuracy: 0.8771\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0421 - accuracy: 0.9856 - val_loss: 0.6988 - val_accuracy: 0.8725\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0220 - accuracy: 0.9928 - val_loss: 0.7023 - val_accuracy: 0.8788\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0246 - accuracy: 0.9912 - val_loss: 0.8407 - val_accuracy: 0.8567\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0280 - accuracy: 0.9909 - val_loss: 0.8129 - val_accuracy: 0.8596\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0216 - accuracy: 0.9937 - val_loss: 0.7518 - val_accuracy: 0.8683\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0342 - accuracy: 0.9868 - val_loss: 0.9699 - val_accuracy: 0.8662\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0236 - accuracy: 0.9919 - val_loss: 0.8826 - val_accuracy: 0.8708\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0330 - accuracy: 0.9886 - val_loss: 0.9211 - val_accuracy: 0.8612\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0320 - accuracy: 0.9885 - val_loss: 0.7997 - val_accuracy: 0.8637\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0336 - accuracy: 0.9887 - val_loss: 0.8372 - val_accuracy: 0.8546\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0244 - accuracy: 0.9920 - val_loss: 0.8121 - val_accuracy: 0.8617\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0390 - accuracy: 0.9867 - val_loss: 0.7849 - val_accuracy: 0.8592\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0373 - accuracy: 0.9883 - val_loss: 0.8289 - val_accuracy: 0.8604\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0171 - accuracy: 0.9945 - val_loss: 0.7939 - val_accuracy: 0.8646\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0189 - accuracy: 0.9940 - val_loss: 0.7203 - val_accuracy: 0.8733\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0252 - accuracy: 0.9909 - val_loss: 0.7269 - val_accuracy: 0.8767\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0184 - accuracy: 0.9936 - val_loss: 0.6907 - val_accuracy: 0.8763\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0499 - accuracy: 0.9837 - val_loss: 0.7646 - val_accuracy: 0.8679\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0383 - accuracy: 0.9872 - val_loss: 0.8364 - val_accuracy: 0.8625\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0201 - accuracy: 0.9939 - val_loss: 0.7494 - val_accuracy: 0.8700\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0189 - accuracy: 0.9942 - val_loss: 0.9666 - val_accuracy: 0.8587\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0150 - accuracy: 0.9962 - val_loss: 0.9753 - val_accuracy: 0.8596\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0216 - accuracy: 0.9931 - val_loss: 0.9092 - val_accuracy: 0.8637\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0307 - accuracy: 0.9892 - val_loss: 0.8339 - val_accuracy: 0.8558\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0319 - accuracy: 0.9894 - val_loss: 0.8551 - val_accuracy: 0.8525\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0208 - accuracy: 0.9932 - val_loss: 0.8381 - val_accuracy: 0.8662\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0304 - accuracy: 0.9909 - val_loss: 0.8331 - val_accuracy: 0.8608\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0377 - accuracy: 0.9862 - val_loss: 0.8743 - val_accuracy: 0.8408\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0227 - accuracy: 0.9936 - val_loss: 0.8425 - val_accuracy: 0.8625\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0197 - accuracy: 0.9931 - val_loss: 0.7757 - val_accuracy: 0.8717\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0174 - accuracy: 0.9939 - val_loss: 0.7600 - val_accuracy: 0.8679\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0135 - accuracy: 0.9961 - val_loss: 0.7339 - val_accuracy: 0.8771\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0199 - accuracy: 0.9937 - val_loss: 0.7588 - val_accuracy: 0.8608\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0235 - accuracy: 0.9929 - val_loss: 0.7795 - val_accuracy: 0.8708\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0130 - accuracy: 0.9965 - val_loss: 0.7961 - val_accuracy: 0.8696\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0237 - accuracy: 0.9928 - val_loss: 0.9338 - val_accuracy: 0.8675\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0181 - accuracy: 0.9941 - val_loss: 0.9956 - val_accuracy: 0.8642\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0486 - accuracy: 0.9828 - val_loss: 0.8905 - val_accuracy: 0.8629\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0303 - accuracy: 0.9904 - val_loss: 0.8055 - val_accuracy: 0.8587\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0223 - accuracy: 0.9919 - val_loss: 0.8306 - val_accuracy: 0.8575\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0279 - accuracy: 0.9907 - val_loss: 0.7937 - val_accuracy: 0.8667\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0201 - accuracy: 0.9933 - val_loss: 0.7865 - val_accuracy: 0.8637\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0193 - accuracy: 0.9945 - val_loss: 0.8126 - val_accuracy: 0.8600\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0302 - accuracy: 0.9905 - val_loss: 0.8196 - val_accuracy: 0.8617\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0347 - accuracy: 0.9878 - val_loss: 0.8000 - val_accuracy: 0.8629\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0567 - accuracy: 0.9839 - val_loss: 0.7356 - val_accuracy: 0.8721\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0193 - accuracy: 0.9945 - val_loss: 0.7345 - val_accuracy: 0.8788\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0461 - accuracy: 0.9840 - val_loss: 0.8087 - val_accuracy: 0.8492\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0267 - accuracy: 0.9916 - val_loss: 0.8160 - val_accuracy: 0.8692\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0171 - accuracy: 0.9951 - val_loss: 0.8137 - val_accuracy: 0.8625\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0235 - accuracy: 0.9928 - val_loss: 0.9985 - val_accuracy: 0.8583\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0312 - accuracy: 0.9907 - val_loss: 1.0044 - val_accuracy: 0.8633\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0159 - accuracy: 0.9945 - val_loss: 0.9823 - val_accuracy: 0.8637\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0300 - accuracy: 0.9903 - val_loss: 0.8362 - val_accuracy: 0.8604\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0404 - accuracy: 0.9857 - val_loss: 0.8710 - val_accuracy: 0.8604\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0165 - accuracy: 0.9943 - val_loss: 0.8263 - val_accuracy: 0.8658\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0241 - accuracy: 0.9916 - val_loss: 0.8332 - val_accuracy: 0.8567\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0192 - accuracy: 0.9944 - val_loss: 0.9845 - val_accuracy: 0.8479\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0287 - accuracy: 0.9908 - val_loss: 0.8428 - val_accuracy: 0.8558\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0086 - accuracy: 0.9978 - val_loss: 0.7032 - val_accuracy: 0.8825\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0069 - accuracy: 0.9981 - val_loss: 0.7485 - val_accuracy: 0.8825\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0145 - accuracy: 0.9957 - val_loss: 0.7621 - val_accuracy: 0.8696\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0177 - accuracy: 0.9946 - val_loss: 0.8494 - val_accuracy: 0.8608\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0191 - accuracy: 0.9936 - val_loss: 0.8444 - val_accuracy: 0.8704\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0195 - accuracy: 0.9940 - val_loss: 0.8349 - val_accuracy: 0.8675\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0232 - accuracy: 0.9915 - val_loss: 1.0205 - val_accuracy: 0.8500\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0095 - accuracy: 0.9977 - val_loss: 0.9901 - val_accuracy: 0.8675\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0291 - accuracy: 0.9885 - val_loss: 0.9580 - val_accuracy: 0.8683\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0109 - accuracy: 0.9971 - val_loss: 0.8671 - val_accuracy: 0.8650\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0186 - accuracy: 0.9941 - val_loss: 0.9326 - val_accuracy: 0.8554\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0566 - accuracy: 0.9820 - val_loss: 0.9378 - val_accuracy: 0.8396\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0432 - accuracy: 0.9848 - val_loss: 0.8594 - val_accuracy: 0.8579\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0144 - accuracy: 0.9970 - val_loss: 0.8534 - val_accuracy: 0.8612\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0155 - accuracy: 0.9948 - val_loss: 0.8671 - val_accuracy: 0.8679\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0282 - accuracy: 0.9912 - val_loss: 0.8349 - val_accuracy: 0.8617\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0492 - accuracy: 0.9843 - val_loss: 0.7375 - val_accuracy: 0.8750\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0158 - accuracy: 0.9946 - val_loss: 0.7459 - val_accuracy: 0.8817\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0366 - accuracy: 0.9865 - val_loss: 0.8506 - val_accuracy: 0.8592\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0579 - accuracy: 0.9799 - val_loss: 0.8654 - val_accuracy: 0.8529\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0224 - accuracy: 0.9923 - val_loss: 0.8119 - val_accuracy: 0.8687\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0184 - accuracy: 0.9946 - val_loss: 0.9613 - val_accuracy: 0.8671\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0065 - accuracy: 0.9987 - val_loss: 0.9982 - val_accuracy: 0.8642\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0253 - accuracy: 0.9924 - val_loss: 0.9767 - val_accuracy: 0.8596\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0343 - accuracy: 0.9886 - val_loss: 0.8420 - val_accuracy: 0.8587\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0138 - accuracy: 0.9958 - val_loss: 0.8395 - val_accuracy: 0.8642\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0180 - accuracy: 0.9939 - val_loss: 0.8679 - val_accuracy: 0.8550\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0086 - accuracy: 0.9982 - val_loss: 0.9019 - val_accuracy: 0.8579\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0101 - accuracy: 0.9974 - val_loss: 0.8712 - val_accuracy: 0.8642\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0772 - accuracy: 0.9755 - val_loss: 0.8098 - val_accuracy: 0.8625\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0070 - accuracy: 0.9989 - val_loss: 0.7388 - val_accuracy: 0.8875\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0042 - accuracy: 0.9994 - val_loss: 0.7673 - val_accuracy: 0.8775\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0317 - accuracy: 0.9901 - val_loss: 0.9401 - val_accuracy: 0.8625\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 5ms/step - loss: 0.0079 - accuracy: 0.9984 - val_loss: 0.8470 - val_accuracy: 0.8708\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0097 - accuracy: 0.9974 - val_loss: 0.8211 - val_accuracy: 0.8717\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0315 - accuracy: 0.9895 - val_loss: 0.8400 - val_accuracy: 0.8704\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0482 - accuracy: 0.9814 - val_loss: 1.0373 - val_accuracy: 0.8562\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0286 - accuracy: 0.9901 - val_loss: 1.0131 - val_accuracy: 0.8571\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0144 - accuracy: 0.9960 - val_loss: 0.9788 - val_accuracy: 0.8737\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0112 - accuracy: 0.9971 - val_loss: 0.8749 - val_accuracy: 0.8687\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0160 - accuracy: 0.9952 - val_loss: 0.9041 - val_accuracy: 0.8608\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0541 - accuracy: 0.9815 - val_loss: 0.8772 - val_accuracy: 0.8604\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0213 - accuracy: 0.9931 - val_loss: 0.8491 - val_accuracy: 0.8646\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0087 - accuracy: 0.9982 - val_loss: 0.8560 - val_accuracy: 0.8667\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0096 - accuracy: 0.9974 - val_loss: 0.8973 - val_accuracy: 0.8587\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0742 - accuracy: 0.9783 - val_loss: 0.7433 - val_accuracy: 0.8788\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0111 - accuracy: 0.9967 - val_loss: 0.7505 - val_accuracy: 0.8792\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0063 - accuracy: 0.9989 - val_loss: 0.8034 - val_accuracy: 0.8708\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0568 - accuracy: 0.9804 - val_loss: 0.8708 - val_accuracy: 0.8596\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0150 - accuracy: 0.9953 - val_loss: 0.8600 - val_accuracy: 0.8679\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0070 - accuracy: 0.9982 - val_loss: 0.8585 - val_accuracy: 0.8708\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0071 - accuracy: 0.9984 - val_loss: 1.0071 - val_accuracy: 0.8742\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0122 - accuracy: 0.9960 - val_loss: 1.0589 - val_accuracy: 0.8621\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0269 - accuracy: 0.9906 - val_loss: 1.0391 - val_accuracy: 0.8529\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0235 - accuracy: 0.9923 - val_loss: 0.8952 - val_accuracy: 0.8608\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0078 - accuracy: 0.9981 - val_loss: 0.8690 - val_accuracy: 0.8654\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0109 - accuracy: 0.9957 - val_loss: 0.8811 - val_accuracy: 0.8650\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0234 - accuracy: 0.9915 - val_loss: 1.0045 - val_accuracy: 0.8450\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0512 - accuracy: 0.9820 - val_loss: 0.8369 - val_accuracy: 0.8512\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0202 - accuracy: 0.9928 - val_loss: 0.8676 - val_accuracy: 0.8600\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0190 - accuracy: 0.9936 - val_loss: 0.8014 - val_accuracy: 0.8796\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0321 - accuracy: 0.9899 - val_loss: 0.7835 - val_accuracy: 0.8750\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0146 - accuracy: 0.9953 - val_loss: 0.7477 - val_accuracy: 0.8775\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0068 - accuracy: 0.9983 - val_loss: 0.8502 - val_accuracy: 0.8712\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0185 - accuracy: 0.9941 - val_loss: 0.9627 - val_accuracy: 0.8492\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0287 - accuracy: 0.9924 - val_loss: 0.8908 - val_accuracy: 0.8671\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0213 - accuracy: 0.9932 - val_loss: 0.9987 - val_accuracy: 0.8671\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0327 - accuracy: 0.9887 - val_loss: 1.0137 - val_accuracy: 0.8637\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0256 - accuracy: 0.9915 - val_loss: 0.9953 - val_accuracy: 0.8654\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0132 - accuracy: 0.9956 - val_loss: 0.9101 - val_accuracy: 0.8642\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0377 - accuracy: 0.9870 - val_loss: 0.8986 - val_accuracy: 0.8604\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0476 - accuracy: 0.9841 - val_loss: 0.8755 - val_accuracy: 0.8592\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0154 - accuracy: 0.9944 - val_loss: 0.8620 - val_accuracy: 0.8683\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0053 - accuracy: 0.9991 - val_loss: 0.8830 - val_accuracy: 0.8621\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0207 - accuracy: 0.9935 - val_loss: 0.9421 - val_accuracy: 0.8612\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0077 - accuracy: 0.9984 - val_loss: 0.7647 - val_accuracy: 0.8825\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0044 - accuracy: 0.9992 - val_loss: 0.7939 - val_accuracy: 0.8829\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0223 - accuracy: 0.9915 - val_loss: 0.8034 - val_accuracy: 0.8750\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0418 - accuracy: 0.9852 - val_loss: 0.9369 - val_accuracy: 0.8637\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0104 - accuracy: 0.9967 - val_loss: 0.8890 - val_accuracy: 0.8675\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0042 - accuracy: 0.9992 - val_loss: 0.9011 - val_accuracy: 0.8671\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0072 - accuracy: 0.9980 - val_loss: 1.0573 - val_accuracy: 0.8708\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0038 - accuracy: 0.9995 - val_loss: 1.0401 - val_accuracy: 0.8642\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0049 - accuracy: 0.9993 - val_loss: 1.0550 - val_accuracy: 0.8658\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0102 - accuracy: 0.9973 - val_loss: 0.8994 - val_accuracy: 0.8654\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0076 - accuracy: 0.9981 - val_loss: 0.8906 - val_accuracy: 0.8671\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0122 - accuracy: 0.9967 - val_loss: 0.9122 - val_accuracy: 0.8667\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0344 - accuracy: 0.9891 - val_loss: 0.8836 - val_accuracy: 0.8571\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0320 - accuracy: 0.9878 - val_loss: 0.8781 - val_accuracy: 0.8637\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0108 - accuracy: 0.9962 - val_loss: 0.8807 - val_accuracy: 0.8650\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0373 - accuracy: 0.9878 - val_loss: 0.7441 - val_accuracy: 0.8771\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0096 - accuracy: 0.9971 - val_loss: 0.8029 - val_accuracy: 0.8654\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0302 - accuracy: 0.9892 - val_loss: 0.8084 - val_accuracy: 0.8717\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0574 - accuracy: 0.9835 - val_loss: 0.8941 - val_accuracy: 0.8525\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0440 - accuracy: 0.9856 - val_loss: 0.8987 - val_accuracy: 0.8642\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0079 - accuracy: 0.9977 - val_loss: 0.8937 - val_accuracy: 0.8600\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0067 - accuracy: 0.9981 - val_loss: 1.1709 - val_accuracy: 0.8487\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0634 - accuracy: 0.9808 - val_loss: 1.0238 - val_accuracy: 0.8650\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0095 - accuracy: 0.9983 - val_loss: 1.0941 - val_accuracy: 0.8633\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0441 - accuracy: 0.9853 - val_loss: 0.9622 - val_accuracy: 0.8517\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0214 - accuracy: 0.9931 - val_loss: 0.9353 - val_accuracy: 0.8625\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0125 - accuracy: 0.9967 - val_loss: 0.9082 - val_accuracy: 0.8683\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0196 - accuracy: 0.9934 - val_loss: 0.8834 - val_accuracy: 0.8629\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0110 - accuracy: 0.9971 - val_loss: 0.9451 - val_accuracy: 0.8637\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0114 - accuracy: 0.9967 - val_loss: 1.0058 - val_accuracy: 0.8521\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0144 - accuracy: 0.9953 - val_loss: 0.7669 - val_accuracy: 0.8838\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0028 - accuracy: 0.9999 - val_loss: 0.7661 - val_accuracy: 0.8813\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0066 - accuracy: 0.9982 - val_loss: 0.8888 - val_accuracy: 0.8704\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0050 - accuracy: 0.9994 - val_loss: 0.9003 - val_accuracy: 0.8687\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0289 - accuracy: 0.9909 - val_loss: 0.9427 - val_accuracy: 0.8571\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0450 - accuracy: 0.9862 - val_loss: 0.8750 - val_accuracy: 0.8637\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0125 - accuracy: 0.9962 - val_loss: 1.0723 - val_accuracy: 0.8646\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0380 - accuracy: 0.9879 - val_loss: 1.0746 - val_accuracy: 0.8662\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0133 - accuracy: 0.9956 - val_loss: 1.0462 - val_accuracy: 0.8729\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0067 - accuracy: 0.9982 - val_loss: 0.8903 - val_accuracy: 0.8729\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0095 - accuracy: 0.9974 - val_loss: 0.9772 - val_accuracy: 0.8475\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0477 - accuracy: 0.9830 - val_loss: 0.9562 - val_accuracy: 0.8596\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0460 - accuracy: 0.9837 - val_loss: 0.9523 - val_accuracy: 0.8575\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0138 - accuracy: 0.9959 - val_loss: 0.9715 - val_accuracy: 0.8621\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0031 - accuracy: 0.9995 - val_loss: 0.9400 - val_accuracy: 0.8621\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0436 - accuracy: 0.9834 - val_loss: 0.8081 - val_accuracy: 0.8788\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0048 - accuracy: 0.9990 - val_loss: 0.8276 - val_accuracy: 0.8825\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0024 - accuracy: 0.9998 - val_loss: 0.7987 - val_accuracy: 0.8792\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0135 - accuracy: 0.9965 - val_loss: 0.8627 - val_accuracy: 0.8712\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0063 - accuracy: 0.9985 - val_loss: 0.9185 - val_accuracy: 0.8721\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0444 - accuracy: 0.9847 - val_loss: 0.9124 - val_accuracy: 0.8612\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0028 - accuracy: 0.9996 - val_loss: 1.0704 - val_accuracy: 0.8717\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0022 - accuracy: 1.0000 - val_loss: 1.0799 - val_accuracy: 0.8687\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0058 - accuracy: 0.9983 - val_loss: 1.1021 - val_accuracy: 0.8671\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0373 - accuracy: 0.9872 - val_loss: 0.9833 - val_accuracy: 0.8621\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0074 - accuracy: 0.9984 - val_loss: 0.9584 - val_accuracy: 0.8608\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0036 - accuracy: 0.9998 - val_loss: 0.9594 - val_accuracy: 0.8642\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0032 - accuracy: 0.9992 - val_loss: 0.9399 - val_accuracy: 0.8629\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0113 - accuracy: 0.9960 - val_loss: 0.9899 - val_accuracy: 0.8575\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0676 - accuracy: 0.9792 - val_loss: 0.9296 - val_accuracy: 0.8600\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0020 - accuracy: 0.9998 - val_loss: 0.8210 - val_accuracy: 0.8825\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0829 - accuracy: 0.9757 - val_loss: 0.8822 - val_accuracy: 0.8708\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0184 - accuracy: 0.9944 - val_loss: 0.7961 - val_accuracy: 0.8763\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0126 - accuracy: 0.9962 - val_loss: 0.9044 - val_accuracy: 0.8692\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0071 - accuracy: 0.9977 - val_loss: 0.9137 - val_accuracy: 0.8729\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0066 - accuracy: 0.9980 - val_loss: 0.9188 - val_accuracy: 0.8667\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0623 - accuracy: 0.9789 - val_loss: 1.0565 - val_accuracy: 0.8604\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0197 - accuracy: 0.9937 - val_loss: 1.0746 - val_accuracy: 0.8683\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0114 - accuracy: 0.9959 - val_loss: 1.0766 - val_accuracy: 0.8662\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0032 - accuracy: 0.9995 - val_loss: 0.9989 - val_accuracy: 0.8579\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0486 - accuracy: 0.9852 - val_loss: 0.9437 - val_accuracy: 0.8475\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0493 - accuracy: 0.9836 - val_loss: 0.9028 - val_accuracy: 0.8542\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0092 - accuracy: 0.9974 - val_loss: 0.9715 - val_accuracy: 0.8637\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0052 - accuracy: 0.9991 - val_loss: 1.0427 - val_accuracy: 0.8596\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0221 - accuracy: 0.9928 - val_loss: 1.0417 - val_accuracy: 0.8550\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0046 - accuracy: 0.9991 - val_loss: 0.8002 - val_accuracy: 0.8838\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0015 - accuracy: 1.0000 - val_loss: 0.8162 - val_accuracy: 0.8800\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0013 - accuracy: 1.0000 - val_loss: 0.8193 - val_accuracy: 0.8796\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0099 - accuracy: 0.9970 - val_loss: 0.9349 - val_accuracy: 0.8646\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0532 - accuracy: 0.9805 - val_loss: 0.9103 - val_accuracy: 0.8604\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0229 - accuracy: 0.9927 - val_loss: 0.9349 - val_accuracy: 0.8625\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0034 - accuracy: 0.9995 - val_loss: 1.0821 - val_accuracy: 0.8737\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0194 - accuracy: 0.9928 - val_loss: 1.0638 - val_accuracy: 0.8625\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0307 - accuracy: 0.9897 - val_loss: 1.1791 - val_accuracy: 0.8675\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0106 - accuracy: 0.9966 - val_loss: 0.9695 - val_accuracy: 0.8604\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0061 - accuracy: 0.9989 - val_loss: 0.9382 - val_accuracy: 0.8654\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0043 - accuracy: 0.9993 - val_loss: 0.9821 - val_accuracy: 0.8662\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0202 - accuracy: 0.9933 - val_loss: 0.9626 - val_accuracy: 0.8608\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0255 - accuracy: 0.9905 - val_loss: 1.0124 - val_accuracy: 0.8579\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0135 - accuracy: 0.9955 - val_loss: 0.9253 - val_accuracy: 0.8662\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0015 - accuracy: 1.0000 - val_loss: 0.8160 - val_accuracy: 0.8788\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0544 - accuracy: 0.9857 - val_loss: 0.8341 - val_accuracy: 0.8675\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0465 - accuracy: 0.9844 - val_loss: 0.9448 - val_accuracy: 0.8642\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0088 - accuracy: 0.9974 - val_loss: 0.9362 - val_accuracy: 0.8712\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0034 - accuracy: 0.9996 - val_loss: 0.9421 - val_accuracy: 0.8700\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0027 - accuracy: 0.9994 - val_loss: 0.9269 - val_accuracy: 0.8729\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0412 - accuracy: 0.9859 - val_loss: 1.0966 - val_accuracy: 0.8746\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0078 - accuracy: 0.9977 - val_loss: 1.1029 - val_accuracy: 0.8721\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0020 - accuracy: 1.0000 - val_loss: 1.0953 - val_accuracy: 0.8767\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0212 - accuracy: 0.9921 - val_loss: 1.0568 - val_accuracy: 0.8575\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0542 - accuracy: 0.9814 - val_loss: 1.0921 - val_accuracy: 0.8496\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0255 - accuracy: 0.9914 - val_loss: 0.9387 - val_accuracy: 0.8721\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0100 - accuracy: 0.9968 - val_loss: 0.9593 - val_accuracy: 0.8612\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0281 - accuracy: 0.9911 - val_loss: 1.0655 - val_accuracy: 0.8508\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0393 - accuracy: 0.9857 - val_loss: 1.0212 - val_accuracy: 0.8533\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0222 - accuracy: 0.9917 - val_loss: 0.8122 - val_accuracy: 0.8717\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0071 - accuracy: 0.9986 - val_loss: 0.7667 - val_accuracy: 0.8829\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0019 - accuracy: 1.0000 - val_loss: 0.7961 - val_accuracy: 0.8863\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0555 - accuracy: 0.9830 - val_loss: 1.0801 - val_accuracy: 0.8413\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0266 - accuracy: 0.9909 - val_loss: 0.9834 - val_accuracy: 0.8658\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0123 - accuracy: 0.9964 - val_loss: 1.0200 - val_accuracy: 0.8617\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0015 - accuracy: 1.0000 - val_loss: 1.1081 - val_accuracy: 0.8767\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0012 - accuracy: 1.0000 - val_loss: 1.1213 - val_accuracy: 0.8771\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0016 - accuracy: 0.9998 - val_loss: 1.1498 - val_accuracy: 0.8679\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0037 - accuracy: 0.9993 - val_loss: 0.9620 - val_accuracy: 0.8696\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0060 - accuracy: 0.9981 - val_loss: 0.9551 - val_accuracy: 0.8683\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0035 - accuracy: 0.9993 - val_loss: 0.9828 - val_accuracy: 0.8658\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0137 - accuracy: 0.9960 - val_loss: 0.9518 - val_accuracy: 0.8646\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0022 - accuracy: 0.9996 - val_loss: 0.9657 - val_accuracy: 0.8633\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0018 - accuracy: 0.9996 - val_loss: 0.9727 - val_accuracy: 0.8633\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0013 - accuracy: 1.0000 - val_loss: 0.8051 - val_accuracy: 0.8825\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0010 - accuracy: 1.0000 - val_loss: 0.8140 - val_accuracy: 0.8829\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0012 - accuracy: 1.0000 - val_loss: 0.8270 - val_accuracy: 0.8813\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0059 - accuracy: 0.9991 - val_loss: 0.9440 - val_accuracy: 0.8696\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0035 - accuracy: 0.9991 - val_loss: 0.9636 - val_accuracy: 0.8654\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0034 - accuracy: 0.9992 - val_loss: 0.9610 - val_accuracy: 0.8667\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0766 - accuracy: 0.9754 - val_loss: 1.1405 - val_accuracy: 0.8587\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0234 - accuracy: 0.9909 - val_loss: 1.1451 - val_accuracy: 0.8604\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0168 - accuracy: 0.9944 - val_loss: 1.1264 - val_accuracy: 0.8704\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0020 - accuracy: 0.9999 - val_loss: 0.9697 - val_accuracy: 0.8696\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0017 - accuracy: 1.0000 - val_loss: 0.9920 - val_accuracy: 0.8654\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0480 - accuracy: 0.9849 - val_loss: 1.0364 - val_accuracy: 0.8479\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0019 - accuracy: 0.9996 - val_loss: 1.1090 - val_accuracy: 0.8533\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0543 - accuracy: 0.9833 - val_loss: 1.0500 - val_accuracy: 0.8550\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0265 - accuracy: 0.9908 - val_loss: 0.9844 - val_accuracy: 0.8671\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 9.0607e-04 - accuracy: 1.0000 - val_loss: 0.8337 - val_accuracy: 0.8838\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 8.3500e-04 - accuracy: 1.0000 - val_loss: 0.8402 - val_accuracy: 0.8817\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 8.4028e-04 - accuracy: 1.0000 - val_loss: 0.8534 - val_accuracy: 0.8808\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 2s 5ms/step - loss: 0.0048 - accuracy: 0.9986 - val_loss: 0.9951 - val_accuracy: 0.8675\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 2s 6ms/step - loss: 0.0881 - accuracy: 0.9726 - val_loss: 0.9162 - val_accuracy: 0.8608\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0161 - accuracy: 0.9946 - val_loss: 0.9409 - val_accuracy: 0.8700\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0033 - accuracy: 0.9995 - val_loss: 1.1297 - val_accuracy: 0.8717\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0016 - accuracy: 1.0000 - val_loss: 1.1498 - val_accuracy: 0.8754\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0018 - accuracy: 0.9998 - val_loss: 1.1507 - val_accuracy: 0.8754\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0396 - accuracy: 0.9865 - val_loss: 1.1051 - val_accuracy: 0.8529\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0205 - accuracy: 0.9930 - val_loss: 0.9846 - val_accuracy: 0.8658\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0031 - accuracy: 0.9996 - val_loss: 0.9961 - val_accuracy: 0.8687\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 5ms/step - loss: 0.0061 - accuracy: 0.9983 - val_loss: 0.9741 - val_accuracy: 0.8642\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0017 - accuracy: 1.0000 - val_loss: 0.9911 - val_accuracy: 0.8654\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0015 - accuracy: 0.9998 - val_loss: 1.0096 - val_accuracy: 0.8654\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.1324 - accuracy: 0.9645 - val_loss: 0.8969 - val_accuracy: 0.8658\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0308 - accuracy: 0.9899 - val_loss: 0.8212 - val_accuracy: 0.8767\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0131 - accuracy: 0.9956 - val_loss: 0.8095 - val_accuracy: 0.8800\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0051 - accuracy: 0.9992 - val_loss: 0.9569 - val_accuracy: 0.8671\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0056 - accuracy: 0.9985 - val_loss: 0.9926 - val_accuracy: 0.8612\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 5ms/step - loss: 0.0133 - accuracy: 0.9955 - val_loss: 0.9599 - val_accuracy: 0.8696\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0011 - accuracy: 1.0000 - val_loss: 1.1646 - val_accuracy: 0.8725\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0012 - accuracy: 0.9999 - val_loss: 1.1890 - val_accuracy: 0.8725\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0978 - accuracy: 0.9714 - val_loss: 1.1106 - val_accuracy: 0.8567\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0022 - accuracy: 1.0000 - val_loss: 1.0227 - val_accuracy: 0.8617\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0112 - accuracy: 0.9972 - val_loss: 1.0422 - val_accuracy: 0.8617\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0296 - accuracy: 0.9907 - val_loss: 1.0002 - val_accuracy: 0.8621\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0027 - accuracy: 0.9991 - val_loss: 0.9998 - val_accuracy: 0.8617\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0728 - accuracy: 0.9774 - val_loss: 1.0047 - val_accuracy: 0.8533\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0249 - accuracy: 0.9912 - val_loss: 0.9932 - val_accuracy: 0.8608\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0082 - accuracy: 0.9984 - val_loss: 0.8307 - val_accuracy: 0.8821\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0084 - accuracy: 0.9973 - val_loss: 0.8377 - val_accuracy: 0.8788\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0160 - accuracy: 0.9948 - val_loss: 0.8538 - val_accuracy: 0.8796\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0435 - accuracy: 0.9864 - val_loss: 1.0274 - val_accuracy: 0.8667\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0121 - accuracy: 0.9962 - val_loss: 0.9569 - val_accuracy: 0.8667\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0036 - accuracy: 0.9995 - val_loss: 0.9679 - val_accuracy: 0.8650\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0126 - accuracy: 0.9969 - val_loss: 1.1239 - val_accuracy: 0.8658\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0036 - accuracy: 0.9994 - val_loss: 1.1084 - val_accuracy: 0.8700\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0015 - accuracy: 1.0000 - val_loss: 1.1366 - val_accuracy: 0.8700\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0285 - accuracy: 0.9900 - val_loss: 0.9717 - val_accuracy: 0.8679\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0193 - accuracy: 0.9933 - val_loss: 0.9998 - val_accuracy: 0.8612\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0093 - accuracy: 0.9973 - val_loss: 1.0270 - val_accuracy: 0.8642\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0050 - accuracy: 0.9989 - val_loss: 0.9834 - val_accuracy: 0.8625\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0019 - accuracy: 0.9999 - val_loss: 1.0000 - val_accuracy: 0.8612\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0014 - accuracy: 0.9999 - val_loss: 1.0103 - val_accuracy: 0.8654\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0071 - accuracy: 0.9984 - val_loss: 0.9906 - val_accuracy: 0.8642\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0134 - accuracy: 0.9958 - val_loss: 0.8673 - val_accuracy: 0.8821\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0078 - accuracy: 0.9974 - val_loss: 0.8520 - val_accuracy: 0.8758\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0238 - accuracy: 0.9917 - val_loss: 1.1562 - val_accuracy: 0.8521\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0319 - accuracy: 0.9900 - val_loss: 0.9413 - val_accuracy: 0.8704\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0028 - accuracy: 0.9998 - val_loss: 0.9624 - val_accuracy: 0.8712\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0015 - accuracy: 1.0000 - val_loss: 1.1384 - val_accuracy: 0.8708\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0010 - accuracy: 0.9999 - val_loss: 1.1602 - val_accuracy: 0.8725\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0018 - accuracy: 0.9999 - val_loss: 1.1668 - val_accuracy: 0.8700\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0099 - accuracy: 0.9968 - val_loss: 1.0087 - val_accuracy: 0.8637\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0037 - accuracy: 0.9991 - val_loss: 1.0039 - val_accuracy: 0.8650\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0055 - accuracy: 0.9986 - val_loss: 1.0241 - val_accuracy: 0.8596\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0014 - accuracy: 0.9999 - val_loss: 1.0476 - val_accuracy: 0.8600\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0420 - accuracy: 0.9867 - val_loss: 1.1594 - val_accuracy: 0.8492\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0393 - accuracy: 0.9862 - val_loss: 1.0533 - val_accuracy: 0.8558\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "mean = (a+b+c+d+e)/5\n",
        "\n",
        "model1.set_weights(mean) \n",
        "model2.set_weights(mean) \n",
        "model3.set_weights(mean) \n",
        "model4.set_weights(mean) \n",
        "model5.set_weights(mean)\n",
        "\n",
        "model1.evaluate(test_images, test_labels, verbose=2) \n",
        "model2.evaluate(test_images, test_labels, verbose=2) \n",
        "model3.evaluate(test_images, test_labels, verbose=2) \n",
        "model4.evaluate(test_images, test_labels, verbose=2) \n",
        "model5.evaluate(test_images, test_labels, verbose=2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "y_sUMV7Y1OF2",
        "outputId": "ee689dfa-a9df-4d76-a46c-05c8ce1be37c"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "313/313 - 1s - loss: 170.0711 - accuracy: 0.4666 - 834ms/epoch - 3ms/step\n",
            "313/313 - 1s - loss: 170.0711 - accuracy: 0.4666 - 658ms/epoch - 2ms/step\n",
            "313/313 - 1s - loss: 170.0711 - accuracy: 0.4666 - 672ms/epoch - 2ms/step\n",
            "313/313 - 1s - loss: 170.0711 - accuracy: 0.4666 - 624ms/epoch - 2ms/step\n",
            "313/313 - 1s - loss: 170.0711 - accuracy: 0.4666 - 635ms/epoch - 2ms/step\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[170.07110595703125, 0.4666000008583069]"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model1 = MODEL1() \n",
        "model2 = MODEL1() \n",
        "model3 = MODEL1() \n",
        "model4 = MODEL1() \n",
        "model5 = MODEL1()\n",
        "\n",
        "for i in range(50):\n",
        "  h1 = model1.fit(train1, y1,validation_split = 0.2, epochs=3, verbose=1) \n",
        "  h2 = model2.fit(train2, y2,validation_split = 0.2, epochs=3, verbose=1) \n",
        "  h3 = model3.fit(train3, y3,validation_split = 0.2, epochs=3, verbose=1) \n",
        "  h4 = model4.fit(train4, y4,validation_split = 0.2, epochs=3, verbose=1) \n",
        "  h5 = model5.fit(train5, y5,validation_split = 0.2, epochs=3, verbose=1)\n",
        "\n",
        "model1.evaluate(test_images, test_labels, verbose=2) \n",
        "model2.evaluate(test_images, test_labels, verbose=2) \n",
        "model3.evaluate(test_images, test_labels, verbose=2) \n",
        "model4.evaluate(test_images, test_labels, verbose=2) \n",
        "model5.evaluate(test_images, test_labels, verbose=2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dGxCExvk5nLY",
        "outputId": "cac986e6-fbc0-4715-ea04-dd7603432844"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/3\n",
            "300/300 [==============================] - 2s 4ms/step - loss: 0.7062 - accuracy: 0.7570 - val_loss: 0.5261 - val_accuracy: 0.8246\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.5103 - accuracy: 0.8207 - val_loss: 0.5009 - val_accuracy: 0.8313\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4344 - accuracy: 0.8491 - val_loss: 0.4758 - val_accuracy: 0.8342\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.7214 - accuracy: 0.7497 - val_loss: 0.5766 - val_accuracy: 0.8008\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.5045 - accuracy: 0.8156 - val_loss: 0.5250 - val_accuracy: 0.8183\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4439 - accuracy: 0.8398 - val_loss: 0.4801 - val_accuracy: 0.8258\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.7003 - accuracy: 0.7568 - val_loss: 0.5463 - val_accuracy: 0.8171\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4806 - accuracy: 0.8318 - val_loss: 0.5103 - val_accuracy: 0.8254\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4286 - accuracy: 0.8503 - val_loss: 0.4844 - val_accuracy: 0.8292\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.7224 - accuracy: 0.7532 - val_loss: 0.5374 - val_accuracy: 0.8075\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.5042 - accuracy: 0.8283 - val_loss: 0.4737 - val_accuracy: 0.8313\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4545 - accuracy: 0.8432 - val_loss: 0.4370 - val_accuracy: 0.8471\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.7185 - accuracy: 0.7526 - val_loss: 0.5188 - val_accuracy: 0.8112\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.5062 - accuracy: 0.8256 - val_loss: 0.4671 - val_accuracy: 0.8263\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4623 - accuracy: 0.8367 - val_loss: 0.4536 - val_accuracy: 0.8375\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4021 - accuracy: 0.8560 - val_loss: 0.4489 - val_accuracy: 0.8421\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3777 - accuracy: 0.8630 - val_loss: 0.4706 - val_accuracy: 0.8367\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3660 - accuracy: 0.8680 - val_loss: 0.4229 - val_accuracy: 0.8567\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4207 - accuracy: 0.8493 - val_loss: 0.4311 - val_accuracy: 0.8529\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3889 - accuracy: 0.8585 - val_loss: 0.4373 - val_accuracy: 0.8433\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3709 - accuracy: 0.8636 - val_loss: 0.4204 - val_accuracy: 0.8533\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3979 - accuracy: 0.8585 - val_loss: 0.4701 - val_accuracy: 0.8429\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3632 - accuracy: 0.8677 - val_loss: 0.4448 - val_accuracy: 0.8554\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3472 - accuracy: 0.8748 - val_loss: 0.4749 - val_accuracy: 0.8454\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4140 - accuracy: 0.8530 - val_loss: 0.4493 - val_accuracy: 0.8383\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3825 - accuracy: 0.8647 - val_loss: 0.4274 - val_accuracy: 0.8429\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3662 - accuracy: 0.8700 - val_loss: 0.4414 - val_accuracy: 0.8350\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.4211 - accuracy: 0.8519 - val_loss: 0.4353 - val_accuracy: 0.8400\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 2s 5ms/step - loss: 0.3885 - accuracy: 0.8617 - val_loss: 0.4121 - val_accuracy: 0.8546\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3663 - accuracy: 0.8684 - val_loss: 0.4408 - val_accuracy: 0.8329\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3385 - accuracy: 0.8789 - val_loss: 0.4041 - val_accuracy: 0.8554\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.3184 - accuracy: 0.8871 - val_loss: 0.4359 - val_accuracy: 0.8537\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.3013 - accuracy: 0.8910 - val_loss: 0.3813 - val_accuracy: 0.8696\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.3464 - accuracy: 0.8753 - val_loss: 0.4567 - val_accuracy: 0.8392\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 2s 5ms/step - loss: 0.3293 - accuracy: 0.8781 - val_loss: 0.4174 - val_accuracy: 0.8612\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3135 - accuracy: 0.8859 - val_loss: 0.4500 - val_accuracy: 0.8388\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 2s 5ms/step - loss: 0.3236 - accuracy: 0.8841 - val_loss: 0.4290 - val_accuracy: 0.8633\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3126 - accuracy: 0.8877 - val_loss: 0.4387 - val_accuracy: 0.8517\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.2966 - accuracy: 0.8920 - val_loss: 0.4208 - val_accuracy: 0.8608\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.3297 - accuracy: 0.8850 - val_loss: 0.3976 - val_accuracy: 0.8575\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 2s 5ms/step - loss: 0.3176 - accuracy: 0.8901 - val_loss: 0.4866 - val_accuracy: 0.8196\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3023 - accuracy: 0.8889 - val_loss: 0.3902 - val_accuracy: 0.8571\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.3505 - accuracy: 0.8743 - val_loss: 0.4230 - val_accuracy: 0.8388\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3265 - accuracy: 0.8808 - val_loss: 0.4263 - val_accuracy: 0.8483\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3130 - accuracy: 0.8871 - val_loss: 0.4105 - val_accuracy: 0.8546\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2800 - accuracy: 0.8978 - val_loss: 0.4242 - val_accuracy: 0.8517\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2670 - accuracy: 0.9015 - val_loss: 0.3929 - val_accuracy: 0.8625\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2667 - accuracy: 0.9014 - val_loss: 0.3770 - val_accuracy: 0.8633\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3005 - accuracy: 0.8873 - val_loss: 0.3884 - val_accuracy: 0.8687\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2885 - accuracy: 0.8950 - val_loss: 0.4353 - val_accuracy: 0.8504\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 2ms/step - loss: 0.2720 - accuracy: 0.8991 - val_loss: 0.4358 - val_accuracy: 0.8521\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2793 - accuracy: 0.8980 - val_loss: 0.4459 - val_accuracy: 0.8592\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2615 - accuracy: 0.9091 - val_loss: 0.4642 - val_accuracy: 0.8529\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2578 - accuracy: 0.9071 - val_loss: 0.4218 - val_accuracy: 0.8625\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2832 - accuracy: 0.8984 - val_loss: 0.4610 - val_accuracy: 0.8346\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2715 - accuracy: 0.9003 - val_loss: 0.4321 - val_accuracy: 0.8421\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2602 - accuracy: 0.9045 - val_loss: 0.3944 - val_accuracy: 0.8608\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.3038 - accuracy: 0.8908 - val_loss: 0.4227 - val_accuracy: 0.8475\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2839 - accuracy: 0.8974 - val_loss: 0.4015 - val_accuracy: 0.8483\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2743 - accuracy: 0.8976 - val_loss: 0.3981 - val_accuracy: 0.8579\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2389 - accuracy: 0.9132 - val_loss: 0.4028 - val_accuracy: 0.8604\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2372 - accuracy: 0.9169 - val_loss: 0.3848 - val_accuracy: 0.8658\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2285 - accuracy: 0.9201 - val_loss: 0.3804 - val_accuracy: 0.8662\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2539 - accuracy: 0.9043 - val_loss: 0.3796 - val_accuracy: 0.8729\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2528 - accuracy: 0.9035 - val_loss: 0.3892 - val_accuracy: 0.8662\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2398 - accuracy: 0.9114 - val_loss: 0.3827 - val_accuracy: 0.8729\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2435 - accuracy: 0.9129 - val_loss: 0.4787 - val_accuracy: 0.8500\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2341 - accuracy: 0.9162 - val_loss: 0.4759 - val_accuracy: 0.8487\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2232 - accuracy: 0.9168 - val_loss: 0.4693 - val_accuracy: 0.8679\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2470 - accuracy: 0.9133 - val_loss: 0.3848 - val_accuracy: 0.8679\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2425 - accuracy: 0.9128 - val_loss: 0.3912 - val_accuracy: 0.8575\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2259 - accuracy: 0.9204 - val_loss: 0.3934 - val_accuracy: 0.8667\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2659 - accuracy: 0.9035 - val_loss: 0.4649 - val_accuracy: 0.8429\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2527 - accuracy: 0.9095 - val_loss: 0.4060 - val_accuracy: 0.8612\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2395 - accuracy: 0.9106 - val_loss: 0.3985 - val_accuracy: 0.8596\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2253 - accuracy: 0.9180 - val_loss: 0.3812 - val_accuracy: 0.8704\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2072 - accuracy: 0.9239 - val_loss: 0.3870 - val_accuracy: 0.8696\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.2005 - accuracy: 0.9283 - val_loss: 0.3784 - val_accuracy: 0.8742\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2327 - accuracy: 0.9130 - val_loss: 0.4284 - val_accuracy: 0.8567\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2279 - accuracy: 0.9154 - val_loss: 0.4375 - val_accuracy: 0.8571\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2168 - accuracy: 0.9241 - val_loss: 0.3791 - val_accuracy: 0.8750\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2106 - accuracy: 0.9279 - val_loss: 0.4550 - val_accuracy: 0.8571\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2028 - accuracy: 0.9262 - val_loss: 0.4738 - val_accuracy: 0.8625\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 5ms/step - loss: 0.2023 - accuracy: 0.9300 - val_loss: 0.4760 - val_accuracy: 0.8592\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2214 - accuracy: 0.9198 - val_loss: 0.3935 - val_accuracy: 0.8637\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2071 - accuracy: 0.9236 - val_loss: 0.3885 - val_accuracy: 0.8683\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1993 - accuracy: 0.9296 - val_loss: 0.3802 - val_accuracy: 0.8692\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2336 - accuracy: 0.9147 - val_loss: 0.4115 - val_accuracy: 0.8562\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2290 - accuracy: 0.9172 - val_loss: 0.4041 - val_accuracy: 0.8612\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2194 - accuracy: 0.9201 - val_loss: 0.4142 - val_accuracy: 0.8583\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1940 - accuracy: 0.9294 - val_loss: 0.3878 - val_accuracy: 0.8658\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1836 - accuracy: 0.9339 - val_loss: 0.3747 - val_accuracy: 0.8750\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1748 - accuracy: 0.9356 - val_loss: 0.4236 - val_accuracy: 0.8646\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2070 - accuracy: 0.9249 - val_loss: 0.3835 - val_accuracy: 0.8775\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.2014 - accuracy: 0.9290 - val_loss: 0.4208 - val_accuracy: 0.8692\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1921 - accuracy: 0.9311 - val_loss: 0.4176 - val_accuracy: 0.8650\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1916 - accuracy: 0.9326 - val_loss: 0.4763 - val_accuracy: 0.8525\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1819 - accuracy: 0.9355 - val_loss: 0.4875 - val_accuracy: 0.8575\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1723 - accuracy: 0.9376 - val_loss: 0.4711 - val_accuracy: 0.8592\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.1933 - accuracy: 0.9306 - val_loss: 0.3944 - val_accuracy: 0.8642\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1870 - accuracy: 0.9327 - val_loss: 0.4081 - val_accuracy: 0.8621\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1762 - accuracy: 0.9384 - val_loss: 0.4185 - val_accuracy: 0.8562\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 5ms/step - loss: 0.2092 - accuracy: 0.9219 - val_loss: 0.4215 - val_accuracy: 0.8550\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1976 - accuracy: 0.9286 - val_loss: 0.4579 - val_accuracy: 0.8625\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 5ms/step - loss: 0.1940 - accuracy: 0.9324 - val_loss: 0.4252 - val_accuracy: 0.8571\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1743 - accuracy: 0.9376 - val_loss: 0.3812 - val_accuracy: 0.8733\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1657 - accuracy: 0.9402 - val_loss: 0.4156 - val_accuracy: 0.8658\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1569 - accuracy: 0.9444 - val_loss: 0.4262 - val_accuracy: 0.8621\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 5ms/step - loss: 0.1817 - accuracy: 0.9343 - val_loss: 0.4812 - val_accuracy: 0.8396\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1810 - accuracy: 0.9335 - val_loss: 0.4158 - val_accuracy: 0.8608\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1692 - accuracy: 0.9378 - val_loss: 0.4182 - val_accuracy: 0.8800\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1663 - accuracy: 0.9415 - val_loss: 0.4594 - val_accuracy: 0.8637\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1598 - accuracy: 0.9439 - val_loss: 0.4772 - val_accuracy: 0.8592\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1570 - accuracy: 0.9444 - val_loss: 0.4873 - val_accuracy: 0.8658\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.1653 - accuracy: 0.9432 - val_loss: 0.4129 - val_accuracy: 0.8629\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.1611 - accuracy: 0.9423 - val_loss: 0.3995 - val_accuracy: 0.8675\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1572 - accuracy: 0.9435 - val_loss: 0.4223 - val_accuracy: 0.8679\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1854 - accuracy: 0.9340 - val_loss: 0.4128 - val_accuracy: 0.8617\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1801 - accuracy: 0.9329 - val_loss: 0.4445 - val_accuracy: 0.8600\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1748 - accuracy: 0.9339 - val_loss: 0.4493 - val_accuracy: 0.8600\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1519 - accuracy: 0.9459 - val_loss: 0.4068 - val_accuracy: 0.8725\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1417 - accuracy: 0.9473 - val_loss: 0.4229 - val_accuracy: 0.8662\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1439 - accuracy: 0.9522 - val_loss: 0.3858 - val_accuracy: 0.8767\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1642 - accuracy: 0.9419 - val_loss: 0.4450 - val_accuracy: 0.8600\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1653 - accuracy: 0.9383 - val_loss: 0.4633 - val_accuracy: 0.8554\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1638 - accuracy: 0.9402 - val_loss: 0.4501 - val_accuracy: 0.8650\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1434 - accuracy: 0.9502 - val_loss: 0.4781 - val_accuracy: 0.8721\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1405 - accuracy: 0.9502 - val_loss: 0.4964 - val_accuracy: 0.8650\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1412 - accuracy: 0.9518 - val_loss: 0.5357 - val_accuracy: 0.8633\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1503 - accuracy: 0.9484 - val_loss: 0.4422 - val_accuracy: 0.8571\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1440 - accuracy: 0.9490 - val_loss: 0.4228 - val_accuracy: 0.8608\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1405 - accuracy: 0.9500 - val_loss: 0.4849 - val_accuracy: 0.8500\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1705 - accuracy: 0.9374 - val_loss: 0.4515 - val_accuracy: 0.8529\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1576 - accuracy: 0.9459 - val_loss: 0.4399 - val_accuracy: 0.8667\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 2s 5ms/step - loss: 0.1568 - accuracy: 0.9421 - val_loss: 0.4505 - val_accuracy: 0.8592\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.1463 - accuracy: 0.9474 - val_loss: 0.4318 - val_accuracy: 0.8700\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 5ms/step - loss: 0.1310 - accuracy: 0.9536 - val_loss: 0.4697 - val_accuracy: 0.8629\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 2s 6ms/step - loss: 0.1279 - accuracy: 0.9560 - val_loss: 0.4137 - val_accuracy: 0.8729\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 2s 6ms/step - loss: 0.1494 - accuracy: 0.9452 - val_loss: 0.4386 - val_accuracy: 0.8646\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 2s 6ms/step - loss: 0.1470 - accuracy: 0.9459 - val_loss: 0.4370 - val_accuracy: 0.8596\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1365 - accuracy: 0.9511 - val_loss: 0.4574 - val_accuracy: 0.8654\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1318 - accuracy: 0.9550 - val_loss: 0.5137 - val_accuracy: 0.8554\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1194 - accuracy: 0.9594 - val_loss: 0.5388 - val_accuracy: 0.8542\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 5ms/step - loss: 0.1222 - accuracy: 0.9540 - val_loss: 0.5446 - val_accuracy: 0.8550\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.1324 - accuracy: 0.9516 - val_loss: 0.4306 - val_accuracy: 0.8612\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 2s 6ms/step - loss: 0.1254 - accuracy: 0.9578 - val_loss: 0.4630 - val_accuracy: 0.8571\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 2s 6ms/step - loss: 0.1255 - accuracy: 0.9558 - val_loss: 0.5127 - val_accuracy: 0.8604\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 2s 5ms/step - loss: 0.1469 - accuracy: 0.9464 - val_loss: 0.4711 - val_accuracy: 0.8517\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.1477 - accuracy: 0.9459 - val_loss: 0.4637 - val_accuracy: 0.8617\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.1409 - accuracy: 0.9483 - val_loss: 0.4868 - val_accuracy: 0.8617\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1226 - accuracy: 0.9565 - val_loss: 0.4612 - val_accuracy: 0.8721\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1146 - accuracy: 0.9592 - val_loss: 0.4519 - val_accuracy: 0.8696\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 5ms/step - loss: 0.1159 - accuracy: 0.9585 - val_loss: 0.4399 - val_accuracy: 0.8725\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.1302 - accuracy: 0.9541 - val_loss: 0.4550 - val_accuracy: 0.8763\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1262 - accuracy: 0.9561 - val_loss: 0.4509 - val_accuracy: 0.8717\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1213 - accuracy: 0.9570 - val_loss: 0.4403 - val_accuracy: 0.8763\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.1257 - accuracy: 0.9550 - val_loss: 0.5441 - val_accuracy: 0.8587\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1131 - accuracy: 0.9599 - val_loss: 0.5425 - val_accuracy: 0.8642\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1013 - accuracy: 0.9644 - val_loss: 0.5403 - val_accuracy: 0.8587\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 2s 5ms/step - loss: 0.1213 - accuracy: 0.9569 - val_loss: 0.4876 - val_accuracy: 0.8596\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1191 - accuracy: 0.9569 - val_loss: 0.5061 - val_accuracy: 0.8617\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.1150 - accuracy: 0.9607 - val_loss: 0.4933 - val_accuracy: 0.8617\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.1341 - accuracy: 0.9523 - val_loss: 0.4941 - val_accuracy: 0.8596\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1312 - accuracy: 0.9544 - val_loss: 0.4708 - val_accuracy: 0.8625\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1204 - accuracy: 0.9559 - val_loss: 0.4894 - val_accuracy: 0.8612\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.1082 - accuracy: 0.9621 - val_loss: 0.5285 - val_accuracy: 0.8558\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1119 - accuracy: 0.9595 - val_loss: 0.4188 - val_accuracy: 0.8783\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0994 - accuracy: 0.9680 - val_loss: 0.4535 - val_accuracy: 0.8667\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 2s 8ms/step - loss: 0.1268 - accuracy: 0.9550 - val_loss: 0.4560 - val_accuracy: 0.8754\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 2s 5ms/step - loss: 0.1118 - accuracy: 0.9590 - val_loss: 0.4810 - val_accuracy: 0.8654\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1127 - accuracy: 0.9615 - val_loss: 0.4846 - val_accuracy: 0.8667\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 2s 6ms/step - loss: 0.1115 - accuracy: 0.9606 - val_loss: 0.6250 - val_accuracy: 0.8496\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1078 - accuracy: 0.9606 - val_loss: 0.5845 - val_accuracy: 0.8529\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0950 - accuracy: 0.9656 - val_loss: 0.5815 - val_accuracy: 0.8500\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1051 - accuracy: 0.9652 - val_loss: 0.4757 - val_accuracy: 0.8633\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1123 - accuracy: 0.9598 - val_loss: 0.4632 - val_accuracy: 0.8646\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1032 - accuracy: 0.9638 - val_loss: 0.4660 - val_accuracy: 0.8696\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.1211 - accuracy: 0.9555 - val_loss: 0.4854 - val_accuracy: 0.8608\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1084 - accuracy: 0.9607 - val_loss: 0.4794 - val_accuracy: 0.8642\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1167 - accuracy: 0.9580 - val_loss: 0.4871 - val_accuracy: 0.8562\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0918 - accuracy: 0.9693 - val_loss: 0.4900 - val_accuracy: 0.8637\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0959 - accuracy: 0.9684 - val_loss: 0.5002 - val_accuracy: 0.8604\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0991 - accuracy: 0.9644 - val_loss: 0.4706 - val_accuracy: 0.8746\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1074 - accuracy: 0.9600 - val_loss: 0.4834 - val_accuracy: 0.8721\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1099 - accuracy: 0.9618 - val_loss: 0.5092 - val_accuracy: 0.8579\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0981 - accuracy: 0.9665 - val_loss: 0.4930 - val_accuracy: 0.8729\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 5ms/step - loss: 0.0976 - accuracy: 0.9651 - val_loss: 0.5716 - val_accuracy: 0.8629\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 2s 6ms/step - loss: 0.0851 - accuracy: 0.9709 - val_loss: 0.5945 - val_accuracy: 0.8592\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0957 - accuracy: 0.9670 - val_loss: 0.5748 - val_accuracy: 0.8604\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0941 - accuracy: 0.9674 - val_loss: 0.4844 - val_accuracy: 0.8692\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0911 - accuracy: 0.9679 - val_loss: 0.4951 - val_accuracy: 0.8629\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0914 - accuracy: 0.9694 - val_loss: 0.4692 - val_accuracy: 0.8679\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1024 - accuracy: 0.9640 - val_loss: 0.5677 - val_accuracy: 0.8533\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1050 - accuracy: 0.9621 - val_loss: 0.5661 - val_accuracy: 0.8521\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.1111 - accuracy: 0.9595 - val_loss: 0.5646 - val_accuracy: 0.8562\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0898 - accuracy: 0.9695 - val_loss: 0.4725 - val_accuracy: 0.8687\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0913 - accuracy: 0.9675 - val_loss: 0.5438 - val_accuracy: 0.8683\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0833 - accuracy: 0.9708 - val_loss: 0.4618 - val_accuracy: 0.8750\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0991 - accuracy: 0.9681 - val_loss: 0.4884 - val_accuracy: 0.8779\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0885 - accuracy: 0.9694 - val_loss: 0.5021 - val_accuracy: 0.8671\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0921 - accuracy: 0.9680 - val_loss: 0.5204 - val_accuracy: 0.8683\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0878 - accuracy: 0.9707 - val_loss: 0.6240 - val_accuracy: 0.8525\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 5ms/step - loss: 0.0897 - accuracy: 0.9670 - val_loss: 0.6042 - val_accuracy: 0.8621\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 2s 7ms/step - loss: 0.0712 - accuracy: 0.9772 - val_loss: 0.6296 - val_accuracy: 0.8546\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 5ms/step - loss: 0.0893 - accuracy: 0.9701 - val_loss: 0.4862 - val_accuracy: 0.8671\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0825 - accuracy: 0.9721 - val_loss: 0.4766 - val_accuracy: 0.8721\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 2s 6ms/step - loss: 0.0828 - accuracy: 0.9715 - val_loss: 0.5065 - val_accuracy: 0.8692\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0992 - accuracy: 0.9655 - val_loss: 0.5482 - val_accuracy: 0.8546\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0904 - accuracy: 0.9697 - val_loss: 0.5443 - val_accuracy: 0.8642\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0901 - accuracy: 0.9666 - val_loss: 0.5491 - val_accuracy: 0.8550\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0826 - accuracy: 0.9725 - val_loss: 0.5722 - val_accuracy: 0.8696\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0749 - accuracy: 0.9747 - val_loss: 0.4957 - val_accuracy: 0.8696\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0767 - accuracy: 0.9720 - val_loss: 0.5455 - val_accuracy: 0.8612\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 2s 5ms/step - loss: 0.0929 - accuracy: 0.9657 - val_loss: 0.5008 - val_accuracy: 0.8763\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0859 - accuracy: 0.9695 - val_loss: 0.5442 - val_accuracy: 0.8667\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 2s 6ms/step - loss: 0.0818 - accuracy: 0.9723 - val_loss: 0.5257 - val_accuracy: 0.8679\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 2s 6ms/step - loss: 0.0720 - accuracy: 0.9753 - val_loss: 0.6690 - val_accuracy: 0.8579\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0730 - accuracy: 0.9734 - val_loss: 0.6718 - val_accuracy: 0.8550\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0711 - accuracy: 0.9760 - val_loss: 0.7066 - val_accuracy: 0.8408\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0737 - accuracy: 0.9748 - val_loss: 0.6169 - val_accuracy: 0.8554\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0788 - accuracy: 0.9718 - val_loss: 0.5293 - val_accuracy: 0.8658\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0712 - accuracy: 0.9757 - val_loss: 0.5413 - val_accuracy: 0.8675\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 2s 5ms/step - loss: 0.0887 - accuracy: 0.9678 - val_loss: 0.5891 - val_accuracy: 0.8617\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0820 - accuracy: 0.9712 - val_loss: 0.5722 - val_accuracy: 0.8596\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0814 - accuracy: 0.9708 - val_loss: 0.6005 - val_accuracy: 0.8483\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0688 - accuracy: 0.9772 - val_loss: 0.5073 - val_accuracy: 0.8758\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0674 - accuracy: 0.9777 - val_loss: 0.5060 - val_accuracy: 0.8683\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0639 - accuracy: 0.9807 - val_loss: 0.5170 - val_accuracy: 0.8700\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0751 - accuracy: 0.9733 - val_loss: 0.5044 - val_accuracy: 0.8692\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0820 - accuracy: 0.9721 - val_loss: 0.5851 - val_accuracy: 0.8558\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 5ms/step - loss: 0.0772 - accuracy: 0.9729 - val_loss: 0.5738 - val_accuracy: 0.8692\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 2s 5ms/step - loss: 0.0672 - accuracy: 0.9783 - val_loss: 0.6265 - val_accuracy: 0.8571\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0722 - accuracy: 0.9744 - val_loss: 0.6365 - val_accuracy: 0.8579\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0600 - accuracy: 0.9810 - val_loss: 0.6938 - val_accuracy: 0.8533\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0665 - accuracy: 0.9791 - val_loss: 0.5980 - val_accuracy: 0.8587\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0723 - accuracy: 0.9748 - val_loss: 0.5528 - val_accuracy: 0.8679\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0701 - accuracy: 0.9758 - val_loss: 0.5513 - val_accuracy: 0.8625\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0730 - accuracy: 0.9756 - val_loss: 0.5779 - val_accuracy: 0.8546\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0768 - accuracy: 0.9708 - val_loss: 0.6472 - val_accuracy: 0.8529\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0851 - accuracy: 0.9694 - val_loss: 0.6305 - val_accuracy: 0.8438\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0637 - accuracy: 0.9785 - val_loss: 0.5068 - val_accuracy: 0.8725\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0683 - accuracy: 0.9751 - val_loss: 0.5220 - val_accuracy: 0.8704\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0610 - accuracy: 0.9782 - val_loss: 0.5384 - val_accuracy: 0.8662\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0712 - accuracy: 0.9736 - val_loss: 0.6032 - val_accuracy: 0.8575\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 2s 5ms/step - loss: 0.0619 - accuracy: 0.9817 - val_loss: 0.5165 - val_accuracy: 0.8737\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 5ms/step - loss: 0.0887 - accuracy: 0.9666 - val_loss: 0.5946 - val_accuracy: 0.8658\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 2s 7ms/step - loss: 0.0710 - accuracy: 0.9755 - val_loss: 0.6448 - val_accuracy: 0.8562\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 2s 8ms/step - loss: 0.0598 - accuracy: 0.9800 - val_loss: 0.7124 - val_accuracy: 0.8533\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0623 - accuracy: 0.9776 - val_loss: 0.6555 - val_accuracy: 0.8633\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0625 - accuracy: 0.9764 - val_loss: 0.5524 - val_accuracy: 0.8596\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0654 - accuracy: 0.9779 - val_loss: 0.6136 - val_accuracy: 0.8575\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0658 - accuracy: 0.9775 - val_loss: 0.5758 - val_accuracy: 0.8625\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0733 - accuracy: 0.9742 - val_loss: 0.5964 - val_accuracy: 0.8571\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0606 - accuracy: 0.9792 - val_loss: 0.6561 - val_accuracy: 0.8533\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0803 - accuracy: 0.9715 - val_loss: 0.6160 - val_accuracy: 0.8504\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0629 - accuracy: 0.9787 - val_loss: 0.5347 - val_accuracy: 0.8696\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0580 - accuracy: 0.9802 - val_loss: 0.5571 - val_accuracy: 0.8733\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0572 - accuracy: 0.9807 - val_loss: 0.6004 - val_accuracy: 0.8575\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0731 - accuracy: 0.9750 - val_loss: 0.5752 - val_accuracy: 0.8671\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0632 - accuracy: 0.9776 - val_loss: 0.5819 - val_accuracy: 0.8658\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0593 - accuracy: 0.9796 - val_loss: 0.5591 - val_accuracy: 0.8696\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0520 - accuracy: 0.9835 - val_loss: 0.6495 - val_accuracy: 0.8633\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0653 - accuracy: 0.9782 - val_loss: 0.6859 - val_accuracy: 0.8546\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0581 - accuracy: 0.9810 - val_loss: 0.6933 - val_accuracy: 0.8633\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 2s 6ms/step - loss: 0.0489 - accuracy: 0.9835 - val_loss: 0.5660 - val_accuracy: 0.8667\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0629 - accuracy: 0.9780 - val_loss: 0.6055 - val_accuracy: 0.8587\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0561 - accuracy: 0.9804 - val_loss: 0.7449 - val_accuracy: 0.8400\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0566 - accuracy: 0.9820 - val_loss: 0.6179 - val_accuracy: 0.8558\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0558 - accuracy: 0.9814 - val_loss: 0.6253 - val_accuracy: 0.8525\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0595 - accuracy: 0.9795 - val_loss: 0.6390 - val_accuracy: 0.8562\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0501 - accuracy: 0.9831 - val_loss: 0.5538 - val_accuracy: 0.8754\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0587 - accuracy: 0.9792 - val_loss: 0.5890 - val_accuracy: 0.8746\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0529 - accuracy: 0.9815 - val_loss: 0.6402 - val_accuracy: 0.8567\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0505 - accuracy: 0.9840 - val_loss: 0.5978 - val_accuracy: 0.8612\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0578 - accuracy: 0.9784 - val_loss: 0.6294 - val_accuracy: 0.8600\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0635 - accuracy: 0.9774 - val_loss: 0.5976 - val_accuracy: 0.8708\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0463 - accuracy: 0.9853 - val_loss: 0.7115 - val_accuracy: 0.8637\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0552 - accuracy: 0.9820 - val_loss: 0.6964 - val_accuracy: 0.8583\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0663 - accuracy: 0.9772 - val_loss: 0.7336 - val_accuracy: 0.8554\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0572 - accuracy: 0.9801 - val_loss: 0.5947 - val_accuracy: 0.8617\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0557 - accuracy: 0.9812 - val_loss: 0.6060 - val_accuracy: 0.8625\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0582 - accuracy: 0.9803 - val_loss: 0.6147 - val_accuracy: 0.8571\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0692 - accuracy: 0.9772 - val_loss: 0.6293 - val_accuracy: 0.8575\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0506 - accuracy: 0.9827 - val_loss: 0.7054 - val_accuracy: 0.8546\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0750 - accuracy: 0.9735 - val_loss: 0.6845 - val_accuracy: 0.8454\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0630 - accuracy: 0.9762 - val_loss: 0.5877 - val_accuracy: 0.8675\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0508 - accuracy: 0.9819 - val_loss: 0.5555 - val_accuracy: 0.8750\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0411 - accuracy: 0.9857 - val_loss: 0.5814 - val_accuracy: 0.8683\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0599 - accuracy: 0.9796 - val_loss: 0.5908 - val_accuracy: 0.8600\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0490 - accuracy: 0.9832 - val_loss: 0.6301 - val_accuracy: 0.8646\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0454 - accuracy: 0.9847 - val_loss: 0.6173 - val_accuracy: 0.8621\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0475 - accuracy: 0.9833 - val_loss: 0.7617 - val_accuracy: 0.8546\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0511 - accuracy: 0.9831 - val_loss: 0.7590 - val_accuracy: 0.8592\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0480 - accuracy: 0.9837 - val_loss: 0.7077 - val_accuracy: 0.8629\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0464 - accuracy: 0.9846 - val_loss: 0.6128 - val_accuracy: 0.8667\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0507 - accuracy: 0.9821 - val_loss: 0.6539 - val_accuracy: 0.8567\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0617 - accuracy: 0.9779 - val_loss: 0.6509 - val_accuracy: 0.8583\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0566 - accuracy: 0.9797 - val_loss: 0.6621 - val_accuracy: 0.8608\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0489 - accuracy: 0.9832 - val_loss: 0.6949 - val_accuracy: 0.8512\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0472 - accuracy: 0.9842 - val_loss: 0.7363 - val_accuracy: 0.8575\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0471 - accuracy: 0.9835 - val_loss: 0.5851 - val_accuracy: 0.8692\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0398 - accuracy: 0.9878 - val_loss: 0.6136 - val_accuracy: 0.8687\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 5ms/step - loss: 0.0394 - accuracy: 0.9867 - val_loss: 0.6110 - val_accuracy: 0.8717\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0446 - accuracy: 0.9859 - val_loss: 0.6162 - val_accuracy: 0.8737\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0432 - accuracy: 0.9867 - val_loss: 0.6615 - val_accuracy: 0.8583\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0601 - accuracy: 0.9773 - val_loss: 0.6432 - val_accuracy: 0.8687\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0379 - accuracy: 0.9873 - val_loss: 0.7438 - val_accuracy: 0.8587\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0415 - accuracy: 0.9856 - val_loss: 0.7333 - val_accuracy: 0.8621\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0434 - accuracy: 0.9845 - val_loss: 0.7579 - val_accuracy: 0.8642\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0461 - accuracy: 0.9842 - val_loss: 0.6145 - val_accuracy: 0.8667\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0393 - accuracy: 0.9874 - val_loss: 0.6379 - val_accuracy: 0.8650\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0363 - accuracy: 0.9886 - val_loss: 0.6780 - val_accuracy: 0.8654\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0469 - accuracy: 0.9845 - val_loss: 0.7206 - val_accuracy: 0.8458\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0517 - accuracy: 0.9843 - val_loss: 0.7380 - val_accuracy: 0.8408\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0570 - accuracy: 0.9798 - val_loss: 0.7132 - val_accuracy: 0.8562\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0418 - accuracy: 0.9864 - val_loss: 0.6393 - val_accuracy: 0.8608\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0340 - accuracy: 0.9893 - val_loss: 0.6002 - val_accuracy: 0.8700\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0402 - accuracy: 0.9856 - val_loss: 0.5798 - val_accuracy: 0.8717\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0404 - accuracy: 0.9876 - val_loss: 0.6785 - val_accuracy: 0.8646\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0481 - accuracy: 0.9844 - val_loss: 0.6476 - val_accuracy: 0.8658\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0510 - accuracy: 0.9827 - val_loss: 0.6471 - val_accuracy: 0.8654\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0386 - accuracy: 0.9873 - val_loss: 0.7829 - val_accuracy: 0.8562\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0390 - accuracy: 0.9878 - val_loss: 0.7562 - val_accuracy: 0.8612\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0454 - accuracy: 0.9832 - val_loss: 0.7884 - val_accuracy: 0.8542\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0464 - accuracy: 0.9834 - val_loss: 0.6442 - val_accuracy: 0.8658\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0336 - accuracy: 0.9904 - val_loss: 0.7107 - val_accuracy: 0.8604\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0493 - accuracy: 0.9829 - val_loss: 0.6955 - val_accuracy: 0.8529\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0419 - accuracy: 0.9843 - val_loss: 0.8088 - val_accuracy: 0.8425\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0389 - accuracy: 0.9876 - val_loss: 0.7186 - val_accuracy: 0.8537\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0532 - accuracy: 0.9815 - val_loss: 0.7033 - val_accuracy: 0.8504\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0314 - accuracy: 0.9911 - val_loss: 0.6380 - val_accuracy: 0.8654\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0411 - accuracy: 0.9870 - val_loss: 0.6882 - val_accuracy: 0.8617\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0422 - accuracy: 0.9861 - val_loss: 0.6586 - val_accuracy: 0.8650\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0379 - accuracy: 0.9895 - val_loss: 0.6501 - val_accuracy: 0.8642\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0384 - accuracy: 0.9885 - val_loss: 0.6441 - val_accuracy: 0.8708\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0386 - accuracy: 0.9876 - val_loss: 0.6619 - val_accuracy: 0.8700\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0456 - accuracy: 0.9847 - val_loss: 0.8076 - val_accuracy: 0.8571\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0322 - accuracy: 0.9911 - val_loss: 0.8282 - val_accuracy: 0.8592\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0322 - accuracy: 0.9891 - val_loss: 0.8137 - val_accuracy: 0.8592\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0396 - accuracy: 0.9873 - val_loss: 0.6505 - val_accuracy: 0.8642\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0391 - accuracy: 0.9844 - val_loss: 0.7023 - val_accuracy: 0.8621\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0393 - accuracy: 0.9867 - val_loss: 0.6751 - val_accuracy: 0.8683\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0431 - accuracy: 0.9858 - val_loss: 0.6924 - val_accuracy: 0.8529\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0377 - accuracy: 0.9861 - val_loss: 0.7124 - val_accuracy: 0.8546\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0445 - accuracy: 0.9848 - val_loss: 0.7960 - val_accuracy: 0.8596\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0401 - accuracy: 0.9868 - val_loss: 0.6238 - val_accuracy: 0.8696\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0503 - accuracy: 0.9840 - val_loss: 0.7028 - val_accuracy: 0.8567\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0329 - accuracy: 0.9896 - val_loss: 0.6744 - val_accuracy: 0.8667\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0519 - accuracy: 0.9834 - val_loss: 0.6463 - val_accuracy: 0.8612\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0362 - accuracy: 0.9889 - val_loss: 0.7588 - val_accuracy: 0.8542\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0452 - accuracy: 0.9853 - val_loss: 0.6750 - val_accuracy: 0.8737\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0468 - accuracy: 0.9854 - val_loss: 0.7628 - val_accuracy: 0.8596\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0420 - accuracy: 0.9859 - val_loss: 0.8106 - val_accuracy: 0.8642\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0260 - accuracy: 0.9922 - val_loss: 0.8106 - val_accuracy: 0.8575\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0398 - accuracy: 0.9848 - val_loss: 0.7315 - val_accuracy: 0.8529\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0337 - accuracy: 0.9886 - val_loss: 0.7197 - val_accuracy: 0.8617\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0416 - accuracy: 0.9860 - val_loss: 0.6947 - val_accuracy: 0.8658\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0321 - accuracy: 0.9896 - val_loss: 0.7627 - val_accuracy: 0.8567\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0493 - accuracy: 0.9821 - val_loss: 0.7810 - val_accuracy: 0.8550\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0555 - accuracy: 0.9817 - val_loss: 0.7516 - val_accuracy: 0.8583\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0476 - accuracy: 0.9827 - val_loss: 0.6655 - val_accuracy: 0.8675\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0208 - accuracy: 0.9940 - val_loss: 0.6482 - val_accuracy: 0.8771\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0224 - accuracy: 0.9934 - val_loss: 0.6843 - val_accuracy: 0.8700\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0312 - accuracy: 0.9901 - val_loss: 0.6977 - val_accuracy: 0.8596\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0392 - accuracy: 0.9851 - val_loss: 0.7300 - val_accuracy: 0.8633\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0389 - accuracy: 0.9870 - val_loss: 0.6929 - val_accuracy: 0.8646\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0359 - accuracy: 0.9876 - val_loss: 0.7984 - val_accuracy: 0.8629\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0348 - accuracy: 0.9878 - val_loss: 0.8615 - val_accuracy: 0.8592\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0320 - accuracy: 0.9892 - val_loss: 0.8478 - val_accuracy: 0.8537\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0363 - accuracy: 0.9876 - val_loss: 0.7136 - val_accuracy: 0.8687\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0272 - accuracy: 0.9919 - val_loss: 0.7103 - val_accuracy: 0.8671\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0327 - accuracy: 0.9891 - val_loss: 0.8030 - val_accuracy: 0.8546\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0299 - accuracy: 0.9922 - val_loss: 0.7287 - val_accuracy: 0.8554\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0368 - accuracy: 0.9890 - val_loss: 0.7531 - val_accuracy: 0.8575\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0256 - accuracy: 0.9922 - val_loss: 0.7560 - val_accuracy: 0.8554\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0367 - accuracy: 0.9875 - val_loss: 0.8631 - val_accuracy: 0.8517\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0548 - accuracy: 0.9822 - val_loss: 0.7135 - val_accuracy: 0.8646\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0187 - accuracy: 0.9962 - val_loss: 0.6505 - val_accuracy: 0.8704\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0318 - accuracy: 0.9909 - val_loss: 0.6564 - val_accuracy: 0.8675\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0235 - accuracy: 0.9935 - val_loss: 0.7576 - val_accuracy: 0.8562\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0502 - accuracy: 0.9818 - val_loss: 0.6737 - val_accuracy: 0.8646\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0271 - accuracy: 0.9910 - val_loss: 0.8245 - val_accuracy: 0.8533\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0235 - accuracy: 0.9932 - val_loss: 0.8670 - val_accuracy: 0.8583\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0339 - accuracy: 0.9875 - val_loss: 0.8560 - val_accuracy: 0.8621\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0295 - accuracy: 0.9898 - val_loss: 0.7164 - val_accuracy: 0.8654\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0278 - accuracy: 0.9910 - val_loss: 0.8521 - val_accuracy: 0.8533\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0504 - accuracy: 0.9823 - val_loss: 0.8095 - val_accuracy: 0.8579\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0547 - accuracy: 0.9817 - val_loss: 0.7164 - val_accuracy: 0.8571\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0395 - accuracy: 0.9877 - val_loss: 0.8314 - val_accuracy: 0.8512\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0268 - accuracy: 0.9915 - val_loss: 0.7676 - val_accuracy: 0.8525\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0212 - accuracy: 0.9933 - val_loss: 0.7688 - val_accuracy: 0.8567\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0541 - accuracy: 0.9814 - val_loss: 0.7029 - val_accuracy: 0.8733\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0304 - accuracy: 0.9907 - val_loss: 0.6927 - val_accuracy: 0.8767\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0359 - accuracy: 0.9883 - val_loss: 0.7451 - val_accuracy: 0.8596\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0200 - accuracy: 0.9940 - val_loss: 0.7668 - val_accuracy: 0.8562\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0309 - accuracy: 0.9908 - val_loss: 0.7164 - val_accuracy: 0.8596\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0297 - accuracy: 0.9900 - val_loss: 0.8709 - val_accuracy: 0.8617\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0413 - accuracy: 0.9851 - val_loss: 0.8466 - val_accuracy: 0.8617\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0155 - accuracy: 0.9957 - val_loss: 0.8457 - val_accuracy: 0.8583\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0289 - accuracy: 0.9924 - val_loss: 0.7319 - val_accuracy: 0.8679\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0237 - accuracy: 0.9923 - val_loss: 0.7325 - val_accuracy: 0.8608\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0306 - accuracy: 0.9898 - val_loss: 0.7860 - val_accuracy: 0.8600\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0189 - accuracy: 0.9946 - val_loss: 0.7621 - val_accuracy: 0.8579\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0318 - accuracy: 0.9897 - val_loss: 0.8137 - val_accuracy: 0.8529\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0358 - accuracy: 0.9877 - val_loss: 0.7939 - val_accuracy: 0.8550\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0287 - accuracy: 0.9902 - val_loss: 0.6962 - val_accuracy: 0.8767\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0222 - accuracy: 0.9929 - val_loss: 0.7854 - val_accuracy: 0.8537\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0181 - accuracy: 0.9955 - val_loss: 0.6735 - val_accuracy: 0.8742\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0252 - accuracy: 0.9924 - val_loss: 0.7842 - val_accuracy: 0.8525\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0295 - accuracy: 0.9907 - val_loss: 0.7499 - val_accuracy: 0.8683\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0184 - accuracy: 0.9945 - val_loss: 0.7468 - val_accuracy: 0.8621\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0192 - accuracy: 0.9944 - val_loss: 0.8972 - val_accuracy: 0.8562\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0431 - accuracy: 0.9850 - val_loss: 1.0398 - val_accuracy: 0.8454\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0527 - accuracy: 0.9809 - val_loss: 0.9719 - val_accuracy: 0.8521\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0224 - accuracy: 0.9927 - val_loss: 0.7353 - val_accuracy: 0.8633\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0196 - accuracy: 0.9939 - val_loss: 0.7896 - val_accuracy: 0.8642\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0461 - accuracy: 0.9829 - val_loss: 0.7995 - val_accuracy: 0.8612\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0305 - accuracy: 0.9904 - val_loss: 0.8514 - val_accuracy: 0.8504\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0265 - accuracy: 0.9908 - val_loss: 0.8472 - val_accuracy: 0.8558\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0362 - accuracy: 0.9878 - val_loss: 0.8194 - val_accuracy: 0.8558\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0250 - accuracy: 0.9916 - val_loss: 0.7921 - val_accuracy: 0.8550\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0427 - accuracy: 0.9845 - val_loss: 0.7141 - val_accuracy: 0.8687\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0114 - accuracy: 0.9980 - val_loss: 0.6901 - val_accuracy: 0.8796\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0266 - accuracy: 0.9922 - val_loss: 0.8633 - val_accuracy: 0.8413\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0462 - accuracy: 0.9844 - val_loss: 0.7935 - val_accuracy: 0.8604\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0229 - accuracy: 0.9924 - val_loss: 0.7603 - val_accuracy: 0.8567\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0260 - accuracy: 0.9920 - val_loss: 0.8868 - val_accuracy: 0.8700\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0218 - accuracy: 0.9926 - val_loss: 0.8753 - val_accuracy: 0.8625\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0200 - accuracy: 0.9939 - val_loss: 0.9017 - val_accuracy: 0.8662\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0501 - accuracy: 0.9823 - val_loss: 0.8186 - val_accuracy: 0.8571\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0244 - accuracy: 0.9927 - val_loss: 0.7752 - val_accuracy: 0.8671\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 2s 8ms/step - loss: 0.0271 - accuracy: 0.9907 - val_loss: 0.7672 - val_accuracy: 0.8650\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 2s 5ms/step - loss: 0.0207 - accuracy: 0.9936 - val_loss: 0.7916 - val_accuracy: 0.8604\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0372 - accuracy: 0.9880 - val_loss: 0.9040 - val_accuracy: 0.8517\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0484 - accuracy: 0.9830 - val_loss: 0.8166 - val_accuracy: 0.8496\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0342 - accuracy: 0.9897 - val_loss: 0.6985 - val_accuracy: 0.8692\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0407 - accuracy: 0.9858 - val_loss: 0.7197 - val_accuracy: 0.8704\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0116 - accuracy: 0.9973 - val_loss: 0.7075 - val_accuracy: 0.8746\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0383 - accuracy: 0.9861 - val_loss: 0.8130 - val_accuracy: 0.8571\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0337 - accuracy: 0.9878 - val_loss: 0.8049 - val_accuracy: 0.8683\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0300 - accuracy: 0.9903 - val_loss: 0.7741 - val_accuracy: 0.8671\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0192 - accuracy: 0.9953 - val_loss: 0.8862 - val_accuracy: 0.8633\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0137 - accuracy: 0.9964 - val_loss: 0.9646 - val_accuracy: 0.8512\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0375 - accuracy: 0.9862 - val_loss: 1.0632 - val_accuracy: 0.8521\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0195 - accuracy: 0.9944 - val_loss: 0.7937 - val_accuracy: 0.8650\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0184 - accuracy: 0.9935 - val_loss: 0.7963 - val_accuracy: 0.8625\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0219 - accuracy: 0.9934 - val_loss: 0.8316 - val_accuracy: 0.8425\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0285 - accuracy: 0.9903 - val_loss: 0.8476 - val_accuracy: 0.8567\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0236 - accuracy: 0.9911 - val_loss: 0.8395 - val_accuracy: 0.8596\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0159 - accuracy: 0.9960 - val_loss: 0.9262 - val_accuracy: 0.8508\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0180 - accuracy: 0.9950 - val_loss: 0.7403 - val_accuracy: 0.8637\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0188 - accuracy: 0.9934 - val_loss: 0.7558 - val_accuracy: 0.8712\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0139 - accuracy: 0.9967 - val_loss: 0.7123 - val_accuracy: 0.8729\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0151 - accuracy: 0.9957 - val_loss: 0.7702 - val_accuracy: 0.8662\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0200 - accuracy: 0.9936 - val_loss: 0.8774 - val_accuracy: 0.8458\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0304 - accuracy: 0.9904 - val_loss: 0.8026 - val_accuracy: 0.8496\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 5ms/step - loss: 0.0412 - accuracy: 0.9845 - val_loss: 0.9190 - val_accuracy: 0.8637\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 2s 6ms/step - loss: 0.0565 - accuracy: 0.9803 - val_loss: 0.9475 - val_accuracy: 0.8612\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 2s 8ms/step - loss: 0.0125 - accuracy: 0.9960 - val_loss: 0.9742 - val_accuracy: 0.8696\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 2s 8ms/step - loss: 0.0345 - accuracy: 0.9874 - val_loss: 0.8136 - val_accuracy: 0.8571\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0232 - accuracy: 0.9921 - val_loss: 0.7929 - val_accuracy: 0.8658\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0184 - accuracy: 0.9943 - val_loss: 0.8614 - val_accuracy: 0.8554\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0529 - accuracy: 0.9826 - val_loss: 0.8303 - val_accuracy: 0.8612\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0236 - accuracy: 0.9923 - val_loss: 0.9097 - val_accuracy: 0.8546\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0309 - accuracy: 0.9891 - val_loss: 0.8506 - val_accuracy: 0.8575\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0307 - accuracy: 0.9900 - val_loss: 0.7671 - val_accuracy: 0.8687\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0220 - accuracy: 0.9921 - val_loss: 0.7744 - val_accuracy: 0.8712\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0449 - accuracy: 0.9842 - val_loss: 0.7312 - val_accuracy: 0.8712\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0217 - accuracy: 0.9932 - val_loss: 0.8438 - val_accuracy: 0.8650\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0379 - accuracy: 0.9874 - val_loss: 0.7994 - val_accuracy: 0.8671\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0251 - accuracy: 0.9919 - val_loss: 0.7773 - val_accuracy: 0.8679\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0122 - accuracy: 0.9965 - val_loss: 0.9523 - val_accuracy: 0.8667\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0175 - accuracy: 0.9950 - val_loss: 0.9915 - val_accuracy: 0.8646\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0070 - accuracy: 0.9989 - val_loss: 0.9721 - val_accuracy: 0.8671\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0452 - accuracy: 0.9833 - val_loss: 0.8276 - val_accuracy: 0.8529\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0210 - accuracy: 0.9935 - val_loss: 0.8110 - val_accuracy: 0.8592\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0178 - accuracy: 0.9944 - val_loss: 0.7848 - val_accuracy: 0.8608\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0128 - accuracy: 0.9974 - val_loss: 0.8539 - val_accuracy: 0.8579\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0131 - accuracy: 0.9964 - val_loss: 0.8844 - val_accuracy: 0.8583\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0157 - accuracy: 0.9954 - val_loss: 0.8581 - val_accuracy: 0.8579\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0186 - accuracy: 0.9952 - val_loss: 0.7371 - val_accuracy: 0.8737\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0089 - accuracy: 0.9977 - val_loss: 0.7403 - val_accuracy: 0.8767\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0086 - accuracy: 0.9979 - val_loss: 0.7048 - val_accuracy: 0.8800\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0106 - accuracy: 0.9974 - val_loss: 0.8157 - val_accuracy: 0.8662\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0183 - accuracy: 0.9952 - val_loss: 0.8585 - val_accuracy: 0.8567\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0390 - accuracy: 0.9858 - val_loss: 0.8455 - val_accuracy: 0.8721\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0144 - accuracy: 0.9957 - val_loss: 0.9525 - val_accuracy: 0.8604\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0519 - accuracy: 0.9831 - val_loss: 1.0958 - val_accuracy: 0.8479\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0403 - accuracy: 0.9865 - val_loss: 1.0017 - val_accuracy: 0.8579\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0145 - accuracy: 0.9951 - val_loss: 0.7947 - val_accuracy: 0.8646\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0200 - accuracy: 0.9930 - val_loss: 0.8149 - val_accuracy: 0.8654\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0138 - accuracy: 0.9964 - val_loss: 0.8201 - val_accuracy: 0.8650\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0388 - accuracy: 0.9851 - val_loss: 0.8963 - val_accuracy: 0.8471\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0353 - accuracy: 0.9876 - val_loss: 0.8885 - val_accuracy: 0.8600\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0101 - accuracy: 0.9974 - val_loss: 0.9022 - val_accuracy: 0.8529\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0164 - accuracy: 0.9949 - val_loss: 0.7693 - val_accuracy: 0.8675\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0478 - accuracy: 0.9839 - val_loss: 0.8330 - val_accuracy: 0.8687\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0353 - accuracy: 0.9876 - val_loss: 0.7322 - val_accuracy: 0.8725\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0185 - accuracy: 0.9934 - val_loss: 0.8285 - val_accuracy: 0.8696\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0179 - accuracy: 0.9946 - val_loss: 0.8775 - val_accuracy: 0.8554\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0335 - accuracy: 0.9881 - val_loss: 0.8214 - val_accuracy: 0.8633\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0141 - accuracy: 0.9959 - val_loss: 0.9707 - val_accuracy: 0.8525\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0184 - accuracy: 0.9944 - val_loss: 0.9937 - val_accuracy: 0.8625\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0140 - accuracy: 0.9961 - val_loss: 1.0866 - val_accuracy: 0.8567\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0413 - accuracy: 0.9854 - val_loss: 0.7949 - val_accuracy: 0.8587\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0271 - accuracy: 0.9917 - val_loss: 0.8159 - val_accuracy: 0.8608\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0115 - accuracy: 0.9970 - val_loss: 0.8069 - val_accuracy: 0.8646\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0133 - accuracy: 0.9966 - val_loss: 0.9503 - val_accuracy: 0.8454\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0532 - accuracy: 0.9809 - val_loss: 0.9161 - val_accuracy: 0.8462\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0278 - accuracy: 0.9910 - val_loss: 0.8818 - val_accuracy: 0.8525\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0052 - accuracy: 0.9996 - val_loss: 0.7466 - val_accuracy: 0.8763\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0124 - accuracy: 0.9966 - val_loss: 0.8361 - val_accuracy: 0.8637\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0356 - accuracy: 0.9875 - val_loss: 0.7752 - val_accuracy: 0.8687\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0098 - accuracy: 0.9981 - val_loss: 0.8032 - val_accuracy: 0.8696\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0234 - accuracy: 0.9925 - val_loss: 0.9782 - val_accuracy: 0.8537\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0493 - accuracy: 0.9828 - val_loss: 0.8606 - val_accuracy: 0.8646\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0339 - accuracy: 0.9875 - val_loss: 1.1221 - val_accuracy: 0.8521\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0298 - accuracy: 0.9897 - val_loss: 1.0205 - val_accuracy: 0.8554\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0104 - accuracy: 0.9971 - val_loss: 0.9942 - val_accuracy: 0.8662\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0065 - accuracy: 0.9990 - val_loss: 0.8420 - val_accuracy: 0.8696\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0235 - accuracy: 0.9924 - val_loss: 1.0936 - val_accuracy: 0.8400\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0753 - accuracy: 0.9754 - val_loss: 0.8010 - val_accuracy: 0.8629\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0164 - accuracy: 0.9947 - val_loss: 0.8936 - val_accuracy: 0.8612\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0207 - accuracy: 0.9926 - val_loss: 0.9204 - val_accuracy: 0.8575\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0119 - accuracy: 0.9969 - val_loss: 0.8772 - val_accuracy: 0.8604\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0373 - accuracy: 0.9873 - val_loss: 0.7441 - val_accuracy: 0.8771\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0139 - accuracy: 0.9959 - val_loss: 0.7959 - val_accuracy: 0.8737\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0105 - accuracy: 0.9970 - val_loss: 0.7271 - val_accuracy: 0.8767\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0166 - accuracy: 0.9955 - val_loss: 0.9879 - val_accuracy: 0.8487\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0170 - accuracy: 0.9947 - val_loss: 0.8391 - val_accuracy: 0.8733\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0224 - accuracy: 0.9929 - val_loss: 0.8547 - val_accuracy: 0.8662\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0037 - accuracy: 0.9997 - val_loss: 1.0082 - val_accuracy: 0.8679\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0129 - accuracy: 0.9957 - val_loss: 1.0443 - val_accuracy: 0.8629\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0475 - accuracy: 0.9855 - val_loss: 1.0703 - val_accuracy: 0.8537\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0132 - accuracy: 0.9959 - val_loss: 0.8147 - val_accuracy: 0.8742\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0056 - accuracy: 0.9986 - val_loss: 0.8411 - val_accuracy: 0.8642\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0163 - accuracy: 0.9945 - val_loss: 0.8329 - val_accuracy: 0.8654\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0198 - accuracy: 0.9942 - val_loss: 0.8844 - val_accuracy: 0.8604\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0289 - accuracy: 0.9910 - val_loss: 0.9330 - val_accuracy: 0.8521\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0172 - accuracy: 0.9945 - val_loss: 0.9520 - val_accuracy: 0.8583\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0065 - accuracy: 0.9986 - val_loss: 0.7401 - val_accuracy: 0.8779\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0031 - accuracy: 0.9999 - val_loss: 0.7694 - val_accuracy: 0.8767\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0033 - accuracy: 0.9997 - val_loss: 0.7724 - val_accuracy: 0.8721\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0236 - accuracy: 0.9922 - val_loss: 0.9502 - val_accuracy: 0.8571\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0312 - accuracy: 0.9887 - val_loss: 0.8656 - val_accuracy: 0.8675\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0211 - accuracy: 0.9928 - val_loss: 0.8202 - val_accuracy: 0.8700\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0269 - accuracy: 0.9919 - val_loss: 1.0468 - val_accuracy: 0.8571\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0091 - accuracy: 0.9980 - val_loss: 1.0010 - val_accuracy: 0.8592\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0190 - accuracy: 0.9930 - val_loss: 1.0976 - val_accuracy: 0.8554\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 5ms/step - loss: 0.0077 - accuracy: 0.9981 - val_loss: 0.8180 - val_accuracy: 0.8750\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 2s 5ms/step - loss: 0.0093 - accuracy: 0.9980 - val_loss: 0.8438 - val_accuracy: 0.8654\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 2s 5ms/step - loss: 0.0464 - accuracy: 0.9846 - val_loss: 0.9383 - val_accuracy: 0.8542\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0198 - accuracy: 0.9942 - val_loss: 0.9761 - val_accuracy: 0.8450\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0571 - accuracy: 0.9814 - val_loss: 0.9167 - val_accuracy: 0.8533\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0073 - accuracy: 0.9985 - val_loss: 0.9295 - val_accuracy: 0.8621\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0889 - accuracy: 0.9712 - val_loss: 0.8635 - val_accuracy: 0.8583\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0180 - accuracy: 0.9956 - val_loss: 0.7676 - val_accuracy: 0.8750\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0051 - accuracy: 0.9993 - val_loss: 0.7861 - val_accuracy: 0.8742\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0159 - accuracy: 0.9959 - val_loss: 0.9001 - val_accuracy: 0.8625\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0312 - accuracy: 0.9885 - val_loss: 0.9382 - val_accuracy: 0.8533\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0247 - accuracy: 0.9908 - val_loss: 0.9122 - val_accuracy: 0.8508\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0325 - accuracy: 0.9889 - val_loss: 1.0456 - val_accuracy: 0.8592\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0125 - accuracy: 0.9961 - val_loss: 1.0826 - val_accuracy: 0.8625\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0130 - accuracy: 0.9961 - val_loss: 1.0575 - val_accuracy: 0.8592\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0456 - accuracy: 0.9832 - val_loss: 0.9059 - val_accuracy: 0.8596\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0152 - accuracy: 0.9947 - val_loss: 0.8469 - val_accuracy: 0.8658\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0085 - accuracy: 0.9979 - val_loss: 0.8418 - val_accuracy: 0.8646\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0052 - accuracy: 0.9994 - val_loss: 0.9388 - val_accuracy: 0.8583\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0151 - accuracy: 0.9947 - val_loss: 0.9107 - val_accuracy: 0.8600\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0464 - accuracy: 0.9835 - val_loss: 0.9108 - val_accuracy: 0.8525\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0035 - accuracy: 0.9995 - val_loss: 0.7650 - val_accuracy: 0.8754\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0109 - accuracy: 0.9965 - val_loss: 0.8563 - val_accuracy: 0.8700\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0345 - accuracy: 0.9886 - val_loss: 0.7919 - val_accuracy: 0.8758\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0196 - accuracy: 0.9942 - val_loss: 0.9085 - val_accuracy: 0.8637\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0169 - accuracy: 0.9941 - val_loss: 0.8709 - val_accuracy: 0.8650\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0077 - accuracy: 0.9981 - val_loss: 0.8796 - val_accuracy: 0.8675\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0094 - accuracy: 0.9975 - val_loss: 1.0351 - val_accuracy: 0.8608\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0259 - accuracy: 0.9914 - val_loss: 1.1127 - val_accuracy: 0.8592\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0409 - accuracy: 0.9867 - val_loss: 1.0259 - val_accuracy: 0.8646\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0074 - accuracy: 0.9982 - val_loss: 0.8781 - val_accuracy: 0.8654\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0381 - accuracy: 0.9875 - val_loss: 0.9043 - val_accuracy: 0.8550\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0301 - accuracy: 0.9896 - val_loss: 0.9207 - val_accuracy: 0.8637\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0316 - accuracy: 0.9884 - val_loss: 0.9985 - val_accuracy: 0.8467\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0186 - accuracy: 0.9944 - val_loss: 0.9561 - val_accuracy: 0.8579\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0053 - accuracy: 0.9994 - val_loss: 0.9362 - val_accuracy: 0.8592\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0126 - accuracy: 0.9968 - val_loss: 0.7624 - val_accuracy: 0.8721\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0237 - accuracy: 0.9927 - val_loss: 0.8698 - val_accuracy: 0.8687\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0263 - accuracy: 0.9911 - val_loss: 0.8469 - val_accuracy: 0.8633\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0087 - accuracy: 0.9975 - val_loss: 0.9175 - val_accuracy: 0.8608\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0194 - accuracy: 0.9948 - val_loss: 0.8883 - val_accuracy: 0.8692\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0180 - accuracy: 0.9947 - val_loss: 0.9311 - val_accuracy: 0.8629\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0156 - accuracy: 0.9949 - val_loss: 1.0670 - val_accuracy: 0.8642\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0043 - accuracy: 0.9993 - val_loss: 1.1738 - val_accuracy: 0.8521\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0444 - accuracy: 0.9855 - val_loss: 1.1360 - val_accuracy: 0.8592\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0095 - accuracy: 0.9973 - val_loss: 0.8828 - val_accuracy: 0.8667\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0097 - accuracy: 0.9974 - val_loss: 0.8624 - val_accuracy: 0.8675\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0036 - accuracy: 0.9992 - val_loss: 0.8858 - val_accuracy: 0.8721\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0043 - accuracy: 0.9993 - val_loss: 0.9566 - val_accuracy: 0.8587\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0262 - accuracy: 0.9907 - val_loss: 0.9936 - val_accuracy: 0.8508\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0231 - accuracy: 0.9924 - val_loss: 1.1294 - val_accuracy: 0.8500\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0105 - accuracy: 0.9975 - val_loss: 0.7658 - val_accuracy: 0.8737\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0023 - accuracy: 0.9999 - val_loss: 0.8349 - val_accuracy: 0.8708\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0179 - accuracy: 0.9945 - val_loss: 0.7664 - val_accuracy: 0.8725\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0695 - accuracy: 0.9776 - val_loss: 0.9112 - val_accuracy: 0.8600\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0113 - accuracy: 0.9970 - val_loss: 0.8952 - val_accuracy: 0.8704\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0026 - accuracy: 1.0000 - val_loss: 0.9039 - val_accuracy: 0.8692\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0204 - accuracy: 0.9927 - val_loss: 1.0284 - val_accuracy: 0.8592\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0073 - accuracy: 0.9978 - val_loss: 1.0997 - val_accuracy: 0.8562\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0034 - accuracy: 0.9997 - val_loss: 1.1091 - val_accuracy: 0.8604\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0024 - accuracy: 0.9997 - val_loss: 0.8844 - val_accuracy: 0.8708\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0488 - accuracy: 0.9840 - val_loss: 0.8980 - val_accuracy: 0.8604\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0345 - accuracy: 0.9887 - val_loss: 0.9455 - val_accuracy: 0.8600\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0574 - accuracy: 0.9825 - val_loss: 1.0351 - val_accuracy: 0.8454\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0213 - accuracy: 0.9928 - val_loss: 0.9595 - val_accuracy: 0.8558\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0108 - accuracy: 0.9968 - val_loss: 0.9635 - val_accuracy: 0.8567\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0184 - accuracy: 0.9942 - val_loss: 0.8389 - val_accuracy: 0.8708\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0411 - accuracy: 0.9848 - val_loss: 0.9268 - val_accuracy: 0.8542\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0369 - accuracy: 0.9883 - val_loss: 0.8250 - val_accuracy: 0.8717\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0109 - accuracy: 0.9958 - val_loss: 0.9642 - val_accuracy: 0.8512\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0271 - accuracy: 0.9916 - val_loss: 1.0094 - val_accuracy: 0.8462\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0173 - accuracy: 0.9945 - val_loss: 0.9371 - val_accuracy: 0.8750\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0027 - accuracy: 0.9996 - val_loss: 1.0931 - val_accuracy: 0.8646\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0409 - accuracy: 0.9851 - val_loss: 1.1204 - val_accuracy: 0.8562\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0265 - accuracy: 0.9931 - val_loss: 1.1384 - val_accuracy: 0.8579\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0272 - accuracy: 0.9900 - val_loss: 0.8824 - val_accuracy: 0.8654\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0079 - accuracy: 0.9975 - val_loss: 0.8794 - val_accuracy: 0.8654\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0032 - accuracy: 0.9995 - val_loss: 0.9052 - val_accuracy: 0.8679\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0089 - accuracy: 0.9975 - val_loss: 0.9602 - val_accuracy: 0.8575\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0053 - accuracy: 0.9989 - val_loss: 0.9690 - val_accuracy: 0.8600\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0031 - accuracy: 0.9999 - val_loss: 0.9777 - val_accuracy: 0.8612\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0081 - accuracy: 0.9977 - val_loss: 0.8123 - val_accuracy: 0.8783\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0026 - accuracy: 0.9998 - val_loss: 0.7943 - val_accuracy: 0.8788\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0017 - accuracy: 1.0000 - val_loss: 0.7987 - val_accuracy: 0.8796\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0381 - accuracy: 0.9874 - val_loss: 0.9514 - val_accuracy: 0.8562\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0159 - accuracy: 0.9953 - val_loss: 0.9592 - val_accuracy: 0.8637\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0090 - accuracy: 0.9975 - val_loss: 0.9297 - val_accuracy: 0.8742\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0054 - accuracy: 0.9993 - val_loss: 1.1102 - val_accuracy: 0.8646\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 2s 5ms/step - loss: 0.0044 - accuracy: 0.9990 - val_loss: 1.1259 - val_accuracy: 0.8646\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 5ms/step - loss: 0.0057 - accuracy: 0.9992 - val_loss: 1.1970 - val_accuracy: 0.8567\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0024 - accuracy: 0.9998 - val_loss: 1.0132 - val_accuracy: 0.8583\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0303 - accuracy: 0.9893 - val_loss: 0.9621 - val_accuracy: 0.8587\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0361 - accuracy: 0.9889 - val_loss: 0.8960 - val_accuracy: 0.8637\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0026 - accuracy: 0.9997 - val_loss: 0.9947 - val_accuracy: 0.8592\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0838 - accuracy: 0.9756 - val_loss: 0.9750 - val_accuracy: 0.8450\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0216 - accuracy: 0.9929 - val_loss: 0.9890 - val_accuracy: 0.8612\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0012 - accuracy: 1.0000 - val_loss: 0.8187 - val_accuracy: 0.8775\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0011 - accuracy: 1.0000 - val_loss: 0.8128 - val_accuracy: 0.8771\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0012 - accuracy: 1.0000 - val_loss: 0.8489 - val_accuracy: 0.8754\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0026 - accuracy: 0.9997 - val_loss: 0.9829 - val_accuracy: 0.8600\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0364 - accuracy: 0.9878 - val_loss: 0.9748 - val_accuracy: 0.8646\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0157 - accuracy: 0.9952 - val_loss: 0.9250 - val_accuracy: 0.8737\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.1143 - accuracy: 0.9653 - val_loss: 1.1046 - val_accuracy: 0.8583\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0158 - accuracy: 0.9950 - val_loss: 1.1322 - val_accuracy: 0.8621\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0081 - accuracy: 0.9978 - val_loss: 1.1185 - val_accuracy: 0.8617\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0062 - accuracy: 0.9984 - val_loss: 0.8881 - val_accuracy: 0.8637\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0272 - accuracy: 0.9911 - val_loss: 0.8681 - val_accuracy: 0.8679\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0090 - accuracy: 0.9970 - val_loss: 0.9390 - val_accuracy: 0.8625\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0239 - accuracy: 0.9904 - val_loss: 0.9756 - val_accuracy: 0.8583\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0049 - accuracy: 0.9994 - val_loss: 1.0323 - val_accuracy: 0.8604\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0033 - accuracy: 0.9993 - val_loss: 1.0225 - val_accuracy: 0.8621\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0554 - accuracy: 0.9840 - val_loss: 0.9456 - val_accuracy: 0.8625\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0492 - accuracy: 0.9819 - val_loss: 0.8656 - val_accuracy: 0.8679\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0207 - accuracy: 0.9940 - val_loss: 0.7903 - val_accuracy: 0.8729\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0031 - accuracy: 0.9997 - val_loss: 0.9358 - val_accuracy: 0.8658\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0033 - accuracy: 0.9995 - val_loss: 0.9313 - val_accuracy: 0.8712\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0114 - accuracy: 0.9967 - val_loss: 0.9279 - val_accuracy: 0.8667\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0037 - accuracy: 0.9994 - val_loss: 1.0902 - val_accuracy: 0.8667\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 5ms/step - loss: 0.0025 - accuracy: 0.9998 - val_loss: 1.1198 - val_accuracy: 0.8650\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0017 - accuracy: 1.0000 - val_loss: 1.1366 - val_accuracy: 0.8671\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0149 - accuracy: 0.9958 - val_loss: 0.9482 - val_accuracy: 0.8621\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0167 - accuracy: 0.9943 - val_loss: 0.9203 - val_accuracy: 0.8637\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0247 - accuracy: 0.9900 - val_loss: 0.9930 - val_accuracy: 0.8567\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0027 - accuracy: 0.9996 - val_loss: 1.0231 - val_accuracy: 0.8575\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0420 - accuracy: 0.9875 - val_loss: 1.0728 - val_accuracy: 0.8371\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0619 - accuracy: 0.9796 - val_loss: 1.0451 - val_accuracy: 0.8475\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0071 - accuracy: 0.9992 - val_loss: 0.8036 - val_accuracy: 0.8737\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0025 - accuracy: 1.0000 - val_loss: 0.8102 - val_accuracy: 0.8767\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0018 - accuracy: 1.0000 - val_loss: 0.8061 - val_accuracy: 0.8796\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0481 - accuracy: 0.9836 - val_loss: 0.9763 - val_accuracy: 0.8621\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0207 - accuracy: 0.9937 - val_loss: 0.9775 - val_accuracy: 0.8646\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0034 - accuracy: 0.9996 - val_loss: 0.9319 - val_accuracy: 0.8733\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0069 - accuracy: 0.9983 - val_loss: 1.1585 - val_accuracy: 0.8471\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0773 - accuracy: 0.9740 - val_loss: 1.1296 - val_accuracy: 0.8554\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0162 - accuracy: 0.9952 - val_loss: 1.0861 - val_accuracy: 0.8587\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0132 - accuracy: 0.9957 - val_loss: 0.9081 - val_accuracy: 0.8621\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0042 - accuracy: 0.9991 - val_loss: 0.9413 - val_accuracy: 0.8592\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0025 - accuracy: 0.9996 - val_loss: 0.9181 - val_accuracy: 0.8662\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0239 - accuracy: 0.9928 - val_loss: 1.0048 - val_accuracy: 0.8562\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0058 - accuracy: 0.9991 - val_loss: 1.0736 - val_accuracy: 0.8550\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0043 - accuracy: 0.9989 - val_loss: 1.0517 - val_accuracy: 0.8562\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0013 - accuracy: 1.0000 - val_loss: 0.8073 - val_accuracy: 0.8796\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0043 - accuracy: 0.9987 - val_loss: 0.8633 - val_accuracy: 0.8725\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0772 - accuracy: 0.9758 - val_loss: 0.7874 - val_accuracy: 0.8700\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0038 - accuracy: 0.9989 - val_loss: 1.0198 - val_accuracy: 0.8608\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0724 - accuracy: 0.9766 - val_loss: 0.9691 - val_accuracy: 0.8600\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0207 - accuracy: 0.9941 - val_loss: 0.9536 - val_accuracy: 0.8692\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 5ms/step - loss: 0.0028 - accuracy: 0.9997 - val_loss: 1.1561 - val_accuracy: 0.8600\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0019 - accuracy: 0.9999 - val_loss: 1.1483 - val_accuracy: 0.8662\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0018 - accuracy: 0.9998 - val_loss: 1.1879 - val_accuracy: 0.8612\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0038 - accuracy: 0.9987 - val_loss: 1.0231 - val_accuracy: 0.8462\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0574 - accuracy: 0.9821 - val_loss: 1.0033 - val_accuracy: 0.8579\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0372 - accuracy: 0.9889 - val_loss: 0.9301 - val_accuracy: 0.8667\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0063 - accuracy: 0.9985 - val_loss: 1.0344 - val_accuracy: 0.8604\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0046 - accuracy: 0.9989 - val_loss: 1.0689 - val_accuracy: 0.8546\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0525 - accuracy: 0.9850 - val_loss: 1.0498 - val_accuracy: 0.8487\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0163 - accuracy: 0.9951 - val_loss: 0.7799 - val_accuracy: 0.8758\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 5ms/step - loss: 0.0069 - accuracy: 0.9985 - val_loss: 0.7768 - val_accuracy: 0.8825\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0021 - accuracy: 0.9999 - val_loss: 0.8014 - val_accuracy: 0.8825\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0024 - accuracy: 0.9998 - val_loss: 0.9525 - val_accuracy: 0.8746\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0012 - accuracy: 1.0000 - val_loss: 0.9642 - val_accuracy: 0.8712\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0031 - accuracy: 0.9995 - val_loss: 0.9704 - val_accuracy: 0.8704\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0415 - accuracy: 0.9873 - val_loss: 1.1353 - val_accuracy: 0.8546\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0359 - accuracy: 0.9886 - val_loss: 1.1793 - val_accuracy: 0.8633\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0066 - accuracy: 0.9982 - val_loss: 1.2434 - val_accuracy: 0.8600\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0036 - accuracy: 0.9995 - val_loss: 0.9238 - val_accuracy: 0.8754\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0015 - accuracy: 0.9999 - val_loss: 0.9382 - val_accuracy: 0.8758\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0111 - accuracy: 0.9965 - val_loss: 0.9686 - val_accuracy: 0.8658\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0336 - accuracy: 0.9889 - val_loss: 1.0388 - val_accuracy: 0.8504\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0048 - accuracy: 0.9995 - val_loss: 1.0104 - val_accuracy: 0.8596\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0023 - accuracy: 0.9998 - val_loss: 1.0201 - val_accuracy: 0.8554\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0014 - accuracy: 1.0000 - val_loss: 0.8092 - val_accuracy: 0.8804\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 9.6919e-04 - accuracy: 1.0000 - val_loss: 0.8179 - val_accuracy: 0.8813\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 9.2929e-04 - accuracy: 1.0000 - val_loss: 0.8175 - val_accuracy: 0.8808\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0016 - accuracy: 0.9999 - val_loss: 0.9723 - val_accuracy: 0.8733\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0062 - accuracy: 0.9982 - val_loss: 0.9245 - val_accuracy: 0.8667\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 2s 6ms/step - loss: 0.0930 - accuracy: 0.9722 - val_loss: 0.9761 - val_accuracy: 0.8612\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 2s 6ms/step - loss: 0.0032 - accuracy: 0.9995 - val_loss: 1.1717 - val_accuracy: 0.8667\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0090 - accuracy: 0.9972 - val_loss: 1.3359 - val_accuracy: 0.8600\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 3ms/step - loss: 0.0619 - accuracy: 0.9819 - val_loss: 1.1488 - val_accuracy: 0.8637\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0083 - accuracy: 0.9974 - val_loss: 0.9484 - val_accuracy: 0.8712\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0397 - accuracy: 0.9886 - val_loss: 0.9507 - val_accuracy: 0.8567\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0143 - accuracy: 0.9948 - val_loss: 0.9746 - val_accuracy: 0.8654\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0031 - accuracy: 0.9990 - val_loss: 1.1164 - val_accuracy: 0.8612\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0724 - accuracy: 0.9771 - val_loss: 1.0025 - val_accuracy: 0.8496\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0167 - accuracy: 0.9945 - val_loss: 0.9964 - val_accuracy: 0.8562\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 8.3478e-04 - accuracy: 1.0000 - val_loss: 0.8257 - val_accuracy: 0.8800\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 8.4860e-04 - accuracy: 1.0000 - val_loss: 0.8241 - val_accuracy: 0.8813\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0700 - accuracy: 0.9774 - val_loss: 0.8885 - val_accuracy: 0.8617\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0330 - accuracy: 0.9891 - val_loss: 0.9165 - val_accuracy: 0.8725\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0100 - accuracy: 0.9970 - val_loss: 0.9365 - val_accuracy: 0.8712\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0022 - accuracy: 0.9998 - val_loss: 0.9721 - val_accuracy: 0.8721\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0080 - accuracy: 0.9976 - val_loss: 1.1800 - val_accuracy: 0.8658\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0028 - accuracy: 0.9995 - val_loss: 1.1682 - val_accuracy: 0.8671\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0074 - accuracy: 0.9978 - val_loss: 1.1897 - val_accuracy: 0.8662\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0095 - accuracy: 0.9970 - val_loss: 0.9921 - val_accuracy: 0.8625\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0020 - accuracy: 0.9997 - val_loss: 1.0155 - val_accuracy: 0.8646\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0046 - accuracy: 0.9990 - val_loss: 1.0784 - val_accuracy: 0.8608\n",
            "Epoch 1/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0040 - accuracy: 0.9993 - val_loss: 0.9991 - val_accuracy: 0.8537\n",
            "Epoch 2/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0025 - accuracy: 0.9995 - val_loss: 1.0177 - val_accuracy: 0.8562\n",
            "Epoch 3/3\n",
            "300/300 [==============================] - 1s 4ms/step - loss: 0.0022 - accuracy: 0.9997 - val_loss: 1.0179 - val_accuracy: 0.8558\n",
            "313/313 - 1s - loss: 280.3794 - accuracy: 0.8358 - 713ms/epoch - 2ms/step\n",
            "313/313 - 1s - loss: 273.9859 - accuracy: 0.8515 - 686ms/epoch - 2ms/step\n",
            "313/313 - 1s - loss: 283.2331 - accuracy: 0.8503 - 666ms/epoch - 2ms/step\n",
            "313/313 - 1s - loss: 327.7093 - accuracy: 0.8280 - 622ms/epoch - 2ms/step\n",
            "313/313 - 1s - loss: 286.7740 - accuracy: 0.8491 - 655ms/epoch - 2ms/step\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[286.77398681640625, 0.8490999937057495]"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "class_names = ['T-shirt/top', 'Trouser', 'Pullover', 'Dress', 'Coat', 'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']\n",
        "plt.figure(figsize=(10,10)) \n",
        "for i in range(36):\n",
        "  plt.subplot(6,6,i+1)\n",
        "  plt.xticks([])\n",
        "  plt.yticks([])\n",
        "  plt.grid(False)\n",
        "  plt.imshow(test_images[i], cmap=plt.cm.binary) \n",
        "  plt.xlabel(class_names[test_labels[i]])\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 589
        },
        "id": "jYLcIHfe6E9M",
        "outputId": "df0408b2-235d-482f-95d7-b5d8ef6207e5"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x720 with 36 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "probability_model = tf.keras.Sequential([model1, tf.keras.layers.Softmax()])\n",
        "predictions = probability_model.predict(test_images) \n",
        "predictions[9]\n",
        "np.argmax(predictions[9])\n",
        "test_labels[9]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xiv89swm6ViU",
        "outputId": "0f9efa4a-ea4d-4733-e673-6762504ca81f"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "7"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def plot_image(i, predictions_array, true_label, img): \n",
        "  true_label, img = true_label[i], img[i]\n",
        "  plt.grid(False) \n",
        "  plt.xticks([]) \n",
        "  plt.yticks([])\n",
        "  plt.imshow(img, cmap=plt.cm.binary)\n",
        "  predicted_label = np.argmax(predictions_array) \n",
        "  if predicted_label == true_label:\n",
        "    color = 'blue' \n",
        "  else:\n",
        "    color = 'red'\n",
        "  plt.xlabel(\"{} {:2.0f}% ({})\".format(class_names[predicted_label], 100*np.max(predictions_array), class_names[true_label]), color=color)\n",
        "def plot_value_array(i, predictions_array, true_label): \n",
        "  true_label = true_label[i]\n",
        "  plt.grid(False)\n",
        "  plt.xticks(range(10))\n",
        "  plt.yticks([])\n",
        "  thisplot = plt.bar(range(10), predictions_array, color=\"#777777\") \n",
        "  plt.ylim([0, 1])\n",
        "  predicted_label = np.argmax(predictions_array)\n",
        "  thisplot[predicted_label].set_color('red') \n",
        "  thisplot[true_label].set_color('blue')"
      ],
      "metadata": {
        "id": "vcUo6xAX6lzE"
      },
      "execution_count": 27,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "i= 8\n",
        "plt.figure(figsize=(6,3))\n",
        "plt.subplot(1,2,1)\n",
        "plot_image(i, predictions[i], test_labels, test_images) \n",
        "plt.subplot(1,2,2)\n",
        "plot_value_array(i, predictions[i], test_labels) \n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 211
        },
        "id": "XWWTWtJA7Me-",
        "outputId": "435c99a7-ee0c-44a5-a1eb-06a704645e37"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x216 with 2 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "RKc7xaU27Uih"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}